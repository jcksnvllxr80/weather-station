

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jan 07 00:38:48 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F25K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    63  0000                     
    64                           ; Version 2.20
    65                           ; Generated 05/05/2020 GMT
    66                           ; 
    67                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F25K40 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     
    99                           	psect	idataBANK0
   100  0011D2                     __pidataBANK0:
   101                           	callstack 0
   102                           
   103                           ;initializer for stoa@F1133
   104  0011D2  28                 	db	40
   105  0011D3  6E                 	db	110
   106  0011D4  75                 	db	117
   107  0011D5  6C                 	db	108
   108  0011D6  6C                 	db	108
   109  0011D7  29                 	db	41
   110  0011D8  00                 	db	0
   111                           
   112                           	psect	nvCOMRAM
   113  000050                     __pnvCOMRAM:
   114                           	callstack 0
   115  000050                     _EUSART_FramingErrorHandler:
   116                           	callstack 0
   117  000050                     	ds	2
   118  000052                     _EUSART_RxDefaultInterruptHandler:
   119                           	callstack 0
   120  000052                     	ds	2
   121  000054                     _EUSART_TxDefaultInterruptHandler:
   122                           	callstack 0
   123  000054                     	ds	2
   124  000056                     _INT1_InterruptHandler:
   125                           	callstack 0
   126  000056                     	ds	2
   127  000058                     _INT0_InterruptHandler:
   128                           	callstack 0
   129  000058                     	ds	2
   130  00005A                     _eusartTxBufferRemaining:
   131                           	callstack 0
   132  00005A                     	ds	1
   133                           
   134                           	psect	nvBANK0
   135  0000E2                     __pnvBANK0:
   136                           	callstack 0
   137  0000E2                     _EUSART_ErrorHandler:
   138                           	callstack 0
   139  0000E2                     	ds	2
   140  0000E4                     _EUSART_OverrunErrorHandler:
   141                           	callstack 0
   142  0000E4                     	ds	2
   143  0000                     _PIR7bits	set	3793
   144  0000                     _PIR3bits	set	3789
   145  0000                     _RC6PPS	set	3837
   146  0000                     _INT1PPS	set	3746
   147  0000                     _INT0PPS	set	3745
   148  0000                     _RXPPS	set	3765
   149  0000                     _PIE3bits	set	3781
   150  0000                     _PMD5	set	3814
   151  0000                     _PMD4	set	3813
   152  0000                     _PMD3	set	3812
   153  0000                     _PMD2	set	3811
   154  0000                     _PMD1	set	3810
   155  0000                     _PMD0	set	3809
   156  0000                     _OSCTUNE	set	3805
   157  0000                     _OSCFRQ	set	3806
   158  0000                     _OSCEN	set	3804
   159  0000                     _OSCCON3	set	3802
   160  0000                     _OSCCON1	set	3800
   161  0000                     _PIE0bits	set	3778
   162  0000                     _PIR0bits	set	3786
   163  0000                     _INLVLE	set	3882
   164  0000                     _INLVLC	set	3869
   165  0000                     _INLVLB	set	3861
   166  0000                     _INLVLA	set	3853
   167  0000                     _SLRCONC	set	3870
   168  0000                     _SLRCONB	set	3862
   169  0000                     _SLRCONA	set	3854
   170  0000                     _ODCONC	set	3871
   171  0000                     _ODCONB	set	3863
   172  0000                     _ODCONA	set	3855
   173  0000                     _WPUC	set	3872
   174  0000                     _WPUA	set	3856
   175  0000                     _WPUB	set	3864
   176  0000                     _WPUE	set	3885
   177  0000                     _ANSELA	set	3857
   178  0000                     _ANSELB	set	3865
   179  0000                     _ANSELC	set	3873
   180  0000                     _ADCON1bits	set	3929
   181  0000                     _ADCON2bits	set	3930
   182  0000                     _ADCON3bits	set	3931
   183  0000                     _ADACQ	set	3932
   184  0000                     _ADCLK	set	3927
   185  0000                     _ADACT	set	3926
   186  0000                     _ADREF	set	3928
   187  0000                     _ADCON3	set	3931
   188  0000                     _ADCON2	set	3930
   189  0000                     _ADCON1	set	3929
   190  0000                     _ADPRE	set	3934
   191  0000                     _ADCAP	set	3933
   192  0000                     _ADPCH	set	3935
   193  0000                     _NVMDAT	set	3968
   194  0000                     _NVMADRL	set	3966
   195  0000                     _NVMCON2	set	3970
   196  0000                     _TABLAT	set	4085
   197  0000                     _TBLPTRL	set	4086
   198  0000                     _TBLPTRH	set	4087
   199  0000                     _TBLPTRU	set	4088
   200  0000                     _NVMCON1bits	set	3969
   201  0000                     _TRISC	set	3978
   202  0000                     _TRISB	set	3977
   203  0000                     _TRISA	set	3976
   204  0000                     _LATC	set	3973
   205  0000                     _LATB	set	3972
   206  0000                     _LATA	set	3971
   207  0000                     _RC1REG	set	3993
   208  0000                     _RC1STAbits	set	3997
   209  0000                     _TX1REG	set	3994
   210  0000                     _TX1STAbits	set	3998
   211  0000                     _SP1BRGH	set	3996
   212  0000                     _SP1BRGL	set	3995
   213  0000                     _TX1STA	set	3998
   214  0000                     _RC1STA	set	3997
   215  0000                     _BAUD1CON	set	3999
   216  0000                     _ADERRL	set	3950
   217  0000                     _ADERRH	set	3951
   218  0000                     _ADPREVL	set	3937
   219  0000                     _ADPREVH	set	3938
   220  0000                     _ADFLTRL	set	3954
   221  0000                     _ADFLTRH	set	3955
   222  0000                     _ADSTATbits	set	3941
   223  0000                     _ADACCL	set	3952
   224  0000                     _ADACCH	set	3953
   225  0000                     _ADCNT	set	3943
   226  0000                     _ADRESL	set	3939
   227  0000                     _ADRESH	set	3940
   228  0000                     _ADCON0bits	set	3936
   229  0000                     _ADCON0	set	3936
   230  0000                     _ADSTAT	set	3941
   231  0000                     _ADRPT	set	3942
   232  0000                     _ADSTPTH	set	3945
   233  0000                     _ADSTPTL	set	3944
   234  0000                     _ADUTHH	set	3949
   235  0000                     _ADUTHL	set	3948
   236  0000                     _ADLTHH	set	3947
   237  0000                     _ADLTHL	set	3946
   238  0000                     _INTCONbits	set	4082
   239                           
   240                           	psect	smallconst
   241  000800                     __psmallconst:
   242                           	callstack 0
   243  000800  00                 	db	0
   244  000801                     STR_1:
   245  000801  41                 	db	65	;'A'
   246  000802  54                 	db	84	;'T'
   247  000803  0D                 	db	13
   248  000804  0A                 	db	10
   249  000805  00                 	db	0
   250  000806                     STR_2:
   251  000806  25                 	db	37
   252  000807  73                 	db	115	;'s'
   253  000808  00                 	db	0
   254  000809  00                 	db	0	; dummy byte at the end
   255  0000                     
   256                           ; #config settings
   257                           
   258                           	psect	cinit
   259  000E68                     __pcinit:
   260                           	callstack 0
   261  000E68                     start_initialization:
   262                           	callstack 0
   263  000E68                     __initialization:
   264                           	callstack 0
   265                           
   266                           ; NVMREG Errata
   267  000E68                     	if	3969
   268  000E68  8E81               	bsf	129,7,c
   269  000E6A  9C81               	bcf	129,6,c
   270  000E6C                     	endif
   271                           
   272                           ; Initialize objects allocated to BANK0 (7 bytes)
   273                           ; load TBLPTR registers with __pidataBANK0
   274  000E6C  0ED2               	movlw	low __pidataBANK0
   275  000E6E  6EF6               	movwf	tblptrl,c
   276  000E70  0E11               	movlw	high __pidataBANK0
   277  000E72  6EF7               	movwf	tblptrh,c
   278  000E74  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   279  000E76  6EF8               	movwf	tblptru,c
   280  000E78  EE00  F0DB         	lfsr	0,__pdataBANK0
   281  000E7C  EE10 F007          	lfsr	1,7
   282  000E80                     copy_data0:
   283  000E80  0009               	tblrd		*+
   284  000E82  CFF5 FFEE          	movff	tablat,postinc0
   285  000E86  50E5               	movf	postdec1,w,c
   286  000E88  50E1               	movf	fsr1l,w,c
   287  000E8A  E1FA               	bnz	copy_data0
   288                           
   289                           ; Clear objects allocated to BANK1 (132 bytes)
   290  000E8C  EE01  F000         	lfsr	0,__pbssBANK1
   291  000E90  0E84               	movlw	132
   292  000E92                     clear_0:
   293  000E92  6AEE               	clrf	postinc0,c
   294  000E94  06E8               	decf	wreg,f,c
   295  000E96  E1FD               	bnz	clear_0
   296                           
   297                           ; Clear objects allocated to BANK0 (16 bytes)
   298  000E98  EE00  F0CB         	lfsr	0,__pbssBANK0
   299  000E9C  0E10               	movlw	16
   300  000E9E                     clear_1:
   301  000E9E  6AEE               	clrf	postinc0,c
   302  000EA0  06E8               	decf	wreg,f,c
   303  000EA2  E1FD               	bnz	clear_1
   304                           
   305                           ; Clear objects allocated to COMRAM (22 bytes)
   306  000EA4  EE00  F03A         	lfsr	0,__pbssCOMRAM
   307  000EA8  0E16               	movlw	22
   308  000EAA                     clear_2:
   309  000EAA  6AEE               	clrf	postinc0,c
   310  000EAC  06E8               	decf	wreg,f,c
   311  000EAE  E1FD               	bnz	clear_2
   312  000EB0                     end_of_initialization:
   313                           	callstack 0
   314  000EB0                     __end_of__initialization:
   315                           	callstack 0
   316  000EB0  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   317  000EB2  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   318  000EB4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   319  000EB6  6EF8               	movwf	tblptru,c
   320  000EB8  0100               	movlb	0
   321  000EBA  EF23  F006         	goto	_main	;jump to C main() function
   322                           
   323                           	psect	bssCOMRAM
   324  00003A                     __pbssCOMRAM:
   325                           	callstack 0
   326  00003A                     _eusartRxStatusBuffer:
   327                           	callstack 0
   328  00003A                     	ds	8
   329  000042                     _nout:
   330                           	callstack 0
   331  000042                     	ds	2
   332  000044                     _width:
   333                           	callstack 0
   334  000044                     	ds	2
   335  000046                     _prec:
   336                           	callstack 0
   337  000046                     	ds	2
   338  000048                     _flags:
   339                           	callstack 0
   340  000048                     	ds	2
   341  00004A                     _eusartRxLastError:
   342                           	callstack 0
   343  00004A                     	ds	1
   344  00004B                     _eusartRxCount:
   345                           	callstack 0
   346  00004B                     	ds	1
   347  00004C                     _eusartRxTail:
   348                           	callstack 0
   349  00004C                     	ds	1
   350  00004D                     _eusartRxHead:
   351                           	callstack 0
   352  00004D                     	ds	1
   353  00004E                     _eusartTxTail:
   354                           	callstack 0
   355  00004E                     	ds	1
   356  00004F                     _eusartTxHead:
   357                           	callstack 0
   358  00004F                     	ds	1
   359                           
   360                           	psect	bssBANK0
   361  0000CB                     __pbssBANK0:
   362                           	callstack 0
   363  0000CB                     _eusartRxBuffer:
   364                           	callstack 0
   365  0000CB                     	ds	8
   366  0000D3                     _eusartTxBuffer:
   367                           	callstack 0
   368  0000D3                     	ds	8
   369                           
   370                           	psect	dataBANK0
   371  0000DB                     __pdataBANK0:
   372                           	callstack 0
   373  0000DB                     stoa@F1133:
   374                           	callstack 0
   375  0000DB                     	ds	7
   376                           
   377                           	psect	bssBANK1
   378  000100                     __pbssBANK1:
   379                           	callstack 0
   380  000100                     	ds	100
   381  000164                     	ds	32
   382                           
   383                           	psect	cstackBANK0
   384  000060                     __pcstackBANK0:
   385                           	callstack 0
   386  000060                     printf@ap:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0x0
   390  000060                     	ds	2
   391  000062                     ??_main:
   392                           
   393                           ; 1 bytes @ 0x2
   394  000062                     	ds	1
   395  000063                     main@returnedData:
   396                           	callstack 0
   397                           
   398                           ; 100 bytes @ 0x3
   399  000063                     	ds	100
   400  0000C7                     main@TestTxData:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x67
   404  0000C7                     	ds	2
   405  0000C9                     main@i:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x69
   409  0000C9                     	ds	2
   410                           
   411                           	psect	cstackCOMRAM
   412  000001                     __pcstackCOMRAM:
   413                           	callstack 0
   414  000001                     ??_INTERRUPT_InterruptManager:
   415  000001                     
   416                           ; 1 bytes @ 0x0
   417  000001                     	ds	4
   418  000005                     ?_strlen:
   419                           	callstack 0
   420  000005                     EUSART_Read@readValue:
   421                           	callstack 0
   422  000005                     EUSART_Write@txData:
   423                           	callstack 0
   424  000005                     INT0_SetInterruptHandler@InterruptHandler:
   425                           	callstack 0
   426  000005                     INT1_SetInterruptHandler@InterruptHandler:
   427                           	callstack 0
   428  000005                     EUSART_SetFramingErrorHandler@interruptHandler:
   429                           	callstack 0
   430  000005                     EUSART_SetOverrunErrorHandler@interruptHandler:
   431                           	callstack 0
   432  000005                     EUSART_SetErrorHandler@interruptHandler:
   433                           	callstack 0
   434  000005                     EUSART_SetTxInterruptHandler@interruptHandler:
   435                           	callstack 0
   436  000005                     EUSART_SetRxInterruptHandler@interruptHandler:
   437                           	callstack 0
   438  000005                     fputc@c:
   439                           	callstack 0
   440  000005                     strlen@s:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x4
   444  000005                     	ds	1
   445  000006                     sendUartStr@TxData:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x5
   449  000006                     	ds	1
   450  000007                     fputc@fp:
   451                           	callstack 0
   452  000007                     strlen@a:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x6
   456  000007                     	ds	1
   457  000008                     
   458                           ; 1 bytes @ 0x7
   459  000008                     	ds	1
   460  000009                     ??_fputc:
   461                           
   462                           ; 1 bytes @ 0x8
   463  000009                     	ds	5
   464  00000E                     ?_stoa:
   465                           	callstack 0
   466  00000E                     stoa@fp:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0xD
   470  00000E                     	ds	2
   471  000010                     stoa@s:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0xF
   475  000010                     	ds	2
   476  000012                     ??_stoa:
   477                           
   478                           ; 1 bytes @ 0x11
   479  000012                     	ds	1
   480  000013                     stoa@nuls:
   481                           	callstack 0
   482                           
   483                           ; 7 bytes @ 0x12
   484  000013                     	ds	7
   485  00001A                     stoa@i:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x19
   489  00001A                     	ds	2
   490  00001C                     stoa@w:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x1B
   494  00001C                     	ds	2
   495  00001E                     stoa@cp:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x1D
   499  00001E                     	ds	2
   500  000020                     stoa@p:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x1F
   504  000020                     	ds	2
   505  000022                     stoa@l:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x21
   509  000022                     	ds	2
   510  000024                     ?_vfpfcnvrt:
   511                           	callstack 0
   512  000024                     vfpfcnvrt@fp:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x23
   516  000024                     	ds	2
   517  000026                     vfpfcnvrt@fmt:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x25
   521  000026                     	ds	2
   522  000028                     vfpfcnvrt@ap:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x27
   526  000028                     	ds	2
   527  00002A                     ??_vfpfcnvrt:
   528                           
   529                           ; 1 bytes @ 0x29
   530  00002A                     	ds	2
   531  00002C                     vfpfcnvrt@cp:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x2B
   535  00002C                     	ds	2
   536  00002E                     ?_vfprintf:
   537                           	callstack 0
   538  00002E                     vfprintf@fp:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x2D
   542  00002E                     	ds	2
   543  000030                     vfprintf@fmt:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x2F
   547  000030                     	ds	2
   548  000032                     vfprintf@ap:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x31
   552  000032                     	ds	2
   553  000034                     vfprintf@cfmt:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x33
   557  000034                     	ds	2
   558  000036                     ?_printf:
   559                           	callstack 0
   560  000036                     printf@fmt:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x35
   564  000036                     	ds	4
   565  00003A                     
   566                           ; 1 bytes @ 0x39
   567 ;;
   568 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   569 ;;
   570 ;; *************** function _main *****************
   571 ;; Defined at:
   572 ;;		line 53 in file "main.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;		None
   575 ;; Auto vars:     Size  Location     Type
   576 ;;  returnedData  100    3[BANK0 ] unsigned char [100]
   577 ;;  i               2  105[BANK0 ] unsigned int 
   578 ;;  TestTxData      2  103[BANK0 ] PTR unsigned char 
   579 ;;		 -> STR_1(5), 
   580 ;; Return value:  Size  Location     Type
   581 ;;                  1    wreg      void 
   582 ;; Registers used:
   583 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   584 ;; Tracked objects:
   585 ;;		On entry : 0/0
   586 ;;		On exit  : 0/0
   587 ;;		Unchanged: 0/0
   588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   589 ;;      Params:         0       0       0       0       0       0       0       0       0
   590 ;;      Locals:         0     104       0       0       0       0       0       0       0
   591 ;;      Temps:          0       1       0       0       0       0       0       0       0
   592 ;;      Totals:         0     105       0       0       0       0       0       0       0
   593 ;;Total ram usage:      105 bytes
   594 ;; Hardware stack levels required when called: 10
   595 ;; This function calls:
   596 ;;		_EUSART_Read
   597 ;;		_EUSART_is_tx_ready
   598 ;;		_SYSTEM_Initialize
   599 ;;		_printf
   600 ;;		_sendUartStr
   601 ;; This function is called by:
   602 ;;		Startup code after reset
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           	psect	text0
   607  000C46                     __ptext0:
   608                           	callstack 0
   609  000C46                     _main:
   610                           	callstack 21
   611  000C46                     
   612                           ;main.c: 56:     SYSTEM_Initialize();
   613  000C46  EC7E  F008         	call	_SYSTEM_Initialize	;wreg free
   614  000C4A                     
   615                           ;main.c: 73:     char returnedData[100] = "";
   616  000C4A  EE20  F063         	lfsr	2,main@returnedData
   617  000C4E  0E63               	movlw	99
   618  000C50                     u1341:
   619  000C50  6ADE               	clrf	postinc2,c
   620  000C52  06E8               	decf	wreg,f,c
   621  000C54  E2FD               	bc	u1341
   622  000C56                     
   623                           ;main.c: 74:     char* TestTxData = "AT\r\n";
   624  000C56  0E01               	movlw	low STR_1
   625  000C58  0100               	movlb	0	; () banked
   626  000C5A  6FC7               	movwf	main@TestTxData& (0+255),b
   627  000C5C  0E08               	movlw	high STR_1
   628  000C5E  6FC8               	movwf	(main@TestTxData+1)& (0+255),b
   629  000C60                     l2437:
   630  000C60  ECA7  F008         	call	_EUSART_is_tx_ready	;wreg free
   631  000C64  0900               	iorlw	0
   632  000C66  B4D8               	btfsc	status,2,c
   633  000C68  EF38  F006         	goto	u1351
   634  000C6C  EF3A  F006         	goto	u1350
   635  000C70                     u1351:
   636  000C70  EF30  F006         	goto	l2437
   637  000C74                     u1350:
   638  000C74                     
   639                           ;main.c: 76:     sendUartStr(TestTxData);
   640  000C74  C0C7  F006         	movff	main@TestTxData,sendUartStr@TxData
   641  000C78  C0C8  F007         	movff	main@TestTxData+1,sendUartStr@TxData+1
   642  000C7C  ECB0  F007         	call	_sendUartStr	;wreg free
   643  000C80                     
   644                           ;main.c: 77:     size_t i = 0;
   645  000C80  0E00               	movlw	0
   646  000C82  0100               	movlb	0	; () banked
   647  000C84  6FCA               	movwf	(main@i+1)& (0+255),b
   648  000C86  0E00               	movlw	0
   649  000C88  6FC9               	movwf	main@i& (0+255),b
   650                           
   651                           ;main.c: 78:     while (i < 100)
   652  000C8A  EF55  F006         	goto	l2447
   653  000C8E                     l2443:
   654                           
   655                           ; BSR set to: 0
   656                           ;main.c: 79:     {;main.c: 81:         returnedData[i] = EUSART_Read();
   657  000C8E  EC5F  F007         	call	_EUSART_Read	;wreg free
   658  000C92  0100               	movlb	0	; () banked
   659  000C94  6F62               	movwf	??_main& (0+255),b
   660  000C96  0E63               	movlw	low main@returnedData
   661  000C98  25C9               	addwf	main@i& (0+255),w,b
   662  000C9A  6ED9               	movwf	fsr2l,c
   663  000C9C  0E00               	movlw	high main@returnedData
   664  000C9E  21CA               	addwfc	(main@i+1)& (0+255),w,b
   665  000CA0  6EDA               	movwf	fsr2h,c
   666  000CA2  C062  FFDF         	movff	??_main,indf2
   667  000CA6                     
   668                           ; BSR set to: 0
   669                           ;main.c: 82:         i++;
   670  000CA6  4BC9               	infsnz	main@i& (0+255),f,b
   671  000CA8  2BCA               	incf	(main@i+1)& (0+255),f,b
   672  000CAA                     l2447:
   673                           
   674                           ; BSR set to: 0
   675                           ;main.c: 78:     while (i < 100)
   676  000CAA  51CA               	movf	(main@i+1)& (0+255),w,b
   677  000CAC  E109               	bnz	u1360
   678  000CAE  0E64               	movlw	100
   679  000CB0  5DC9               	subwf	main@i& (0+255),w,b
   680  000CB2  A0D8               	btfss	status,0,c
   681  000CB4  EF5E  F006         	goto	u1361
   682  000CB8  EF60  F006         	goto	u1360
   683  000CBC                     u1361:
   684  000CBC  EF47  F006         	goto	l2443
   685  000CC0                     u1360:
   686  000CC0                     
   687                           ; BSR set to: 0
   688                           ;main.c: 84:     printf("%s",returnedData);
   689  000CC0  0E06               	movlw	low STR_2
   690  000CC2  6E36               	movwf	printf@fmt^0,c
   691  000CC4  0E08               	movlw	high STR_2
   692  000CC6  6E37               	movwf	(printf@fmt+1)^0,c
   693  000CC8  0E63               	movlw	low main@returnedData
   694  000CCA  6E38               	movwf	(?_printf+2)^0,c
   695  000CCC  0E00               	movlw	high main@returnedData
   696  000CCE  6E39               	movwf	(?_printf+3)^0,c
   697  000CD0  EC6A  F008         	call	_printf	;wreg free
   698  000CD4  EF7D  F000         	goto	start
   699  000CD8                     __end_of_main:
   700                           	callstack 0
   701                           
   702 ;; *************** function _sendUartStr *****************
   703 ;; Defined at:
   704 ;;		line 87 in file "main.c"
   705 ;; Parameters:    Size  Location     Type
   706 ;;  TxData          2    5[COMRAM] PTR unsigned char 
   707 ;;		 -> STR_1(5), 
   708 ;; Auto vars:     Size  Location     Type
   709 ;;		None
   710 ;; Return value:  Size  Location     Type
   711 ;;                  1    wreg      void 
   712 ;; Registers used:
   713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   714 ;; Tracked objects:
   715 ;;		On entry : 0/0
   716 ;;		On exit  : 0/0
   717 ;;		Unchanged: 0/0
   718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   719 ;;      Params:         2       0       0       0       0       0       0       0       0
   720 ;;      Locals:         0       0       0       0       0       0       0       0       0
   721 ;;      Temps:          0       0       0       0       0       0       0       0       0
   722 ;;      Totals:         2       0       0       0       0       0       0       0       0
   723 ;;Total ram usage:        2 bytes
   724 ;; Hardware stack levels used: 1
   725 ;; Hardware stack levels required when called: 5
   726 ;; This function calls:
   727 ;;		_EUSART_Write
   728 ;;		_EUSART_is_tx_done
   729 ;; This function is called by:
   730 ;;		_main
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           	psect	text1
   735  000F60                     __ptext1:
   736                           	callstack 0
   737  000F60                     _sendUartStr:
   738                           	callstack 25
   739  000F60                     
   740                           ;main.c: 88:     while (*TxData != '\0') {
   741  000F60  EFC6  F007         	goto	l2263
   742  000F64                     l2257:
   743                           
   744                           ;main.c: 89:         if (EUSART_is_tx_done()){
   745  000F64  ECB2  F008         	call	_EUSART_is_tx_done	;wreg free
   746  000F68  0900               	iorlw	0
   747  000F6A  B4D8               	btfsc	status,2,c
   748  000F6C  EFBA  F007         	goto	u1001
   749  000F70  EFBC  F007         	goto	u1000
   750  000F74                     u1001:
   751  000F74  EFC6  F007         	goto	l2263
   752  000F78                     u1000:
   753  000F78                     
   754                           ;main.c: 90:             EUSART_Write(*TxData);
   755  000F78  C006  FFF6         	movff	sendUartStr@TxData,tblptrl
   756  000F7C  C007  FFF7         	movff	sendUartStr@TxData+1,tblptrh
   757  000F80                     	if	0	;tblptru may be non-zero
   758  000F80                     	endif
   759  000F80                     	if	0	;tblptru may be non-zero
   760  000F80                     	endif
   761  000F80  0008               	tblrd		*
   762  000F82  50F5               	movf	tablat,w,c
   763  000F84  EC08  F007         	call	_EUSART_Write
   764  000F88                     
   765                           ;main.c: 91:             TxData++;
   766  000F88  4A06               	infsnz	sendUartStr@TxData^0,f,c
   767  000F8A  2A07               	incf	(sendUartStr@TxData+1)^0,f,c
   768  000F8C                     l2263:
   769                           
   770                           ;main.c: 88:     while (*TxData != '\0') {
   771  000F8C  C006  FFF6         	movff	sendUartStr@TxData,tblptrl
   772  000F90  C007  FFF7         	movff	sendUartStr@TxData+1,tblptrh
   773  000F94                     	if	0	;tblptru may be non-zero
   774  000F94                     	endif
   775  000F94                     	if	0	;tblptru may be non-zero
   776  000F94                     	endif
   777  000F94  0008               	tblrd		*
   778  000F96  50F5               	movf	tablat,w,c
   779  000F98  0900               	iorlw	0
   780  000F9A  A4D8               	btfss	status,2,c
   781  000F9C  EFD2  F007         	goto	u1011
   782  000FA0  EFD4  F007         	goto	u1010
   783  000FA4                     u1011:
   784  000FA4  EFB2  F007         	goto	l2257
   785  000FA8                     u1010:
   786  000FA8  0012               	return		;funcret
   787  000FAA                     __end_of_sendUartStr:
   788                           	callstack 0
   789                           
   790 ;; *************** function _EUSART_is_tx_done *****************
   791 ;; Defined at:
   792 ;;		line 142 in file "mcc_generated_files/eusart.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;		None
   795 ;; Auto vars:     Size  Location     Type
   796 ;;		None
   797 ;; Return value:  Size  Location     Type
   798 ;;                  1    wreg      _Bool 
   799 ;; Registers used:
   800 ;;		wreg
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   806 ;;      Params:         0       0       0       0       0       0       0       0       0
   807 ;;      Locals:         0       0       0       0       0       0       0       0       0
   808 ;;      Temps:          0       0       0       0       0       0       0       0       0
   809 ;;      Totals:         0       0       0       0       0       0       0       0       0
   810 ;;Total ram usage:        0 bytes
   811 ;; Hardware stack levels used: 1
   812 ;; Hardware stack levels required when called: 4
   813 ;; This function calls:
   814 ;;		Nothing
   815 ;; This function is called by:
   816 ;;		_sendUartStr
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           	psect	text2
   821  001164                     __ptext2:
   822                           	callstack 0
   823  001164                     _EUSART_is_tx_done:
   824                           	callstack 25
   825  001164                     
   826                           ;mcc_generated_files/eusart.c: 144:     return TX1STAbits.TRMT;
   827  001164  B29E               	btfsc	158,1,c	;volatile
   828  001166  EFB7  F008         	goto	u831
   829  00116A  EFBA  F008         	goto	u830
   830  00116E                     u831:
   831  00116E  0E01               	movlw	1
   832  001170  EFBB  F008         	goto	u836
   833  001174                     u830:
   834  001174  0E00               	movlw	0
   835  001176                     u836:
   836  001176  0012               	return		;funcret
   837  001178                     __end_of_EUSART_is_tx_done:
   838                           	callstack 0
   839                           
   840 ;; *************** function _EUSART_Write *****************
   841 ;; Defined at:
   842 ;;		line 173 in file "mcc_generated_files/eusart.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;  txData          1    wreg     unsigned char 
   845 ;; Auto vars:     Size  Location     Type
   846 ;;  txData          1    4[COMRAM] unsigned char 
   847 ;; Return value:  Size  Location     Type
   848 ;;                  1    wreg      void 
   849 ;; Registers used:
   850 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   856 ;;      Params:         0       0       0       0       0       0       0       0       0
   857 ;;      Locals:         1       0       0       0       0       0       0       0       0
   858 ;;      Temps:          0       0       0       0       0       0       0       0       0
   859 ;;      Totals:         1       0       0       0       0       0       0       0       0
   860 ;;Total ram usage:        1 bytes
   861 ;; Hardware stack levels used: 1
   862 ;; Hardware stack levels required when called: 4
   863 ;; This function calls:
   864 ;;		Nothing
   865 ;; This function is called by:
   866 ;;		_sendUartStr
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           	psect	text3
   871  000E10                     __ptext3:
   872                           	callstack 0
   873  000E10                     _EUSART_Write:
   874                           	callstack 25
   875                           
   876                           ;incstack = 0
   877                           ;EUSART_Write@txData stored from wreg
   878  000E10  6E05               	movwf	EUSART_Write@txData^0,c
   879  000E12                     l2155:
   880                           
   881                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
   882  000E12  505A               	movf	_eusartTxBufferRemaining^0,w,c	;volatile
   883  000E14  B4D8               	btfsc	status,2,c
   884  000E16  EF0F  F007         	goto	u841
   885  000E1A  EF11  F007         	goto	u840
   886  000E1E                     u841:
   887  000E1E  EF09  F007         	goto	l2155
   888  000E22                     u840:
   889  000E22                     
   890                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE3bits.TXIE)
   891  000E22  010E               	movlb	14	; () banked
   892  000E24  B9C5               	btfsc	197,4,b	;volatile
   893  000E26  EF17  F007         	goto	u851
   894  000E2A  EF19  F007         	goto	u850
   895  000E2E                     u851:
   896  000E2E  EF1D  F007         	goto	l342
   897  000E32                     u850:
   898  000E32                     
   899                           ; BSR set to: 14
   900                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TX1
      +                          REG = txData;
   901  000E32  C005  FF9A         	movff	EUSART_Write@txData,3994	;volatile
   902                           
   903                           ;mcc_generated_files/eusart.c: 182:     }
   904  000E36  EF32  F007         	goto	l2169
   905  000E3A                     l342:
   906                           
   907                           ; BSR set to: 14
   908                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          3bits.TXIE = 0;
   909  000E3A  99C5               	bcf	197,4,b	;volatile
   910  000E3C                     
   911                           ; BSR set to: 14
   912                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
   913  000E3C  0ED3               	movlw	low _eusartTxBuffer
   914  000E3E  244F               	addwf	_eusartTxHead^0,w,c	;volatile
   915  000E40  6ED9               	movwf	fsr2l,c
   916  000E42  6ADA               	clrf	fsr2h,c
   917  000E44  0E00               	movlw	high _eusartTxBuffer
   918  000E46  22DA               	addwfc	fsr2h,f,c
   919  000E48  C005  FFDF         	movff	EUSART_Write@txData,indf2
   920  000E4C                     
   921                           ; BSR set to: 14
   922  000E4C  2A4F               	incf	_eusartTxHead^0,f,c	;volatile
   923  000E4E                     
   924                           ; BSR set to: 14
   925                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
   926  000E4E  0E07               	movlw	7
   927  000E50  644F               	cpfsgt	_eusartTxHead^0,c	;volatile
   928  000E52  EF2D  F007         	goto	u861
   929  000E56  EF2F  F007         	goto	u860
   930  000E5A                     u861:
   931  000E5A  EF31  F007         	goto	l2167
   932  000E5E                     u860:
   933  000E5E                     
   934                           ; BSR set to: 14
   935                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
   936  000E5E  0E00               	movlw	0
   937  000E60  6E4F               	movwf	_eusartTxHead^0,c	;volatile
   938  000E62                     l2167:
   939                           
   940                           ; BSR set to: 14
   941                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
   942  000E62  065A               	decf	_eusartTxBufferRemaining^0,f,c	;volatile
   943  000E64                     l2169:
   944                           
   945                           ; BSR set to: 14
   946                           ;mcc_generated_files/eusart.c: 193:     PIE3bits.TXIE = 1;
   947  000E64  89C5               	bsf	197,4,b	;volatile
   948  000E66                     
   949                           ; BSR set to: 14
   950  000E66  0012               	return		;funcret
   951  000E68                     __end_of_EUSART_Write:
   952                           	callstack 0
   953                           
   954 ;; *************** function _printf *****************
   955 ;; Defined at:
   956 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;  fmt             2   53[COMRAM] PTR const unsigned char 
   959 ;;		 -> STR_2(3), 
   960 ;; Auto vars:     Size  Location     Type
   961 ;;  ap              2    0[BANK0 ] PTR void [1]
   962 ;;		 -> ?_printf(2), 
   963 ;;  ret             2    0        int 
   964 ;; Return value:  Size  Location     Type
   965 ;;                  2   53[COMRAM] int 
   966 ;; Registers used:
   967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   973 ;;      Params:         4       0       0       0       0       0       0       0       0
   974 ;;      Locals:         0       2       0       0       0       0       0       0       0
   975 ;;      Temps:          0       0       0       0       0       0       0       0       0
   976 ;;      Totals:         4       2       0       0       0       0       0       0       0
   977 ;;Total ram usage:        6 bytes
   978 ;; Hardware stack levels used: 1
   979 ;; Hardware stack levels required when called: 9
   980 ;; This function calls:
   981 ;;		_vfprintf
   982 ;; This function is called by:
   983 ;;		_main
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           	psect	text4
   988  0010D4                     __ptext4:
   989                           	callstack 0
   990  0010D4                     _printf:
   991                           	callstack 21
   992  0010D4  0E38               	movlw	low (?_printf+2)
   993  0010D6  0100               	movlb	0	; () banked
   994  0010D8  6F60               	movwf	printf@ap& (0+255),b
   995  0010DA  0E00               	movlw	high (?_printf+2)
   996  0010DC  6F61               	movwf	(printf@ap+1)& (0+255),b
   997  0010DE                     
   998                           ; BSR set to: 0
   999  0010DE  0E00               	movlw	0
  1000  0010E0  6E2E               	movwf	vfprintf@fp^0,c
  1001  0010E2  0E00               	movlw	0
  1002  0010E4  6E2F               	movwf	(vfprintf@fp+1)^0,c
  1003  0010E6  C036  F030         	movff	printf@fmt,vfprintf@fmt
  1004  0010EA  C037  F031         	movff	printf@fmt+1,vfprintf@fmt+1
  1005  0010EE  0E60               	movlw	low printf@ap
  1006  0010F0  6E32               	movwf	vfprintf@ap^0,c
  1007  0010F2  0E00               	movlw	high printf@ap
  1008  0010F4  6E33               	movwf	(vfprintf@ap+1)^0,c
  1009  0010F6  ECD9  F006         	call	_vfprintf	;wreg free
  1010  0010FA  0012               	return		;funcret
  1011  0010FC                     __end_of_printf:
  1012                           	callstack 0
  1013                           
  1014 ;; *************** function _vfprintf *****************
  1015 ;; Defined at:
  1016 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  1019 ;;		 -> NULL(0), 
  1020 ;;  fmt             2   47[COMRAM] PTR const unsigned char 
  1021 ;;		 -> STR_2(3), 
  1022 ;;  ap              2   49[COMRAM] PTR PTR void 
  1023 ;;		 -> printf@ap(2), 
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;  cfmt            2   51[COMRAM] PTR unsigned char 
  1026 ;;		 -> STR_2(3), 
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  2   45[COMRAM] int 
  1029 ;; Registers used:
  1030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1036 ;;      Params:         6       0       0       0       0       0       0       0       0
  1037 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1038 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1039 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1040 ;;Total ram usage:        8 bytes
  1041 ;; Hardware stack levels used: 1
  1042 ;; Hardware stack levels required when called: 8
  1043 ;; This function calls:
  1044 ;;		_vfpfcnvrt
  1045 ;; This function is called by:
  1046 ;;		_printf
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           	psect	text5
  1051  000DB2                     __ptext5:
  1052                           	callstack 0
  1053  000DB2                     _vfprintf:
  1054                           	callstack 21
  1055  000DB2                     
  1056                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1057  000DB2  C030  F034         	movff	vfprintf@fmt,vfprintf@cfmt
  1058  000DB6  C031  F035         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1059  000DBA                     
  1060                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1061  000DBA  0E00               	movlw	0
  1062  000DBC  6E43               	movwf	(_nout+1)^0,c
  1063  000DBE  0E00               	movlw	0
  1064  000DC0  6E42               	movwf	_nout^0,c
  1065                           
  1066                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1067  000DC2  EFF5  F006         	goto	l2423
  1068  000DC6                     l2421:
  1069                           
  1070                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1071  000DC6  C02E  F024         	movff	vfprintf@fp,vfpfcnvrt@fp
  1072  000DCA  C02F  F025         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1073  000DCE  0E34               	movlw	low vfprintf@cfmt
  1074  000DD0  6E26               	movwf	vfpfcnvrt@fmt^0,c
  1075  000DD2  0E00               	movlw	high vfprintf@cfmt
  1076  000DD4  6E27               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1077  000DD6  C032  F028         	movff	vfprintf@ap,vfpfcnvrt@ap
  1078  000DDA  C033  F029         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1079  000DDE  ECC6  F004         	call	_vfpfcnvrt	;wreg free
  1080  000DE2  5024               	movf	?_vfpfcnvrt^0,w,c
  1081  000DE4  2642               	addwf	_nout^0,f,c
  1082  000DE6  5025               	movf	(?_vfpfcnvrt+1)^0,w,c
  1083  000DE8  2243               	addwfc	(_nout+1)^0,f,c
  1084  000DEA                     l2423:
  1085                           
  1086                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1087  000DEA  C034  FFF6         	movff	vfprintf@cfmt,tblptrl
  1088  000DEE  C035  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1089  000DF2                     	if	0	;tblptru may be non-zero
  1090  000DF2                     	endif
  1091  000DF2                     	if	0	;tblptru may be non-zero
  1092  000DF2                     	endif
  1093  000DF2  0008               	tblrd		*
  1094  000DF4  50F5               	movf	tablat,w,c
  1095  000DF6  0900               	iorlw	0
  1096  000DF8  A4D8               	btfss	status,2,c
  1097  000DFA  EF01  F007         	goto	u1331
  1098  000DFE  EF03  F007         	goto	u1330
  1099  000E02                     u1331:
  1100  000E02  EFE3  F006         	goto	l2421
  1101  000E06                     u1330:
  1102  000E06                     
  1103                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1104  000E06  C042  F02E         	movff	_nout,?_vfprintf
  1105  000E0A  C043  F02F         	movff	_nout+1,?_vfprintf+1
  1106  000E0E  0012               	return		;funcret
  1107  000E10                     __end_of_vfprintf:
  1108                           	callstack 0
  1109                           
  1110 ;; *************** function _vfpfcnvrt *****************
  1111 ;; Defined at:
  1112 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;  fp              2   35[COMRAM] PTR struct _IO_FILE
  1115 ;;		 -> NULL(0), 
  1116 ;;  fmt             2   37[COMRAM] PTR PTR unsigned char 
  1117 ;;		 -> vfprintf@cfmt(2), 
  1118 ;;  ap              2   39[COMRAM] PTR PTR void 
  1119 ;;		 -> printf@ap(2), 
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;  llu             8    0        unsigned long long 
  1122 ;;  ll              8    0        long long 
  1123 ;;  f               4    0        long long 
  1124 ;;  vp              3    0        PTR void 
  1125 ;;  ct              3    0        unsigned char [3]
  1126 ;;  cp              2   43[COMRAM] PTR unsigned char 
  1127 ;;		 -> ?_printf(2), main@returnedData(100), 
  1128 ;;  i               2    0        int 
  1129 ;;  done            2    0        int 
  1130 ;;  c               1    0        unsigned char 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  2   35[COMRAM] int 
  1133 ;; Registers used:
  1134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1140 ;;      Params:         6       0       0       0       0       0       0       0       0
  1141 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1142 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1143 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1144 ;;Total ram usage:       10 bytes
  1145 ;; Hardware stack levels used: 1
  1146 ;; Hardware stack levels required when called: 7
  1147 ;; This function calls:
  1148 ;;		_fputc
  1149 ;;		_stoa
  1150 ;; This function is called by:
  1151 ;;		_vfprintf
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155                           	psect	text6
  1156  00098C                     __ptext6:
  1157                           	callstack 0
  1158  00098C                     _vfpfcnvrt:
  1159                           	callstack 21
  1160  00098C                     
  1161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1162  00098C  C026  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1163  000990  C027  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1164  000994  CFDE FFF6          	movff	postinc2,tblptrl
  1165  000998  CFDD FFF7          	movff	postdec2,tblptrh
  1166  00099C                     	if	0	;tblptru may be non-zero
  1167  00099C                     	endif
  1168  00099C                     	if	0	;tblptru may be non-zero
  1169  00099C                     	endif
  1170  00099C  0008               	tblrd		*
  1171  00099E  50F5               	movf	tablat,w,c
  1172  0009A0  0A25               	xorlw	37
  1173  0009A2  A4D8               	btfss	status,2,c
  1174  0009A4  EFD6  F004         	goto	u1301
  1175  0009A8  EFD8  F004         	goto	u1300
  1176  0009AC                     u1301:
  1177  0009AC  EF5C  F005         	goto	l2409
  1178  0009B0                     u1300:
  1179  0009B0                     
  1180                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1181  0009B0  C026  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1182  0009B4  C027  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1183  0009B8  2ADE               	incf	postinc2,f,c
  1184  0009BA  0E00               	movlw	0
  1185  0009BC  22DD               	addwfc	postdec2,f,c
  1186  0009BE                     
  1187                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1188  0009BE  0E00               	movlw	0
  1189  0009C0  6E45               	movwf	(_width+1)^0,c
  1190  0009C2  0E00               	movlw	0
  1191  0009C4  6E44               	movwf	_width^0,c
  1192  0009C6  C044  F048         	movff	_width,_flags
  1193  0009CA  C045  F049         	movff	_width+1,_flags+1
  1194  0009CE                     
  1195                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1196  0009CE  6846               	setf	_prec^0,c
  1197  0009D0  6847               	setf	(_prec+1)^0,c
  1198  0009D2                     
  1199                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1171:         if 
      +                          (*fmt[0] == 's') {
  1200  0009D2  C026  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1201  0009D6  C027  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1202  0009DA  CFDE FFF6          	movff	postinc2,tblptrl
  1203  0009DE  CFDD FFF7          	movff	postdec2,tblptrh
  1204  0009E2                     	if	0	;tblptru may be non-zero
  1205  0009E2                     	endif
  1206  0009E2                     	if	0	;tblptru may be non-zero
  1207  0009E2                     	endif
  1208  0009E2  0008               	tblrd		*
  1209  0009E4  50F5               	movf	tablat,w,c
  1210  0009E6  0A73               	xorlw	115
  1211  0009E8  A4D8               	btfss	status,2,c
  1212  0009EA  EFF9  F004         	goto	u1311
  1213  0009EE  EFFB  F004         	goto	u1310
  1214  0009F2                     u1311:
  1215  0009F2  EF26  F005         	goto	l2393
  1216  0009F6                     u1310:
  1217  0009F6                     
  1218                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1173:            
      +                           ++*fmt;
  1219  0009F6  C026  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1220  0009FA  C027  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1221  0009FE  2ADE               	incf	postinc2,f,c
  1222  000A00  0E00               	movlw	0
  1223  000A02  22DD               	addwfc	postdec2,f,c
  1224                           
  1225                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1174:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  1226  000A04  C028  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1227  000A08  C029  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1228  000A0C  CFDF F02A          	movff	indf2,??_vfpfcnvrt
  1229  000A10  0E02               	movlw	2
  1230  000A12  26DE               	addwf	postinc2,f,c
  1231  000A14  CFDF F02B          	movff	indf2,??_vfpfcnvrt+1
  1232  000A18  0E00               	movlw	0
  1233  000A1A  22DD               	addwfc	postdec2,f,c
  1234  000A1C  C02A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1235  000A20  C02B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1236  000A24  CFDE F02C          	movff	postinc2,vfpfcnvrt@cp
  1237  000A28  CFDD F02D          	movff	postdec2,vfpfcnvrt@cp+1
  1238  000A2C                     
  1239                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1176:            
      +                           return stoa(fp, cp);
  1240  000A2C  C024  F00E         	movff	vfpfcnvrt@fp,stoa@fp
  1241  000A30  C025  F00F         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  1242  000A34  C02C  F010         	movff	vfpfcnvrt@cp,stoa@s
  1243  000A38  C02D  F011         	movff	vfpfcnvrt@cp+1,stoa@s+1
  1244  000A3C  EC05  F004         	call	_stoa	;wreg free
  1245  000A40  C00E  F024         	movff	?_stoa,?_vfpfcnvrt
  1246  000A44  C00F  F025         	movff	?_stoa+1,?_vfpfcnvrt+1
  1247  000A48  EF77  F005         	goto	l1315
  1248  000A4C                     l2393:
  1249                           
  1250                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1251  000A4C  C026  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1252  000A50  C027  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1253  000A54  CFDE FFF6          	movff	postinc2,tblptrl
  1254  000A58  CFDD FFF7          	movff	postdec2,tblptrh
  1255  000A5C                     	if	0	;tblptru may be non-zero
  1256  000A5C                     	endif
  1257  000A5C                     	if	0	;tblptru may be non-zero
  1258  000A5C                     	endif
  1259  000A5C  0008               	tblrd		*
  1260  000A5E  50F5               	movf	tablat,w,c
  1261  000A60  0A25               	xorlw	37
  1262  000A62  A4D8               	btfss	status,2,c
  1263  000A64  EF36  F005         	goto	u1321
  1264  000A68  EF38  F005         	goto	u1320
  1265  000A6C                     u1321:
  1266  000A6C  EF4F  F005         	goto	l2403
  1267  000A70                     u1320:
  1268  000A70                     
  1269                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1270  000A70  C026  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1271  000A74  C027  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1272  000A78  2ADE               	incf	postinc2,f,c
  1273  000A7A  0E00               	movlw	0
  1274  000A7C  22DD               	addwfc	postdec2,f,c
  1275  000A7E                     
  1276                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1277  000A7E  0E00               	movlw	0
  1278  000A80  6E06               	movwf	(fputc@c+1)^0,c
  1279  000A82  0E25               	movlw	37
  1280  000A84  6E05               	movwf	fputc@c^0,c
  1281  000A86  C024  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1282  000A8A  C025  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1283  000A8E  ECD8  F005         	call	_fputc	;wreg free
  1284  000A92                     l2399:
  1285                           
  1286                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1287  000A92  0E00               	movlw	0
  1288  000A94  6E25               	movwf	(?_vfpfcnvrt+1)^0,c
  1289  000A96  0E01               	movlw	1
  1290  000A98  6E24               	movwf	?_vfpfcnvrt^0,c
  1291  000A9A  EF77  F005         	goto	l1315
  1292  000A9E                     l2403:
  1293                           
  1294                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1295  000A9E  C026  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1296  000AA2  C027  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1297  000AA6  2ADE               	incf	postinc2,f,c
  1298  000AA8  0E00               	movlw	0
  1299  000AAA  22DD               	addwfc	postdec2,f,c
  1300  000AAC                     
  1301                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1302  000AAC  0E00               	movlw	0
  1303  000AAE  6E25               	movwf	(?_vfpfcnvrt+1)^0,c
  1304  000AB0  0E00               	movlw	0
  1305  000AB2  6E24               	movwf	?_vfpfcnvrt^0,c
  1306  000AB4  EF77  F005         	goto	l1315
  1307  000AB8                     l2409:
  1308                           
  1309                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1310  000AB8  C026  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1311  000ABC  C027  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1312  000AC0  CFDE FFF6          	movff	postinc2,tblptrl
  1313  000AC4  CFDD FFF7          	movff	postdec2,tblptrh
  1314  000AC8                     	if	0	;tblptru may be non-zero
  1315  000AC8                     	endif
  1316  000AC8                     	if	0	;tblptru may be non-zero
  1317  000AC8                     	endif
  1318  000AC8  0008               	tblrd		*
  1319  000ACA  50F5               	movf	tablat,w,c
  1320  000ACC  6E05               	movwf	fputc@c^0,c
  1321  000ACE  6A06               	clrf	(fputc@c+1)^0,c
  1322  000AD0  C024  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1323  000AD4  C025  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1324  000AD8  ECD8  F005         	call	_fputc	;wreg free
  1325  000ADC                     
  1326                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1327  000ADC  C026  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1328  000AE0  C027  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1329  000AE4  2ADE               	incf	postinc2,f,c
  1330  000AE6  0E00               	movlw	0
  1331  000AE8  22DD               	addwfc	postdec2,f,c
  1332  000AEA  EF49  F005         	goto	l2399
  1333  000AEE                     l1315:
  1334  000AEE  0012               	return		;funcret
  1335  000AF0                     __end_of_vfpfcnvrt:
  1336                           	callstack 0
  1337                           
  1338 ;; *************** function _stoa *****************
  1339 ;; Defined at:
  1340 ;;		line 568 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  1343 ;;		 -> NULL(0), 
  1344 ;;  s               2   15[COMRAM] PTR unsigned char 
  1345 ;;		 -> ?_printf(2), main@returnedData(100), 
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;  nuls            7   18[COMRAM] unsigned char [7]
  1348 ;;  l               2   33[COMRAM] int 
  1349 ;;  p               2   31[COMRAM] int 
  1350 ;;  cp              2   29[COMRAM] PTR unsigned char 
  1351 ;;		 -> stoa@nuls(7), ?_printf(2), main@returnedData(100), 
  1352 ;;  w               2   27[COMRAM] int 
  1353 ;;  i               2   25[COMRAM] int 
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  2   13[COMRAM] int 
  1356 ;; Registers used:
  1357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1363 ;;      Params:         4       0       0       0       0       0       0       0       0
  1364 ;;      Locals:        17       0       0       0       0       0       0       0       0
  1365 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1366 ;;      Totals:        22       0       0       0       0       0       0       0       0
  1367 ;;Total ram usage:       22 bytes
  1368 ;; Hardware stack levels used: 1
  1369 ;; Hardware stack levels required when called: 6
  1370 ;; This function calls:
  1371 ;;		_fputc
  1372 ;;		_strlen
  1373 ;; This function is called by:
  1374 ;;		_vfpfcnvrt
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378                           	psect	text7
  1379  00080A                     __ptext7:
  1380                           	callstack 0
  1381  00080A                     _stoa:
  1382                           	callstack 21
  1383  00080A                     
  1384                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 568: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 569: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 570:  
      +                             char *cp, nuls[] = "(null)";
  1385  00080A  EE20  F0DB         	lfsr	2,stoa@F1133
  1386  00080E  EE10  F013         	lfsr	1,stoa@nuls
  1387  000812  0E06               	movlw	6
  1388  000814                     u1211:
  1389  000814  CFDB FFE3          	movff	plusw2,plusw1
  1390  000818  06E8               	decf	wreg,f,c
  1391  00081A  E2FC               	bc	u1211
  1392  00081C                     
  1393                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 571:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 574:     c
      +                          p = s;
  1394  00081C  C010  F01E         	movff	stoa@s,stoa@cp
  1395  000820  C011  F01F         	movff	stoa@s+1,stoa@cp+1
  1396  000824                     
  1397                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 575:     if (!cp)
      +                           {
  1398  000824  501E               	movf	stoa@cp^0,w,c
  1399  000826  101F               	iorwf	(stoa@cp+1)^0,w,c
  1400  000828  A4D8               	btfss	status,2,c
  1401  00082A  EF19  F004         	goto	u1221
  1402  00082E  EF1B  F004         	goto	u1220
  1403  000832                     u1221:
  1404  000832  EF1F  F004         	goto	l2343
  1405  000836                     u1220:
  1406  000836                     
  1407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 576:         cp =
      +                           nuls;
  1408  000836  0E13               	movlw	low stoa@nuls
  1409  000838  6E1E               	movwf	stoa@cp^0,c
  1410  00083A  0E00               	movlw	high stoa@nuls
  1411  00083C  6E1F               	movwf	(stoa@cp+1)^0,c
  1412  00083E                     l2343:
  1413                           
  1414                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 580:     l = (int
      +                          )strlen(cp);
  1415  00083E  C01E  F005         	movff	stoa@cp,strlen@s
  1416  000842  C01F  F006         	movff	stoa@cp+1,strlen@s+1
  1417  000846  ECF6  F007         	call	_strlen	;wreg free
  1418  00084A  C005  F022         	movff	?_strlen,stoa@l
  1419  00084E  C006  F023         	movff	?_strlen+1,stoa@l+1
  1420  000852                     
  1421                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 581:     p = prec
      +                          ;
  1422  000852  C046  F020         	movff	_prec,stoa@p
  1423  000856  C047  F021         	movff	_prec+1,stoa@p+1
  1424  00085A                     
  1425                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 582:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  1426  00085A  BE21               	btfsc	(stoa@p+1)^0,7,c
  1427  00085C  EF32  F004         	goto	u1231
  1428  000860  EF34  F004         	goto	u1230
  1429  000864                     u1231:
  1430  000864  EF49  F004         	goto	l1296
  1431  000868                     u1230:
  1432  000868  5022               	movf	stoa@l^0,w,c
  1433  00086A  5C20               	subwf	stoa@p^0,w,c
  1434  00086C  5021               	movf	(stoa@p+1)^0,w,c
  1435  00086E  0A80               	xorlw	128
  1436  000870  6E12               	movwf	??_stoa^0,c
  1437  000872  5023               	movf	(stoa@l+1)^0,w,c
  1438  000874  0A80               	xorlw	128
  1439  000876  5812               	subwfb	??_stoa^0,w,c
  1440  000878  A0D8               	btfss	status,0,c
  1441  00087A  EF41  F004         	goto	u1241
  1442  00087E  EF43  F004         	goto	u1240
  1443  000882                     u1241:
  1444  000882  EF45  F004         	goto	l1294
  1445  000886                     u1240:
  1446  000886  EF49  F004         	goto	l1296
  1447  00088A                     l1294:
  1448  00088A  C020  F022         	movff	stoa@p,stoa@l
  1449  00088E  C021  F023         	movff	stoa@p+1,stoa@l+1
  1450  000892                     l1296:
  1451                           
  1452                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 583:     p = l;
  1453  000892  C022  F020         	movff	stoa@l,stoa@p
  1454  000896  C023  F021         	movff	stoa@l+1,stoa@p+1
  1455                           
  1456                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 584:     w = widt
      +                          h;
  1457  00089A  C044  F01C         	movff	_width,stoa@w
  1458  00089E  C045  F01D         	movff	_width+1,stoa@w+1
  1459                           
  1460                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 587:     if (!(fl
      +                          ags & (1 << 0))) {
  1461  0008A2  B048               	btfsc	_flags^0,0,c
  1462  0008A4  EF56  F004         	goto	u1251
  1463  0008A8  EF58  F004         	goto	u1250
  1464  0008AC                     u1251:
  1465  0008AC  EF75  F004         	goto	l2359
  1466  0008B0                     u1250:
  1467  0008B0  EF66  F004         	goto	l2357
  1468  0008B4                     l2353:
  1469                           
  1470                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 589:             
      +                          fputc(' ', fp);
  1471  0008B4  0E00               	movlw	0
  1472  0008B6  6E06               	movwf	(fputc@c+1)^0,c
  1473  0008B8  0E20               	movlw	32
  1474  0008BA  6E05               	movwf	fputc@c^0,c
  1475  0008BC  C00E  F007         	movff	stoa@fp,fputc@fp
  1476  0008C0  C00F  F008         	movff	stoa@fp+1,fputc@fp+1
  1477  0008C4  ECD8  F005         	call	_fputc	;wreg free
  1478  0008C8                     
  1479                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 590:             
      +                          ++l;
  1480  0008C8  4A22               	infsnz	stoa@l^0,f,c
  1481  0008CA  2A23               	incf	(stoa@l+1)^0,f,c
  1482  0008CC                     l2357:
  1483                           
  1484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 588:         whil
      +                          e (l < w) {
  1485  0008CC  501C               	movf	stoa@w^0,w,c
  1486  0008CE  5C22               	subwf	stoa@l^0,w,c
  1487  0008D0  5023               	movf	(stoa@l+1)^0,w,c
  1488  0008D2  0A80               	xorlw	128
  1489  0008D4  6E12               	movwf	??_stoa^0,c
  1490  0008D6  501D               	movf	(stoa@w+1)^0,w,c
  1491  0008D8  0A80               	xorlw	128
  1492  0008DA  5812               	subwfb	??_stoa^0,w,c
  1493  0008DC  A0D8               	btfss	status,0,c
  1494  0008DE  EF73  F004         	goto	u1261
  1495  0008E2  EF75  F004         	goto	u1260
  1496  0008E6                     u1261:
  1497  0008E6  EF5A  F004         	goto	l2353
  1498  0008EA                     u1260:
  1499  0008EA                     l2359:
  1500                           
  1501                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 595:     i = 0;
  1502  0008EA  0E00               	movlw	0
  1503  0008EC  6E1B               	movwf	(stoa@i+1)^0,c
  1504  0008EE  0E00               	movlw	0
  1505  0008F0  6E1A               	movwf	stoa@i^0,c
  1506                           
  1507                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  1508  0008F2  EF8E  F004         	goto	l2367
  1509  0008F6                     l2361:
  1510                           
  1511                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 597:         fput
      +                          c(*cp, fp);
  1512  0008F6  C01E  FFD9         	movff	stoa@cp,fsr2l
  1513  0008FA  C01F  FFDA         	movff	stoa@cp+1,fsr2h
  1514  0008FE  50DF               	movf	indf2,w,c
  1515  000900  6E12               	movwf	??_stoa^0,c
  1516  000902  5012               	movf	??_stoa^0,w,c
  1517  000904  6E05               	movwf	fputc@c^0,c
  1518  000906  6A06               	clrf	(fputc@c+1)^0,c
  1519  000908  C00E  F007         	movff	stoa@fp,fputc@fp
  1520  00090C  C00F  F008         	movff	stoa@fp+1,fputc@fp+1
  1521  000910  ECD8  F005         	call	_fputc	;wreg free
  1522  000914                     
  1523                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 598:         ++cp
      +                          ;
  1524  000914  4A1E               	infsnz	stoa@cp^0,f,c
  1525  000916  2A1F               	incf	(stoa@cp+1)^0,f,c
  1526  000918                     
  1527                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 599:         ++i;
  1528  000918  4A1A               	infsnz	stoa@i^0,f,c
  1529  00091A  2A1B               	incf	(stoa@i+1)^0,f,c
  1530  00091C                     l2367:
  1531                           
  1532                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  1533  00091C  5020               	movf	stoa@p^0,w,c
  1534  00091E  5C1A               	subwf	stoa@i^0,w,c
  1535  000920  501B               	movf	(stoa@i+1)^0,w,c
  1536  000922  0A80               	xorlw	128
  1537  000924  6E12               	movwf	??_stoa^0,c
  1538  000926  5021               	movf	(stoa@p+1)^0,w,c
  1539  000928  0A80               	xorlw	128
  1540  00092A  5812               	subwfb	??_stoa^0,w,c
  1541  00092C  A0D8               	btfss	status,0,c
  1542  00092E  EF9B  F004         	goto	u1271
  1543  000932  EF9D  F004         	goto	u1270
  1544  000936                     u1271:
  1545  000936  EF7B  F004         	goto	l2361
  1546  00093A                     u1270:
  1547  00093A                     
  1548                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 603:     if (flag
      +                          s & (1 << 0)) {
  1549  00093A  A048               	btfss	_flags^0,0,c
  1550  00093C  EFA2  F004         	goto	u1281
  1551  000940  EFA4  F004         	goto	u1280
  1552  000944                     u1281:
  1553  000944  EFC1  F004         	goto	l1306
  1554  000948                     u1280:
  1555  000948  EFB2  F004         	goto	l2375
  1556  00094C                     l2371:
  1557                           
  1558                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 605:             
      +                          fputc(' ', fp);
  1559  00094C  0E00               	movlw	0
  1560  00094E  6E06               	movwf	(fputc@c+1)^0,c
  1561  000950  0E20               	movlw	32
  1562  000952  6E05               	movwf	fputc@c^0,c
  1563  000954  C00E  F007         	movff	stoa@fp,fputc@fp
  1564  000958  C00F  F008         	movff	stoa@fp+1,fputc@fp+1
  1565  00095C  ECD8  F005         	call	_fputc	;wreg free
  1566  000960                     
  1567                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 606:             
      +                          ++l;
  1568  000960  4A22               	infsnz	stoa@l^0,f,c
  1569  000962  2A23               	incf	(stoa@l+1)^0,f,c
  1570  000964                     l2375:
  1571                           
  1572                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 604:         whil
      +                          e (l < w) {
  1573  000964  501C               	movf	stoa@w^0,w,c
  1574  000966  5C22               	subwf	stoa@l^0,w,c
  1575  000968  5023               	movf	(stoa@l+1)^0,w,c
  1576  00096A  0A80               	xorlw	128
  1577  00096C  6E12               	movwf	??_stoa^0,c
  1578  00096E  501D               	movf	(stoa@w+1)^0,w,c
  1579  000970  0A80               	xorlw	128
  1580  000972  5812               	subwfb	??_stoa^0,w,c
  1581  000974  A0D8               	btfss	status,0,c
  1582  000976  EFBF  F004         	goto	u1291
  1583  00097A  EFC1  F004         	goto	u1290
  1584  00097E                     u1291:
  1585  00097E  EFA6  F004         	goto	l2371
  1586  000982                     u1290:
  1587  000982                     l1306:
  1588                           
  1589                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 610:     return l
      +                          ;
  1590  000982  C022  F00E         	movff	stoa@l,?_stoa
  1591  000986  C023  F00F         	movff	stoa@l+1,?_stoa+1
  1592  00098A  0012               	return		;funcret
  1593  00098C                     __end_of_stoa:
  1594                           	callstack 0
  1595                           
  1596 ;; *************** function _strlen *****************
  1597 ;; Defined at:
  1598 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;  s               2    4[COMRAM] PTR const unsigned char 
  1601 ;;		 -> stoa@nuls(7), ?_printf(2), main@returnedData(100), 
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;  a               2    6[COMRAM] PTR const unsigned char 
  1604 ;;		 -> stoa@nuls(7), ?_printf(2), main@returnedData(100), 
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  2    4[COMRAM] unsigned int 
  1607 ;; Registers used:
  1608 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1614 ;;      Params:         2       0       0       0       0       0       0       0       0
  1615 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1616 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1617 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1618 ;;Total ram usage:        4 bytes
  1619 ;; Hardware stack levels used: 1
  1620 ;; Hardware stack levels required when called: 4
  1621 ;; This function calls:
  1622 ;;		Nothing
  1623 ;; This function is called by:
  1624 ;;		_stoa
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           	psect	text8
  1629  000FEC                     __ptext8:
  1630                           	callstack 0
  1631  000FEC                     _strlen:
  1632                           	callstack 22
  1633  000FEC  C005  F007         	movff	strlen@s,strlen@a
  1634  000FF0  C006  F008         	movff	strlen@s+1,strlen@a+1
  1635  000FF4  EFFE  F007         	goto	l2329
  1636  000FF8                     l2327:
  1637  000FF8  4A05               	infsnz	strlen@s^0,f,c
  1638  000FFA  2A06               	incf	(strlen@s+1)^0,f,c
  1639  000FFC                     l2329:
  1640  000FFC  C005  FFD9         	movff	strlen@s,fsr2l
  1641  001000  C006  FFDA         	movff	strlen@s+1,fsr2h
  1642  001004  50DF               	movf	indf2,w,c
  1643  001006  A4D8               	btfss	status,2,c
  1644  001008  EF08  F008         	goto	u1201
  1645  00100C  EF0A  F008         	goto	u1200
  1646  001010                     u1201:
  1647  001010  EFFC  F007         	goto	l2327
  1648  001014                     u1200:
  1649  001014  5007               	movf	strlen@a^0,w,c
  1650  001016  5C05               	subwf	strlen@s^0,w,c
  1651  001018  6E05               	movwf	?_strlen^0,c
  1652  00101A  5008               	movf	(strlen@a+1)^0,w,c
  1653  00101C  5806               	subwfb	(strlen@s+1)^0,w,c
  1654  00101E  6E06               	movwf	(?_strlen+1)^0,c
  1655  001020  0012               	return		;funcret
  1656  001022                     __end_of_strlen:
  1657                           	callstack 0
  1658                           
  1659 ;; *************** function _fputc *****************
  1660 ;; Defined at:
  1661 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;  c               2    4[COMRAM] int 
  1664 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  1665 ;;		 -> NULL(0), 
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;		None
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  2    4[COMRAM] int 
  1670 ;; Registers used:
  1671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1677 ;;      Params:         4       0       0       0       0       0       0       0       0
  1678 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1679 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1680 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1681 ;;Total ram usage:        9 bytes
  1682 ;; Hardware stack levels used: 1
  1683 ;; Hardware stack levels required when called: 5
  1684 ;; This function calls:
  1685 ;;		_putch
  1686 ;; This function is called by:
  1687 ;;		_stoa
  1688 ;;		_vfpfcnvrt
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           	psect	text9
  1693  000BB0                     __ptext9:
  1694                           	callstack 0
  1695  000BB0                     _fputc:
  1696                           	callstack 21
  1697  000BB0  5007               	movf	fputc@fp^0,w,c
  1698  000BB2  1008               	iorwf	(fputc@fp+1)^0,w,c
  1699  000BB4  B4D8               	btfsc	status,2,c
  1700  000BB6  EFDF  F005         	goto	u1161
  1701  000BBA  EFE1  F005         	goto	u1160
  1702  000BBE                     u1161:
  1703  000BBE  EFEA  F005         	goto	l2315
  1704  000BC2                     u1160:
  1705  000BC2  5007               	movf	fputc@fp^0,w,c
  1706  000BC4  1008               	iorwf	(fputc@fp+1)^0,w,c
  1707  000BC6  A4D8               	btfss	status,2,c
  1708  000BC8  EFE8  F005         	goto	u1171
  1709  000BCC  EFEA  F005         	goto	u1170
  1710  000BD0                     u1171:
  1711  000BD0  EFEF  F005         	goto	l2317
  1712  000BD4                     u1170:
  1713  000BD4                     l2315:
  1714  000BD4  5005               	movf	fputc@c^0,w,c
  1715  000BD6  ECF5  F008         	call	_putch
  1716  000BDA  EF22  F006         	goto	l1334
  1717  000BDE                     l2317:
  1718  000BDE  EE20 F004          	lfsr	2,4
  1719  000BE2  5007               	movf	fputc@fp^0,w,c
  1720  000BE4  26D9               	addwf	fsr2l,f,c
  1721  000BE6  5008               	movf	(fputc@fp+1)^0,w,c
  1722  000BE8  22DA               	addwfc	fsr2h,f,c
  1723  000BEA  50DE               	movf	postinc2,w,c
  1724  000BEC  10DE               	iorwf	postinc2,w,c
  1725  000BEE  B4D8               	btfsc	status,2,c
  1726  000BF0  EFFC  F005         	goto	u1181
  1727  000BF4  EFFE  F005         	goto	u1180
  1728  000BF8                     u1181:
  1729  000BF8  EF19  F006         	goto	l2321
  1730  000BFC                     u1180:
  1731  000BFC  EE20 F004          	lfsr	2,4
  1732  000C00  5007               	movf	fputc@fp^0,w,c
  1733  000C02  26D9               	addwf	fsr2l,f,c
  1734  000C04  5008               	movf	(fputc@fp+1)^0,w,c
  1735  000C06  22DA               	addwfc	fsr2h,f,c
  1736  000C08  EE10 F002          	lfsr	1,2
  1737  000C0C  5007               	movf	fputc@fp^0,w,c
  1738  000C0E  26E1               	addwf	fsr1l,f,c
  1739  000C10  5008               	movf	(fputc@fp+1)^0,w,c
  1740  000C12  22E2               	addwfc	fsr1h,f,c
  1741  000C14  50DE               	movf	postinc2,w,c
  1742  000C16  5CE6               	subwf	postinc1,w,c
  1743  000C18  50E6               	movf	postinc1,w,c
  1744  000C1A  0A80               	xorlw	128
  1745  000C1C  6E0D               	movwf	(??_fputc+4)^0,c
  1746  000C1E  50DE               	movf	postinc2,w,c
  1747  000C20  0A80               	xorlw	128
  1748  000C22  580D               	subwfb	(??_fputc+4)^0,w,c
  1749  000C24  B0D8               	btfsc	status,0,c
  1750  000C26  EF17  F006         	goto	u1191
  1751  000C2A  EF19  F006         	goto	u1190
  1752  000C2E                     u1191:
  1753  000C2E  EF22  F006         	goto	l1334
  1754  000C32                     u1190:
  1755  000C32                     l2321:
  1756  000C32  EE20 F002          	lfsr	2,2
  1757  000C36  5007               	movf	fputc@fp^0,w,c
  1758  000C38  26D9               	addwf	fsr2l,f,c
  1759  000C3A  5008               	movf	(fputc@fp+1)^0,w,c
  1760  000C3C  22DA               	addwfc	fsr2h,f,c
  1761  000C3E  2ADE               	incf	postinc2,f,c
  1762  000C40  0E00               	movlw	0
  1763  000C42  22DD               	addwfc	postdec2,f,c
  1764  000C44                     l1334:
  1765  000C44  0012               	return		;funcret
  1766  000C46                     __end_of_fputc:
  1767                           	callstack 0
  1768                           
  1769 ;; *************** function _putch *****************
  1770 ;; Defined at:
  1771 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;  c               1    wreg     unsigned char 
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;  c               1    0[COMRAM] unsigned char 
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  1    wreg      void 
  1778 ;; Registers used:
  1779 ;;		wreg
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1785 ;;      Params:         0       0       0       0       0       0       0       0       0
  1786 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1787 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1788 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1789 ;;Total ram usage:        0 bytes
  1790 ;; Hardware stack levels used: 1
  1791 ;; Hardware stack levels required when called: 4
  1792 ;; This function calls:
  1793 ;;		Nothing
  1794 ;; This function is called by:
  1795 ;;		_fputc
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           	psect	text10
  1800  0011EA                     __ptext10:
  1801                           	callstack 0
  1802  0011EA                     _putch:
  1803                           	callstack 21
  1804  0011EA  0012               	return		;funcret
  1805  0011EC                     __end_of_putch:
  1806                           	callstack 0
  1807                           
  1808 ;; *************** function _SYSTEM_Initialize *****************
  1809 ;; Defined at:
  1810 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;		None
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;		None
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  1    wreg      void 
  1817 ;; Registers used:
  1818 ;;		wreg, status,2, status,0, cstack
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1824 ;;      Params:         0       0       0       0       0       0       0       0       0
  1825 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1826 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1827 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1828 ;;Total ram usage:        0 bytes
  1829 ;; Hardware stack levels used: 1
  1830 ;; Hardware stack levels required when called: 6
  1831 ;; This function calls:
  1832 ;;		_ADCC_Initialize
  1833 ;;		_EUSART_Initialize
  1834 ;;		_EXT_INT_Initialize
  1835 ;;		_INTERRUPT_Initialize
  1836 ;;		_OSCILLATOR_Initialize
  1837 ;;		_PIN_MANAGER_Initialize
  1838 ;;		_PMD_Initialize
  1839 ;; This function is called by:
  1840 ;;		_main
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           	psect	text11
  1845  0010FC                     __ptext11:
  1846                           	callstack 0
  1847  0010FC                     _SYSTEM_Initialize:
  1848                           	callstack 24
  1849  0010FC                     
  1850                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  1851  0010FC  ECF3  F008         	call	_INTERRUPT_Initialize	;wreg free
  1852  001100                     
  1853                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  1854  001100  EC8D  F008         	call	_PMD_Initialize	;wreg free
  1855  001104                     
  1856                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1857  001104  ECA9  F006         	call	_PIN_MANAGER_Initialize	;wreg free
  1858  001108                     
  1859                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1860  001108  EC9B  F008         	call	_OSCILLATOR_Initialize	;wreg free
  1861  00110C                     
  1862                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
  1863  00110C  EC88  F007         	call	_ADCC_Initialize	;wreg free
  1864  001110                     
  1865                           ;mcc_generated_files/mcc.c: 57:     EXT_INT_Initialize();
  1866  001110  EC3F  F008         	call	_EXT_INT_Initialize	;wreg free
  1867  001114                     
  1868                           ;mcc_generated_files/mcc.c: 58:     EUSART_Initialize();
  1869  001114  EC6C  F006         	call	_EUSART_Initialize	;wreg free
  1870  001118  0012               	return		;funcret
  1871  00111A                     __end_of_SYSTEM_Initialize:
  1872                           	callstack 0
  1873                           
  1874 ;; *************** function _PMD_Initialize *****************
  1875 ;; Defined at:
  1876 ;;		line 75 in file "mcc_generated_files/mcc.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;		None
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;		None
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  1    wreg      void 
  1883 ;; Registers used:
  1884 ;;		wreg, status,2
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1890 ;;      Params:         0       0       0       0       0       0       0       0       0
  1891 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1892 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1893 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1894 ;;Total ram usage:        0 bytes
  1895 ;; Hardware stack levels used: 1
  1896 ;; Hardware stack levels required when called: 4
  1897 ;; This function calls:
  1898 ;;		Nothing
  1899 ;; This function is called by:
  1900 ;;		_SYSTEM_Initialize
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           	psect	text12
  1905  00111A                     __ptext12:
  1906                           	callstack 0
  1907  00111A                     _PMD_Initialize:
  1908                           	callstack 25
  1909  00111A                     
  1910                           ;mcc_generated_files/mcc.c: 78:     PMD0 = 0x00;
  1911  00111A  0E00               	movlw	0
  1912  00111C  010E               	movlb	14	; () banked
  1913  00111E  6FE1               	movwf	225,b	;volatile
  1914                           
  1915                           ;mcc_generated_files/mcc.c: 80:     PMD1 = 0x00;
  1916  001120  0E00               	movlw	0
  1917  001122  6FE2               	movwf	226,b	;volatile
  1918                           
  1919                           ;mcc_generated_files/mcc.c: 82:     PMD2 = 0x00;
  1920  001124  0E00               	movlw	0
  1921  001126  6FE3               	movwf	227,b	;volatile
  1922                           
  1923                           ;mcc_generated_files/mcc.c: 84:     PMD3 = 0x00;
  1924  001128  0E00               	movlw	0
  1925  00112A  6FE4               	movwf	228,b	;volatile
  1926                           
  1927                           ;mcc_generated_files/mcc.c: 86:     PMD4 = 0x00;
  1928  00112C  0E00               	movlw	0
  1929  00112E  6FE5               	movwf	229,b	;volatile
  1930                           
  1931                           ;mcc_generated_files/mcc.c: 88:     PMD5 = 0x00;
  1932  001130  0E00               	movlw	0
  1933  001132  6FE6               	movwf	230,b	;volatile
  1934  001134                     
  1935                           ; BSR set to: 14
  1936  001134  0012               	return		;funcret
  1937  001136                     __end_of_PMD_Initialize:
  1938                           	callstack 0
  1939                           
  1940 ;; *************** function _PIN_MANAGER_Initialize *****************
  1941 ;; Defined at:
  1942 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;		None
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;		None
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      void 
  1949 ;; Registers used:
  1950 ;;		wreg, status,2
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1956 ;;      Params:         0       0       0       0       0       0       0       0       0
  1957 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1958 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1959 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1960 ;;Total ram usage:        0 bytes
  1961 ;; Hardware stack levels used: 1
  1962 ;; Hardware stack levels required when called: 4
  1963 ;; This function calls:
  1964 ;;		Nothing
  1965 ;; This function is called by:
  1966 ;;		_SYSTEM_Initialize
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           	psect	text13
  1971  000D52                     __ptext13:
  1972                           	callstack 0
  1973  000D52                     _PIN_MANAGER_Initialize:
  1974                           	callstack 25
  1975  000D52                     
  1976                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1977  000D52  0E00               	movlw	0
  1978  000D54  6E83               	movwf	131,c	;volatile
  1979                           
  1980                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1981  000D56  0E00               	movlw	0
  1982  000D58  6E84               	movwf	132,c	;volatile
  1983                           
  1984                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  1985  000D5A  0E00               	movlw	0
  1986  000D5C  6E85               	movwf	133,c	;volatile
  1987  000D5E                     
  1988                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  1989  000D5E  6888               	setf	136,c	;volatile
  1990  000D60                     
  1991                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  1992  000D60  6889               	setf	137,c	;volatile
  1993                           
  1994                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  1995  000D62  0EBF               	movlw	191
  1996  000D64  6E8A               	movwf	138,c	;volatile
  1997                           
  1998                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x7F;
  1999  000D66  0E7F               	movlw	127
  2000  000D68  010F               	movlb	15	; () banked
  2001  000D6A  6F21               	movwf	33,b	;volatile
  2002                           
  2003                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xFC;
  2004  000D6C  0EFC               	movlw	252
  2005  000D6E  6F19               	movwf	25,b	;volatile
  2006  000D70                     
  2007                           ; BSR set to: 15
  2008                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xFF;
  2009  000D70  6911               	setf	17,b	;volatile
  2010                           
  2011                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
  2012  000D72  0E00               	movlw	0
  2013  000D74  6F2D               	movwf	45,b	;volatile
  2014                           
  2015                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
  2016  000D76  0E00               	movlw	0
  2017  000D78  6F18               	movwf	24,b	;volatile
  2018                           
  2019                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
  2020  000D7A  0E00               	movlw	0
  2021  000D7C  6F10               	movwf	16,b	;volatile
  2022                           
  2023                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
  2024  000D7E  0E00               	movlw	0
  2025  000D80  6F20               	movwf	32,b	;volatile
  2026                           
  2027                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  2028  000D82  0E00               	movlw	0
  2029  000D84  6F0F               	movwf	15,b	;volatile
  2030                           
  2031                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  2032  000D86  0E00               	movlw	0
  2033  000D88  6F17               	movwf	23,b	;volatile
  2034                           
  2035                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
  2036  000D8A  0E00               	movlw	0
  2037  000D8C  6F1F               	movwf	31,b	;volatile
  2038  000D8E                     
  2039                           ; BSR set to: 15
  2040                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
  2041  000D8E  690E               	setf	14,b	;volatile
  2042  000D90                     
  2043                           ; BSR set to: 15
  2044                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
  2045  000D90  6916               	setf	22,b	;volatile
  2046  000D92                     
  2047                           ; BSR set to: 15
  2048                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  2049  000D92  691E               	setf	30,b	;volatile
  2050  000D94                     
  2051                           ; BSR set to: 15
  2052                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0xFF;
  2053  000D94  690D               	setf	13,b	;volatile
  2054  000D96                     
  2055                           ; BSR set to: 15
  2056                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xFF;
  2057  000D96  6915               	setf	21,b	;volatile
  2058  000D98                     
  2059                           ; BSR set to: 15
  2060                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
  2061  000D98  691D               	setf	29,b	;volatile
  2062                           
  2063                           ;mcc_generated_files/pin_manager.c: 106:     INLVLE = 0x08;
  2064  000D9A  0E08               	movlw	8
  2065  000D9C  6F2A               	movwf	42,b	;volatile
  2066                           
  2067                           ;mcc_generated_files/pin_manager.c: 115:     RXPPS = 0x17;
  2068  000D9E  0E17               	movlw	23
  2069  000DA0  010E               	movlb	14	; () banked
  2070  000DA2  6FB5               	movwf	181,b	;volatile
  2071                           
  2072                           ;mcc_generated_files/pin_manager.c: 116:     INT0PPS = 0x08;
  2073  000DA4  0E08               	movlw	8
  2074  000DA6  6FA1               	movwf	161,b	;volatile
  2075                           
  2076                           ;mcc_generated_files/pin_manager.c: 117:     INT1PPS = 0x09;
  2077  000DA8  0E09               	movlw	9
  2078  000DAA  6FA2               	movwf	162,b	;volatile
  2079                           
  2080                           ;mcc_generated_files/pin_manager.c: 118:     RC6PPS = 0x09;
  2081  000DAC  0E09               	movlw	9
  2082  000DAE  6FFD               	movwf	253,b	;volatile
  2083  000DB0                     
  2084                           ; BSR set to: 14
  2085  000DB0  0012               	return		;funcret
  2086  000DB2                     __end_of_PIN_MANAGER_Initialize:
  2087                           	callstack 0
  2088                           
  2089 ;; *************** function _OSCILLATOR_Initialize *****************
  2090 ;; Defined at:
  2091 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;		None
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;		None
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  1    wreg      void 
  2098 ;; Registers used:
  2099 ;;		wreg, status,2
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2105 ;;      Params:         0       0       0       0       0       0       0       0       0
  2106 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2107 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2108 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2109 ;;Total ram usage:        0 bytes
  2110 ;; Hardware stack levels used: 1
  2111 ;; Hardware stack levels required when called: 4
  2112 ;; This function calls:
  2113 ;;		Nothing
  2114 ;; This function is called by:
  2115 ;;		_SYSTEM_Initialize
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119                           	psect	text14
  2120  001136                     __ptext14:
  2121                           	callstack 0
  2122  001136                     _OSCILLATOR_Initialize:
  2123                           	callstack 25
  2124  001136                     
  2125                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x60;
  2126  001136  0E60               	movlw	96
  2127  001138  010E               	movlb	14	; () banked
  2128  00113A  6FD8               	movwf	216,b	;volatile
  2129                           
  2130                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
  2131  00113C  0E00               	movlw	0
  2132  00113E  6FDA               	movwf	218,b	;volatile
  2133                           
  2134                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
  2135  001140  0E00               	movlw	0
  2136  001142  6FDC               	movwf	220,b	;volatile
  2137                           
  2138                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x08;
  2139  001144  0E08               	movlw	8
  2140  001146  6FDE               	movwf	222,b	;volatile
  2141                           
  2142                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
  2143  001148  0E00               	movlw	0
  2144  00114A  6FDD               	movwf	221,b	;volatile
  2145  00114C                     
  2146                           ; BSR set to: 14
  2147  00114C  0012               	return		;funcret
  2148  00114E                     __end_of_OSCILLATOR_Initialize:
  2149                           	callstack 0
  2150                           
  2151 ;; *************** function _INTERRUPT_Initialize *****************
  2152 ;; Defined at:
  2153 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;		None
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;		None
  2158 ;; Return value:  Size  Location     Type
  2159 ;;                  1    wreg      void 
  2160 ;; Registers used:
  2161 ;;		None
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2167 ;;      Params:         0       0       0       0       0       0       0       0       0
  2168 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2169 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2170 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2171 ;;Total ram usage:        0 bytes
  2172 ;; Hardware stack levels used: 1
  2173 ;; Hardware stack levels required when called: 4
  2174 ;; This function calls:
  2175 ;;		Nothing
  2176 ;; This function is called by:
  2177 ;;		_SYSTEM_Initialize
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           	psect	text15
  2182  0011E6                     __ptext15:
  2183                           	callstack 0
  2184  0011E6                     _INTERRUPT_Initialize:
  2185                           	callstack 25
  2186  0011E6                     
  2187                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  2188  0011E6  9AF2               	bcf	242,5,c	;volatile
  2189  0011E8  0012               	return		;funcret
  2190  0011EA                     __end_of_INTERRUPT_Initialize:
  2191                           	callstack 0
  2192                           
  2193 ;; *************** function _EXT_INT_Initialize *****************
  2194 ;; Defined at:
  2195 ;;		line 86 in file "mcc_generated_files/ext_int.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;		None
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;		None
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  1    wreg      void 
  2202 ;; Registers used:
  2203 ;;		wreg, status,2, status,0, cstack
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2209 ;;      Params:         0       0       0       0       0       0       0       0       0
  2210 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2211 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2212 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2213 ;;Total ram usage:        0 bytes
  2214 ;; Hardware stack levels used: 1
  2215 ;; Hardware stack levels required when called: 5
  2216 ;; This function calls:
  2217 ;;		_INT0_SetInterruptHandler
  2218 ;;		_INT1_SetInterruptHandler
  2219 ;; This function is called by:
  2220 ;;		_SYSTEM_Initialize
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224                           	psect	text16
  2225  00107E                     __ptext16:
  2226                           	callstack 0
  2227  00107E                     _EXT_INT_Initialize:
  2228                           	callstack 24
  2229  00107E                     
  2230                           ;mcc_generated_files/ext_int.c: 91:     (PIR0bits.INT0IF = 0);
  2231  00107E  010E               	movlb	14	; () banked
  2232  001080  91CA               	bcf	202,0,b	;volatile
  2233                           
  2234                           ;mcc_generated_files/ext_int.c: 92:     (INTCONbits.INT0EDG = 1);
  2235  001082  80F2               	bsf	242,0,c	;volatile
  2236  001084                     
  2237                           ; BSR set to: 14
  2238                           ;mcc_generated_files/ext_int.c: 94:     INT0_SetInterruptHandler(INT0_DefaultInterruptHa
      +                          ndler);
  2239  001084  0EEE               	movlw	low _INT0_DefaultInterruptHandler
  2240  001086  6E05               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  2241  001088  0E11               	movlw	high _INT0_DefaultInterruptHandler
  2242  00108A  6E06               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  2243  00108C  ECC1  F008         	call	_INT0_SetInterruptHandler	;wreg free
  2244  001090                     
  2245                           ;mcc_generated_files/ext_int.c: 95:     (PIE0bits.INT0IE = 1);
  2246  001090  010E               	movlb	14	; () banked
  2247  001092  81C2               	bsf	194,0,b	;volatile
  2248  001094                     
  2249                           ; BSR set to: 14
  2250                           ;mcc_generated_files/ext_int.c: 100:     (PIR0bits.INT1IF = 0);
  2251  001094  93CA               	bcf	202,1,b	;volatile
  2252  001096                     
  2253                           ; BSR set to: 14
  2254                           ;mcc_generated_files/ext_int.c: 101:     (INTCONbits.INT1EDG = 1);
  2255  001096  82F2               	bsf	242,1,c	;volatile
  2256                           
  2257                           ;mcc_generated_files/ext_int.c: 103:     INT1_SetInterruptHandler(INT1_DefaultInterruptH
      +                          andler);
  2258  001098  0EEC               	movlw	low _INT1_DefaultInterruptHandler
  2259  00109A  6E05               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
  2260  00109C  0E11               	movlw	high _INT1_DefaultInterruptHandler
  2261  00109E  6E06               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
  2262  0010A0  ECBC  F008         	call	_INT1_SetInterruptHandler	;wreg free
  2263  0010A4                     
  2264                           ;mcc_generated_files/ext_int.c: 104:     (PIE0bits.INT1IE = 1);
  2265  0010A4  010E               	movlb	14	; () banked
  2266  0010A6  83C2               	bsf	194,1,b	;volatile
  2267  0010A8                     
  2268                           ; BSR set to: 14
  2269  0010A8  0012               	return		;funcret
  2270  0010AA                     __end_of_EXT_INT_Initialize:
  2271                           	callstack 0
  2272                           
  2273 ;; *************** function _INT1_SetInterruptHandler *****************
  2274 ;; Defined at:
  2275 ;;		line 77 in file "mcc_generated_files/ext_int.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
  2278 ;;		 -> INT1_DefaultInterruptHandler(1), 
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;		None
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  1    wreg      void 
  2283 ;; Registers used:
  2284 ;;		wreg, status,2, status,0
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2290 ;;      Params:         2       0       0       0       0       0       0       0       0
  2291 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2292 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2293 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2294 ;;Total ram usage:        2 bytes
  2295 ;; Hardware stack levels used: 1
  2296 ;; Hardware stack levels required when called: 4
  2297 ;; This function calls:
  2298 ;;		Nothing
  2299 ;; This function is called by:
  2300 ;;		_EXT_INT_Initialize
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           	psect	text17
  2305  001178                     __ptext17:
  2306                           	callstack 0
  2307  001178                     _INT1_SetInterruptHandler:
  2308                           	callstack 24
  2309  001178                     
  2310                           ;mcc_generated_files/ext_int.c: 78:     INT1_InterruptHandler = InterruptHandler;
  2311  001178  C005  F056         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  2312  00117C  C006  F057         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  2313  001180  0012               	return		;funcret
  2314  001182                     __end_of_INT1_SetInterruptHandler:
  2315                           	callstack 0
  2316                           
  2317 ;; *************** function _INT0_SetInterruptHandler *****************
  2318 ;; Defined at:
  2319 ;;		line 51 in file "mcc_generated_files/ext_int.c"
  2320 ;; Parameters:    Size  Location     Type
  2321 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
  2322 ;;		 -> INT0_DefaultInterruptHandler(1), 
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;		None
  2325 ;; Return value:  Size  Location     Type
  2326 ;;                  1    wreg      void 
  2327 ;; Registers used:
  2328 ;;		wreg, status,2, status,0
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2334 ;;      Params:         2       0       0       0       0       0       0       0       0
  2335 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2336 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2337 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2338 ;;Total ram usage:        2 bytes
  2339 ;; Hardware stack levels used: 1
  2340 ;; Hardware stack levels required when called: 4
  2341 ;; This function calls:
  2342 ;;		Nothing
  2343 ;; This function is called by:
  2344 ;;		_EXT_INT_Initialize
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348                           	psect	text18
  2349  001182                     __ptext18:
  2350                           	callstack 0
  2351  001182                     _INT0_SetInterruptHandler:
  2352                           	callstack 24
  2353  001182                     
  2354                           ;mcc_generated_files/ext_int.c: 52:     INT0_InterruptHandler = InterruptHandler;
  2355  001182  C005  F058         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  2356  001186  C006  F059         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  2357  00118A  0012               	return		;funcret
  2358  00118C                     __end_of_INT0_SetInterruptHandler:
  2359                           	callstack 0
  2360                           
  2361 ;; *************** function _EUSART_Initialize *****************
  2362 ;; Defined at:
  2363 ;;		line 88 in file "mcc_generated_files/eusart.c"
  2364 ;; Parameters:    Size  Location     Type
  2365 ;;		None
  2366 ;; Auto vars:     Size  Location     Type
  2367 ;;		None
  2368 ;; Return value:  Size  Location     Type
  2369 ;;                  1    wreg      void 
  2370 ;; Registers used:
  2371 ;;		wreg, status,2, status,0, cstack
  2372 ;; Tracked objects:
  2373 ;;		On entry : 0/0
  2374 ;;		On exit  : 0/0
  2375 ;;		Unchanged: 0/0
  2376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2377 ;;      Params:         0       0       0       0       0       0       0       0       0
  2378 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2379 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2380 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2381 ;;Total ram usage:        0 bytes
  2382 ;; Hardware stack levels used: 1
  2383 ;; Hardware stack levels required when called: 5
  2384 ;; This function calls:
  2385 ;;		_EUSART_SetErrorHandler
  2386 ;;		_EUSART_SetFramingErrorHandler
  2387 ;;		_EUSART_SetOverrunErrorHandler
  2388 ;;		_EUSART_SetRxInterruptHandler
  2389 ;;		_EUSART_SetTxInterruptHandler
  2390 ;; This function is called by:
  2391 ;;		_SYSTEM_Initialize
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           	psect	text19
  2396  000CD8                     __ptext19:
  2397                           	callstack 0
  2398  000CD8                     _EUSART_Initialize:
  2399                           	callstack 24
  2400  000CD8                     
  2401                           ;mcc_generated_files/eusart.c: 91:     PIE3bits.RCIE = 0;
  2402  000CD8  010E               	movlb	14	; () banked
  2403  000CDA  9BC5               	bcf	197,5,b	;volatile
  2404  000CDC                     
  2405                           ; BSR set to: 14
  2406                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  2407  000CDC  0EF0               	movlw	low _EUSART_Receive_ISR
  2408  000CDE  6E05               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^0,c
  2409  000CE0  0E0A               	movlw	high _EUSART_Receive_ISR
  2410  000CE2  6E06               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^0,c
  2411  000CE4  ECCB  F008         	call	_EUSART_SetRxInterruptHandler	;wreg free
  2412  000CE8                     
  2413                           ;mcc_generated_files/eusart.c: 93:     PIE3bits.TXIE = 0;
  2414  000CE8  010E               	movlb	14	; () banked
  2415  000CEA  99C5               	bcf	197,4,b	;volatile
  2416                           
  2417                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  2418  000CEC  0EAA               	movlw	low _EUSART_Transmit_ISR
  2419  000CEE  6E05               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^0,c
  2420  000CF0  0E0F               	movlw	high _EUSART_Transmit_ISR
  2421  000CF2  6E06               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^0,c
  2422  000CF4  ECC6  F008         	call	_EUSART_SetTxInterruptHandler	;wreg free
  2423  000CF8                     
  2424                           ;mcc_generated_files/eusart.c: 98:     BAUD1CON = 0x08;
  2425  000CF8  0E08               	movlw	8
  2426  000CFA  6E9F               	movwf	159,c	;volatile
  2427  000CFC                     
  2428                           ;mcc_generated_files/eusart.c: 101:     RC1STA = 0x90;
  2429  000CFC  0E90               	movlw	144
  2430  000CFE  6E9D               	movwf	157,c	;volatile
  2431  000D00                     
  2432                           ;mcc_generated_files/eusart.c: 104:     TX1STA = 0x24;
  2433  000D00  0E24               	movlw	36
  2434  000D02  6E9E               	movwf	158,c	;volatile
  2435  000D04                     
  2436                           ;mcc_generated_files/eusart.c: 107:     SP1BRGL = 0x8A;
  2437  000D04  0E8A               	movlw	138
  2438  000D06  6E9B               	movwf	155,c	;volatile
  2439  000D08                     
  2440                           ;mcc_generated_files/eusart.c: 110:     SP1BRGH = 0x00;
  2441  000D08  0E00               	movlw	0
  2442  000D0A  6E9C               	movwf	156,c	;volatile
  2443  000D0C                     
  2444                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  2445  000D0C  0EF0               	movlw	low _EUSART_DefaultFramingErrorHandler
  2446  000D0E  6E05               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
  2447  000D10  0E11               	movlw	high _EUSART_DefaultFramingErrorHandler
  2448  000D12  6E06               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
  2449  000D14  ECD5  F008         	call	_EUSART_SetFramingErrorHandler	;wreg free
  2450  000D18                     
  2451                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  2452  000D18  0EDA               	movlw	low _EUSART_DefaultOverrunErrorHandler
  2453  000D1A  6E05               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
  2454  000D1C  0E11               	movlw	high _EUSART_DefaultOverrunErrorHandler
  2455  000D1E  6E06               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2456  000D20  ECD0  F008         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  2457  000D24                     
  2458                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  2459  000D24  0EE0               	movlw	low _EUSART_DefaultErrorHandler
  2460  000D26  6E05               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
  2461  000D28  0E11               	movlw	high _EUSART_DefaultErrorHandler
  2462  000D2A  6E06               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
  2463  000D2C  ECDA  F008         	call	_EUSART_SetErrorHandler	;wreg free
  2464                           
  2465                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  2466  000D30  0E00               	movlw	0
  2467  000D32  6E4A               	movwf	_eusartRxLastError^0,c	;volatile
  2468                           
  2469                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  2470  000D34  0E00               	movlw	0
  2471  000D36  6E4F               	movwf	_eusartTxHead^0,c	;volatile
  2472                           
  2473                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  2474  000D38  0E00               	movlw	0
  2475  000D3A  6E4E               	movwf	_eusartTxTail^0,c	;volatile
  2476                           
  2477                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  2478  000D3C  0E08               	movlw	8
  2479  000D3E  6E5A               	movwf	_eusartTxBufferRemaining^0,c	;volatile
  2480                           
  2481                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  2482  000D40  0E00               	movlw	0
  2483  000D42  6E4D               	movwf	_eusartRxHead^0,c	;volatile
  2484                           
  2485                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  2486  000D44  0E00               	movlw	0
  2487  000D46  6E4C               	movwf	_eusartRxTail^0,c	;volatile
  2488                           
  2489                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  2490  000D48  0E00               	movlw	0
  2491  000D4A  6E4B               	movwf	_eusartRxCount^0,c	;volatile
  2492  000D4C                     
  2493                           ;mcc_generated_files/eusart.c: 129:     PIE3bits.RCIE = 1;
  2494  000D4C  010E               	movlb	14	; () banked
  2495  000D4E  8BC5               	bsf	197,5,b	;volatile
  2496  000D50                     
  2497                           ; BSR set to: 14
  2498  000D50  0012               	return		;funcret
  2499  000D52                     __end_of_EUSART_Initialize:
  2500                           	callstack 0
  2501                           
  2502 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  2503 ;; Defined at:
  2504 ;;		line 276 in file "mcc_generated_files/eusart.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2507 ;;		 -> EUSART_Transmit_ISR(1), 
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;		None
  2510 ;; Return value:  Size  Location     Type
  2511 ;;                  1    wreg      void 
  2512 ;; Registers used:
  2513 ;;		wreg, status,2, status,0
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2519 ;;      Params:         2       0       0       0       0       0       0       0       0
  2520 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2521 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2522 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2523 ;;Total ram usage:        2 bytes
  2524 ;; Hardware stack levels used: 1
  2525 ;; Hardware stack levels required when called: 4
  2526 ;; This function calls:
  2527 ;;		Nothing
  2528 ;; This function is called by:
  2529 ;;		_EUSART_Initialize
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533                           	psect	text20
  2534  00118C                     __ptext20:
  2535                           	callstack 0
  2536  00118C                     _EUSART_SetTxInterruptHandler:
  2537                           	callstack 24
  2538  00118C                     
  2539                           ;mcc_generated_files/eusart.c: 277:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  2540  00118C  C005  F054         	movff	EUSART_SetTxInterruptHandler@interruptHandler,_EUSART_TxDefaultInterruptHandler
  2541  001190  C006  F055         	movff	EUSART_SetTxInterruptHandler@interruptHandler+1,_EUSART_TxDefaultInterruptHandler
      +                          +1
  2542  001194  0012               	return		;funcret
  2543  001196                     __end_of_EUSART_SetTxInterruptHandler:
  2544                           	callstack 0
  2545                           
  2546 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  2547 ;; Defined at:
  2548 ;;		line 280 in file "mcc_generated_files/eusart.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2551 ;;		 -> EUSART_Receive_ISR(1), 
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;		None
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  1    wreg      void 
  2556 ;; Registers used:
  2557 ;;		wreg, status,2, status,0
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2563 ;;      Params:         2       0       0       0       0       0       0       0       0
  2564 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2565 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2566 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2567 ;;Total ram usage:        2 bytes
  2568 ;; Hardware stack levels used: 1
  2569 ;; Hardware stack levels required when called: 4
  2570 ;; This function calls:
  2571 ;;		Nothing
  2572 ;; This function is called by:
  2573 ;;		_EUSART_Initialize
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           	psect	text21
  2578  001196                     __ptext21:
  2579                           	callstack 0
  2580  001196                     _EUSART_SetRxInterruptHandler:
  2581                           	callstack 24
  2582  001196                     
  2583                           ;mcc_generated_files/eusart.c: 281:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  2584  001196  C005  F052         	movff	EUSART_SetRxInterruptHandler@interruptHandler,_EUSART_RxDefaultInterruptHandler
  2585  00119A  C006  F053         	movff	EUSART_SetRxInterruptHandler@interruptHandler+1,_EUSART_RxDefaultInterruptHandler
      +                          +1
  2586  00119E  0012               	return		;funcret
  2587  0011A0                     __end_of_EUSART_SetRxInterruptHandler:
  2588                           	callstack 0
  2589                           
  2590 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  2591 ;; Defined at:
  2592 ;;		line 268 in file "mcc_generated_files/eusart.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2595 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;		None
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      void 
  2600 ;; Registers used:
  2601 ;;		wreg, status,2, status,0
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2607 ;;      Params:         2       0       0       0       0       0       0       0       0
  2608 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2609 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2610 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2611 ;;Total ram usage:        2 bytes
  2612 ;; Hardware stack levels used: 1
  2613 ;; Hardware stack levels required when called: 4
  2614 ;; This function calls:
  2615 ;;		Nothing
  2616 ;; This function is called by:
  2617 ;;		_EUSART_Initialize
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           	psect	text22
  2622  0011A0                     __ptext22:
  2623                           	callstack 0
  2624  0011A0                     _EUSART_SetOverrunErrorHandler:
  2625                           	callstack 24
  2626  0011A0                     
  2627                           ;mcc_generated_files/eusart.c: 269:     EUSART_OverrunErrorHandler = interruptHandler;
  2628  0011A0  C005  F0E4         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  2629  0011A4  C006  F0E5         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  2630  0011A8  0012               	return		;funcret
  2631  0011AA                     __end_of_EUSART_SetOverrunErrorHandler:
  2632                           	callstack 0
  2633                           
  2634 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  2635 ;; Defined at:
  2636 ;;		line 264 in file "mcc_generated_files/eusart.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2639 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;		None
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  1    wreg      void 
  2644 ;; Registers used:
  2645 ;;		wreg, status,2, status,0
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2651 ;;      Params:         2       0       0       0       0       0       0       0       0
  2652 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2653 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2654 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2655 ;;Total ram usage:        2 bytes
  2656 ;; Hardware stack levels used: 1
  2657 ;; Hardware stack levels required when called: 4
  2658 ;; This function calls:
  2659 ;;		Nothing
  2660 ;; This function is called by:
  2661 ;;		_EUSART_Initialize
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665                           	psect	text23
  2666  0011AA                     __ptext23:
  2667                           	callstack 0
  2668  0011AA                     _EUSART_SetFramingErrorHandler:
  2669                           	callstack 24
  2670  0011AA                     
  2671                           ;mcc_generated_files/eusart.c: 265:     EUSART_FramingErrorHandler = interruptHandler;
  2672  0011AA  C005  F050         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  2673  0011AE  C006  F051         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  2674  0011B2  0012               	return		;funcret
  2675  0011B4                     __end_of_EUSART_SetFramingErrorHandler:
  2676                           	callstack 0
  2677                           
  2678 ;; *************** function _EUSART_SetErrorHandler *****************
  2679 ;; Defined at:
  2680 ;;		line 272 in file "mcc_generated_files/eusart.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  2683 ;;		 -> EUSART_DefaultErrorHandler(1), 
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;		None
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  1    wreg      void 
  2688 ;; Registers used:
  2689 ;;		wreg, status,2, status,0
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2695 ;;      Params:         2       0       0       0       0       0       0       0       0
  2696 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2697 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2698 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2699 ;;Total ram usage:        2 bytes
  2700 ;; Hardware stack levels used: 1
  2701 ;; Hardware stack levels required when called: 4
  2702 ;; This function calls:
  2703 ;;		Nothing
  2704 ;; This function is called by:
  2705 ;;		_EUSART_Initialize
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           	psect	text24
  2710  0011B4                     __ptext24:
  2711                           	callstack 0
  2712  0011B4                     _EUSART_SetErrorHandler:
  2713                           	callstack 24
  2714  0011B4                     
  2715                           ;mcc_generated_files/eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  2716  0011B4  C005  F0E2         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  2717  0011B8  C006  F0E3         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  2718  0011BC  0012               	return		;funcret
  2719  0011BE                     __end_of_EUSART_SetErrorHandler:
  2720                           	callstack 0
  2721                           
  2722 ;; *************** function _ADCC_Initialize *****************
  2723 ;; Defined at:
  2724 ;;		line 62 in file "mcc_generated_files/adcc.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;		None
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;		None
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  1    wreg      void 
  2731 ;; Registers used:
  2732 ;;		wreg, status,2
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2738 ;;      Params:         0       0       0       0       0       0       0       0       0
  2739 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2740 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2741 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2742 ;;Total ram usage:        0 bytes
  2743 ;; Hardware stack levels used: 1
  2744 ;; Hardware stack levels required when called: 4
  2745 ;; This function calls:
  2746 ;;		Nothing
  2747 ;; This function is called by:
  2748 ;;		_SYSTEM_Initialize
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           	psect	text25
  2753  000F10                     __ptext25:
  2754                           	callstack 0
  2755  000F10                     _ADCC_Initialize:
  2756                           	callstack 25
  2757  000F10                     
  2758                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  2759  000F10  0E00               	movlw	0
  2760  000F12  6E6A               	movwf	106,c	;volatile
  2761                           
  2762                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  2763  000F14  0E00               	movlw	0
  2764  000F16  6E6B               	movwf	107,c	;volatile
  2765                           
  2766                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  2767  000F18  0E00               	movlw	0
  2768  000F1A  6E6C               	movwf	108,c	;volatile
  2769                           
  2770                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  2771  000F1C  0E00               	movlw	0
  2772  000F1E  6E6D               	movwf	109,c	;volatile
  2773                           
  2774                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  2775  000F20  0E00               	movlw	0
  2776  000F22  6E68               	movwf	104,c	;volatile
  2777                           
  2778                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  2779  000F24  0E00               	movlw	0
  2780  000F26  6E69               	movwf	105,c	;volatile
  2781                           
  2782                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
  2783  000F28  0E00               	movlw	0
  2784  000F2A  6E66               	movwf	102,c	;volatile
  2785                           
  2786                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x00;
  2787  000F2C  0E00               	movlw	0
  2788  000F2E  010F               	movlb	15	; () banked
  2789  000F30  6F5F               	movwf	95,b	;volatile
  2790                           
  2791                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
  2792  000F32  0E00               	movlw	0
  2793  000F34  6F5D               	movwf	93,b	;volatile
  2794                           
  2795                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
  2796  000F36  0E00               	movlw	0
  2797  000F38  6F5E               	movwf	94,b	;volatile
  2798                           
  2799                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
  2800  000F3A  0E00               	movlw	0
  2801  000F3C  6F59               	movwf	89,b	;volatile
  2802                           
  2803                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x02;
  2804  000F3E  0E02               	movlw	2
  2805  000F40  6F5A               	movwf	90,b	;volatile
  2806                           
  2807                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
  2808  000F42  0E00               	movlw	0
  2809  000F44  6F5B               	movwf	91,b	;volatile
  2810                           
  2811                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
  2812  000F46  0E00               	movlw	0
  2813  000F48  6E65               	movwf	101,c	;volatile
  2814                           
  2815                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
  2816  000F4A  0E00               	movlw	0
  2817  000F4C  6F58               	movwf	88,b	;volatile
  2818                           
  2819                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
  2820  000F4E  0E00               	movlw	0
  2821  000F50  6F56               	movwf	86,b	;volatile
  2822                           
  2823                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x00;
  2824  000F52  0E00               	movlw	0
  2825  000F54  6F57               	movwf	87,b	;volatile
  2826                           
  2827                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x94;
  2828  000F56  0E94               	movlw	148
  2829  000F58  6E60               	movwf	96,c	;volatile
  2830                           
  2831                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x00;
  2832  000F5A  0E00               	movlw	0
  2833  000F5C  6F5C               	movwf	92,b	;volatile
  2834  000F5E                     
  2835                           ; BSR set to: 15
  2836  000F5E  0012               	return		;funcret
  2837  000F60                     __end_of_ADCC_Initialize:
  2838                           	callstack 0
  2839                           
  2840 ;; *************** function _EUSART_is_tx_ready *****************
  2841 ;; Defined at:
  2842 ;;		line 132 in file "mcc_generated_files/eusart.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;		None
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;		None
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  1    wreg      _Bool 
  2849 ;; Registers used:
  2850 ;;		wreg, status,2
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2856 ;;      Params:         0       0       0       0       0       0       0       0       0
  2857 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2858 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2859 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2860 ;;Total ram usage:        0 bytes
  2861 ;; Hardware stack levels used: 1
  2862 ;; Hardware stack levels required when called: 4
  2863 ;; This function calls:
  2864 ;;		Nothing
  2865 ;; This function is called by:
  2866 ;;		_main
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           	psect	text26
  2871  00114E                     __ptext26:
  2872                           	callstack 0
  2873  00114E                     _EUSART_is_tx_ready:
  2874                           	callstack 26
  2875  00114E                     
  2876                           ;mcc_generated_files/eusart.c: 134:     return (eusartTxBufferRemaining ? 1 : 0);
  2877  00114E  505A               	movf	_eusartTxBufferRemaining^0,w,c	;volatile
  2878  001150  A4D8               	btfss	status,2,c
  2879  001152  EFAD  F008         	goto	u881
  2880  001156  EFB0  F008         	goto	u880
  2881  00115A                     u881:
  2882  00115A  0E01               	movlw	1
  2883  00115C  EFB1  F008         	goto	u890
  2884  001160                     u880:
  2885  001160  0E00               	movlw	0
  2886  001162                     u890:
  2887  001162  0012               	return		;funcret
  2888  001164                     __end_of_EUSART_is_tx_ready:
  2889                           	callstack 0
  2890                           
  2891 ;; *************** function _EUSART_Read *****************
  2892 ;; Defined at:
  2893 ;;		line 151 in file "mcc_generated_files/eusart.c"
  2894 ;; Parameters:    Size  Location     Type
  2895 ;;		None
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;  readValue       1    4[COMRAM] unsigned char 
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  1    wreg      unsigned char 
  2900 ;; Registers used:
  2901 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2907 ;;      Params:         0       0       0       0       0       0       0       0       0
  2908 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2909 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2910 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2911 ;;Total ram usage:        1 bytes
  2912 ;; Hardware stack levels used: 1
  2913 ;; Hardware stack levels required when called: 4
  2914 ;; This function calls:
  2915 ;;		Nothing
  2916 ;; This function is called by:
  2917 ;;		_main
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920                           
  2921                           	psect	text27
  2922  000EBE                     __ptext27:
  2923                           	callstack 0
  2924  000EBE                     _EUSART_Read:
  2925                           	callstack 26
  2926  000EBE                     l2203:
  2927                           
  2928                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  2929  000EBE  504B               	movf	_eusartRxCount^0,w,c	;volatile
  2930  000EC0  B4D8               	btfsc	status,2,c
  2931  000EC2  EF65  F007         	goto	u901
  2932  000EC6  EF67  F007         	goto	u900
  2933  000ECA                     u901:
  2934  000ECA  EF5F  F007         	goto	l2203
  2935  000ECE                     u900:
  2936  000ECE                     
  2937                           ;mcc_generated_files/eusart.c: 159:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
  2938  000ECE  0E3A               	movlw	low _eusartRxStatusBuffer
  2939  000ED0  244C               	addwf	_eusartRxTail^0,w,c	;volatile
  2940  000ED2  6ED9               	movwf	fsr2l,c
  2941  000ED4  6ADA               	clrf	fsr2h,c
  2942  000ED6  0E00               	movlw	high _eusartRxStatusBuffer
  2943  000ED8  22DA               	addwfc	fsr2h,f,c
  2944  000EDA  50DF               	movf	indf2,w,c
  2945  000EDC  6E4A               	movwf	_eusartRxLastError^0,c	;volatile
  2946                           
  2947                           ;mcc_generated_files/eusart.c: 161:     readValue = eusartRxBuffer[eusartRxTail++];
  2948  000EDE  0ECB               	movlw	low _eusartRxBuffer
  2949  000EE0  244C               	addwf	_eusartRxTail^0,w,c	;volatile
  2950  000EE2  6ED9               	movwf	fsr2l,c
  2951  000EE4  6ADA               	clrf	fsr2h,c
  2952  000EE6  0E00               	movlw	high _eusartRxBuffer
  2953  000EE8  22DA               	addwfc	fsr2h,f,c
  2954  000EEA  50DF               	movf	indf2,w,c
  2955  000EEC  6E05               	movwf	EUSART_Read@readValue^0,c
  2956  000EEE  2A4C               	incf	_eusartRxTail^0,f,c	;volatile
  2957  000EF0                     
  2958                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
  2959  000EF0  0E07               	movlw	7
  2960  000EF2  644C               	cpfsgt	_eusartRxTail^0,c	;volatile
  2961  000EF4  EF7E  F007         	goto	u911
  2962  000EF8  EF80  F007         	goto	u910
  2963  000EFC                     u911:
  2964  000EFC  EF82  F007         	goto	l2213
  2965  000F00                     u910:
  2966  000F00                     
  2967                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 164:         eus
      +                          artRxTail = 0;
  2968  000F00  0E00               	movlw	0
  2969  000F02  6E4C               	movwf	_eusartRxTail^0,c	;volatile
  2970  000F04                     l2213:
  2971                           
  2972                           ;mcc_generated_files/eusart.c: 166:     PIE3bits.RCIE = 0;
  2973  000F04  010E               	movlb	14	; () banked
  2974  000F06  9BC5               	bcf	197,5,b	;volatile
  2975  000F08                     
  2976                           ; BSR set to: 14
  2977                           ;mcc_generated_files/eusart.c: 167:     eusartRxCount--;
  2978  000F08  064B               	decf	_eusartRxCount^0,f,c	;volatile
  2979  000F0A                     
  2980                           ; BSR set to: 14
  2981                           ;mcc_generated_files/eusart.c: 168:     PIE3bits.RCIE = 1;
  2982  000F0A  8BC5               	bsf	197,5,b	;volatile
  2983  000F0C                     
  2984                           ; BSR set to: 14
  2985                           ;mcc_generated_files/eusart.c: 170:     return readValue;
  2986  000F0C  5005               	movf	EUSART_Read@readValue^0,w,c
  2987  000F0E                     
  2988                           ; BSR set to: 14
  2989  000F0E  0012               	return		;funcret
  2990  000F10                     __end_of_EUSART_Read:
  2991                           	callstack 0
  2992                           
  2993 ;; *************** function _INTERRUPT_InterruptManager *****************
  2994 ;; Defined at:
  2995 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  2996 ;; Parameters:    Size  Location     Type
  2997 ;;		None
  2998 ;; Auto vars:     Size  Location     Type
  2999 ;;		None
  3000 ;; Return value:  Size  Location     Type
  3001 ;;                  1    wreg      void 
  3002 ;; Registers used:
  3003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3009 ;;      Params:         0       0       0       0       0       0       0       0       0
  3010 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3011 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3012 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3013 ;;Total ram usage:        4 bytes
  3014 ;; Hardware stack levels used: 1
  3015 ;; Hardware stack levels required when called: 3
  3016 ;; This function calls:
  3017 ;;		Absolute function
  3018 ;;		_EUSART_Receive_ISR
  3019 ;;		_EUSART_Transmit_ISR
  3020 ;;		_INT0_ISR
  3021 ;;		_INT1_ISR
  3022 ;; This function is called by:
  3023 ;;		Interrupt level 2
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026                           
  3027                           	psect	intcode
  3028  000008                     __pintcode:
  3029                           	callstack 0
  3030  000008                     _INTERRUPT_InterruptManager:
  3031                           	callstack 21
  3032                           
  3033                           ; BSR set to: 14
  3034                           ;incstack = 0
  3035  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3036  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  3037  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3038  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  3039  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  3040  00001A                     
  3041                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.INT0IE == 1 && PIR0bits.IN
      +                          T0IF == 1)
  3042  00001A  010E               	movlb	14	; () banked
  3043  00001C  A1C2               	btfss	194,0,b	;volatile
  3044  00001E  EF13  F000         	goto	i2u102_41
  3045  000022  EF15  F000         	goto	i2u102_40
  3046  000026                     i2u102_41:
  3047  000026  EF20  F000         	goto	i2l472
  3048  00002A                     i2u102_40:
  3049  00002A                     
  3050                           ; BSR set to: 14
  3051  00002A  A1CA               	btfss	202,0,b	;volatile
  3052  00002C  EF1A  F000         	goto	i2u103_41
  3053  000030  EF1C  F000         	goto	i2u103_40
  3054  000034                     i2u103_41:
  3055  000034  EF20  F000         	goto	i2l472
  3056  000038                     i2u103_40:
  3057  000038                     
  3058                           ; BSR set to: 14
  3059                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         INT0_ISR();
  3060  000038  ECE4  F008         	call	_INT0_ISR	;wreg free
  3061                           
  3062                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  3063  00003C  EF73  F000         	goto	i2l482
  3064  000040                     i2l472:
  3065                           
  3066                           ; BSR set to: 14
  3067  000040  A3C2               	btfss	194,1,b	;volatile
  3068  000042  EF25  F000         	goto	i2u104_41
  3069  000046  EF27  F000         	goto	i2u104_40
  3070  00004A                     i2u104_41:
  3071  00004A  EF32  F000         	goto	i2l474
  3072  00004E                     i2u104_40:
  3073  00004E                     
  3074                           ; BSR set to: 14
  3075  00004E  A3CA               	btfss	202,1,b	;volatile
  3076  000050  EF2C  F000         	goto	i2u105_41
  3077  000054  EF2E  F000         	goto	i2u105_40
  3078  000058                     i2u105_41:
  3079  000058  EF32  F000         	goto	i2l474
  3080  00005C                     i2u105_40:
  3081  00005C                     
  3082                           ; BSR set to: 14
  3083                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         INT1_ISR();
  3084  00005C  ECDF  F008         	call	_INT1_ISR	;wreg free
  3085                           
  3086                           ;mcc_generated_files/interrupt_manager.c: 68:     }
  3087  000060  EF73  F000         	goto	i2l482
  3088  000064                     i2l474:
  3089                           
  3090                           ; BSR set to: 14
  3091  000064  ACF2               	btfss	242,6,c	;volatile
  3092  000066  EF37  F000         	goto	i2u106_41
  3093  00006A  EF39  F000         	goto	i2u106_40
  3094  00006E                     i2u106_41:
  3095  00006E  EF73  F000         	goto	i2l481
  3096  000072                     i2u106_40:
  3097  000072                     
  3098                           ; BSR set to: 14
  3099                           ;mcc_generated_files/interrupt_manager.c: 70:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 71:         if(PIE3bits.TXIE == 1 && PIR3bits.TXIF == 1)
  3100  000072  A9C5               	btfss	197,4,b	;volatile
  3101  000074  EF3E  F000         	goto	i2u107_41
  3102  000078  EF40  F000         	goto	i2u107_40
  3103  00007C                     i2u107_41:
  3104  00007C  EF56  F000         	goto	i2l477
  3105  000080                     i2u107_40:
  3106  000080                     
  3107                           ; BSR set to: 14
  3108  000080  A9CD               	btfss	205,4,b	;volatile
  3109  000082  EF45  F000         	goto	i2u108_41
  3110  000086  EF47  F000         	goto	i2u108_40
  3111  00008A                     i2u108_41:
  3112  00008A  EF56  F000         	goto	i2l477
  3113  00008E                     i2u108_40:
  3114  00008E                     
  3115                           ; BSR set to: 14
  3116                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             EUSART_TxDefaultInterruptHandler();
  3117  00008E  D802               	call	i2u109_48
  3118  000090  EF54  F000         	goto	i2u109_49
  3119  000094                     i2u109_48:
  3120  000094  0005               	push	
  3121  000096  6EFA               	movwf	pclath,c
  3122  000098  5054               	movf	_EUSART_TxDefaultInterruptHandler^0,w,c
  3123  00009A  6EFD               	movwf	tosl,c
  3124  00009C  5055               	movf	(_EUSART_TxDefaultInterruptHandler+1)^0,w,c
  3125  00009E  6EFE               	movwf	tosh,c
  3126  0000A0  50F8               	movf	tblptru,w,c
  3127  0000A2  6EFF               	movwf	tosu,c
  3128  0000A4  50FA               	movf	pclath,w,c
  3129  0000A6  0012               	return		;indir
  3130  0000A8                     i2u109_49:
  3131                           
  3132                           ;mcc_generated_files/interrupt_manager.c: 74:         }
  3133  0000A8  EF73  F000         	goto	i2l482
  3134  0000AC                     i2l477:
  3135                           
  3136                           ; BSR set to: 14
  3137  0000AC  ABC5               	btfss	197,5,b	;volatile
  3138  0000AE  EF5B  F000         	goto	i2u110_41
  3139  0000B2  EF5D  F000         	goto	i2u110_40
  3140  0000B6                     i2u110_41:
  3141  0000B6  EF73  F000         	goto	i2l481
  3142  0000BA                     i2u110_40:
  3143  0000BA                     
  3144                           ; BSR set to: 14
  3145  0000BA  ABCD               	btfss	205,5,b	;volatile
  3146  0000BC  EF62  F000         	goto	i2u111_41
  3147  0000C0  EF64  F000         	goto	i2u111_40
  3148  0000C4                     i2u111_41:
  3149  0000C4  EF73  F000         	goto	i2l481
  3150  0000C8                     i2u111_40:
  3151  0000C8                     
  3152                           ; BSR set to: 14
  3153                           ;mcc_generated_files/interrupt_manager.c: 76:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 77:             EUSART_RxDefaultInterruptHandler();
  3154  0000C8  D802               	call	i2u112_48
  3155  0000CA  EF71  F000         	goto	i2u112_49
  3156  0000CE                     i2u112_48:
  3157  0000CE  0005               	push	
  3158  0000D0  6EFA               	movwf	pclath,c
  3159  0000D2  5052               	movf	_EUSART_RxDefaultInterruptHandler^0,w,c
  3160  0000D4  6EFD               	movwf	tosl,c
  3161  0000D6  5053               	movf	(_EUSART_RxDefaultInterruptHandler+1)^0,w,c
  3162  0000D8  6EFE               	movwf	tosh,c
  3163  0000DA  50F8               	movf	tblptru,w,c
  3164  0000DC  6EFF               	movwf	tosu,c
  3165  0000DE  50FA               	movf	pclath,w,c
  3166  0000E0  0012               	return		;indir
  3167  0000E2                     i2u112_49:
  3168                           
  3169                           ;mcc_generated_files/interrupt_manager.c: 78:         }
  3170  0000E2  EF73  F000         	goto	i2l482
  3171  0000E6                     i2l481:
  3172  0000E6                     i2l482:
  3173  0000E6  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  3174  0000EA  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  3175  0000EE  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3176  0000F2  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3177  0000F6  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3178  0000F8  0011               	retfie		f
  3179  0000FA                     __end_of_INTERRUPT_InterruptManager:
  3180                           	callstack 0
  3181                           
  3182 ;; *************** function _INT1_ISR *****************
  3183 ;; Defined at:
  3184 ;;		line 59 in file "mcc_generated_files/ext_int.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;		None
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;		None
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  1    wreg      void 
  3191 ;; Registers used:
  3192 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3198 ;;      Params:         0       0       0       0       0       0       0       0       0
  3199 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3200 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3201 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3202 ;;Total ram usage:        0 bytes
  3203 ;; Hardware stack levels used: 1
  3204 ;; Hardware stack levels required when called: 2
  3205 ;; This function calls:
  3206 ;;		_INT1_CallBack
  3207 ;; This function is called by:
  3208 ;;		_INTERRUPT_InterruptManager
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           	psect	text29
  3213  0011BE                     __ptext29:
  3214                           	callstack 0
  3215  0011BE                     _INT1_ISR:
  3216                           	callstack 21
  3217  0011BE                     
  3218                           ;mcc_generated_files/ext_int.c: 61:     (PIR0bits.INT1IF = 0);
  3219  0011BE  010E               	movlb	14	; () banked
  3220  0011C0  93CA               	bcf	202,1,b	;volatile
  3221  0011C2                     
  3222                           ; BSR set to: 14
  3223                           ;mcc_generated_files/ext_int.c: 64:     INT1_CallBack();
  3224  0011C2  EC11  F008         	call	_INT1_CallBack	;wreg free
  3225  0011C6  0012               	return		;funcret
  3226  0011C8                     __end_of_INT1_ISR:
  3227                           	callstack 0
  3228                           
  3229 ;; *************** function _INT1_CallBack *****************
  3230 ;; Defined at:
  3231 ;;		line 68 in file "mcc_generated_files/ext_int.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;		None
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;		None
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  1    wreg      void 
  3238 ;; Registers used:
  3239 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3245 ;;      Params:         0       0       0       0       0       0       0       0       0
  3246 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3247 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3248 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3249 ;;Total ram usage:        0 bytes
  3250 ;; Hardware stack levels used: 1
  3251 ;; Hardware stack levels required when called: 1
  3252 ;; This function calls:
  3253 ;;		Absolute function
  3254 ;;		_INT1_DefaultInterruptHandler
  3255 ;; This function is called by:
  3256 ;;		_INT1_ISR
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           	psect	text30
  3261  001022                     __ptext30:
  3262                           	callstack 0
  3263  001022                     _INT1_CallBack:
  3264                           	callstack 21
  3265  001022                     
  3266                           ;mcc_generated_files/ext_int.c: 71:     if(INT1_InterruptHandler)
  3267  001022  5056               	movf	_INT1_InterruptHandler^0,w,c
  3268  001024  1057               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
  3269  001026  B4D8               	btfsc	status,2,c
  3270  001028  EF18  F008         	goto	i2u21_41
  3271  00102C  EF1A  F008         	goto	i2u21_40
  3272  001030                     i2u21_41:
  3273  001030  EF27  F008         	goto	i2l34
  3274  001034                     i2u21_40:
  3275  001034                     
  3276                           ;mcc_generated_files/ext_int.c: 72:     {;mcc_generated_files/ext_int.c: 73:         INT
      +                          1_InterruptHandler();
  3277  001034  D802               	call	i2u22_48
  3278  001036  EF27  F008         	goto	i2u22_49
  3279  00103A                     i2u22_48:
  3280  00103A  0005               	push	
  3281  00103C  6EFA               	movwf	pclath,c
  3282  00103E  5056               	movf	_INT1_InterruptHandler^0,w,c
  3283  001040  6EFD               	movwf	tosl,c
  3284  001042  5057               	movf	(_INT1_InterruptHandler+1)^0,w,c
  3285  001044  6EFE               	movwf	tosh,c
  3286  001046  50F8               	movf	tblptru,w,c
  3287  001048  6EFF               	movwf	tosu,c
  3288  00104A  50FA               	movf	pclath,w,c
  3289  00104C  0012               	return		;indir
  3290  00104E                     i2u22_49:
  3291  00104E                     i2l34:
  3292  00104E  0012               	return		;funcret
  3293  001050                     __end_of_INT1_CallBack:
  3294                           	callstack 0
  3295                           
  3296 ;; *************** function _INT1_DefaultInterruptHandler *****************
  3297 ;; Defined at:
  3298 ;;		line 81 in file "mcc_generated_files/ext_int.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;		None
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;		None
  3303 ;; Return value:  Size  Location     Type
  3304 ;;                  1    wreg      void 
  3305 ;; Registers used:
  3306 ;;		None
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3312 ;;      Params:         0       0       0       0       0       0       0       0       0
  3313 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3314 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3315 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3316 ;;Total ram usage:        0 bytes
  3317 ;; Hardware stack levels used: 1
  3318 ;; This function calls:
  3319 ;;		Nothing
  3320 ;; This function is called by:
  3321 ;;		_EXT_INT_Initialize
  3322 ;;		_INT1_CallBack
  3323 ;; This function uses a non-reentrant model
  3324 ;;
  3325                           
  3326                           	psect	text31
  3327  0011EC                     __ptext31:
  3328                           	callstack 0
  3329  0011EC                     _INT1_DefaultInterruptHandler:
  3330                           	callstack 21
  3331  0011EC  0012               	return		;funcret
  3332  0011EE                     __end_of_INT1_DefaultInterruptHandler:
  3333                           	callstack 0
  3334                           
  3335 ;; *************** function _INT0_ISR *****************
  3336 ;; Defined at:
  3337 ;;		line 33 in file "mcc_generated_files/ext_int.c"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;		None
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;		None
  3342 ;; Return value:  Size  Location     Type
  3343 ;;                  1    wreg      void 
  3344 ;; Registers used:
  3345 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3346 ;; Tracked objects:
  3347 ;;		On entry : 0/0
  3348 ;;		On exit  : 0/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3351 ;;      Params:         0       0       0       0       0       0       0       0       0
  3352 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3353 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3354 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3355 ;;Total ram usage:        0 bytes
  3356 ;; Hardware stack levels used: 1
  3357 ;; Hardware stack levels required when called: 2
  3358 ;; This function calls:
  3359 ;;		_INT0_CallBack
  3360 ;; This function is called by:
  3361 ;;		_INTERRUPT_InterruptManager
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           	psect	text32
  3366  0011C8                     __ptext32:
  3367                           	callstack 0
  3368  0011C8                     _INT0_ISR:
  3369                           	callstack 21
  3370  0011C8                     
  3371                           ;mcc_generated_files/ext_int.c: 35:     (PIR0bits.INT0IF = 0);
  3372  0011C8  010E               	movlb	14	; () banked
  3373  0011CA  91CA               	bcf	202,0,b	;volatile
  3374  0011CC                     
  3375                           ; BSR set to: 14
  3376                           ;mcc_generated_files/ext_int.c: 38:     INT0_CallBack();
  3377  0011CC  EC28  F008         	call	_INT0_CallBack	;wreg free
  3378  0011D0  0012               	return		;funcret
  3379  0011D2                     __end_of_INT0_ISR:
  3380                           	callstack 0
  3381                           
  3382 ;; *************** function _INT0_CallBack *****************
  3383 ;; Defined at:
  3384 ;;		line 42 in file "mcc_generated_files/ext_int.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;		None
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;		None
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  1    wreg      void 
  3391 ;; Registers used:
  3392 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3398 ;;      Params:         0       0       0       0       0       0       0       0       0
  3399 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3400 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3401 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3402 ;;Total ram usage:        0 bytes
  3403 ;; Hardware stack levels used: 1
  3404 ;; Hardware stack levels required when called: 1
  3405 ;; This function calls:
  3406 ;;		Absolute function
  3407 ;;		_INT0_DefaultInterruptHandler
  3408 ;; This function is called by:
  3409 ;;		_INT0_ISR
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           
  3413                           	psect	text33
  3414  001050                     __ptext33:
  3415                           	callstack 0
  3416  001050                     _INT0_CallBack:
  3417                           	callstack 21
  3418  001050                     
  3419                           ;mcc_generated_files/ext_int.c: 45:     if(INT0_InterruptHandler)
  3420  001050  5058               	movf	_INT0_InterruptHandler^0,w,c
  3421  001052  1059               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
  3422  001054  B4D8               	btfsc	status,2,c
  3423  001056  EF2F  F008         	goto	i2u19_41
  3424  00105A  EF31  F008         	goto	i2u19_40
  3425  00105E                     i2u19_41:
  3426  00105E  EF3E  F008         	goto	i2l21
  3427  001062                     i2u19_40:
  3428  001062                     
  3429                           ;mcc_generated_files/ext_int.c: 46:     {;mcc_generated_files/ext_int.c: 47:         INT
      +                          0_InterruptHandler();
  3430  001062  D802               	call	i2u20_48
  3431  001064  EF3E  F008         	goto	i2u20_49
  3432  001068                     i2u20_48:
  3433  001068  0005               	push	
  3434  00106A  6EFA               	movwf	pclath,c
  3435  00106C  5058               	movf	_INT0_InterruptHandler^0,w,c
  3436  00106E  6EFD               	movwf	tosl,c
  3437  001070  5059               	movf	(_INT0_InterruptHandler+1)^0,w,c
  3438  001072  6EFE               	movwf	tosh,c
  3439  001074  50F8               	movf	tblptru,w,c
  3440  001076  6EFF               	movwf	tosu,c
  3441  001078  50FA               	movf	pclath,w,c
  3442  00107A  0012               	return		;indir
  3443  00107C                     i2u20_49:
  3444  00107C                     i2l21:
  3445  00107C  0012               	return		;funcret
  3446  00107E                     __end_of_INT0_CallBack:
  3447                           	callstack 0
  3448                           
  3449 ;; *************** function _INT0_DefaultInterruptHandler *****************
  3450 ;; Defined at:
  3451 ;;		line 55 in file "mcc_generated_files/ext_int.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;		None
  3454 ;; Auto vars:     Size  Location     Type
  3455 ;;		None
  3456 ;; Return value:  Size  Location     Type
  3457 ;;                  1    wreg      void 
  3458 ;; Registers used:
  3459 ;;		None
  3460 ;; Tracked objects:
  3461 ;;		On entry : 0/0
  3462 ;;		On exit  : 0/0
  3463 ;;		Unchanged: 0/0
  3464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3465 ;;      Params:         0       0       0       0       0       0       0       0       0
  3466 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3467 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3468 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3469 ;;Total ram usage:        0 bytes
  3470 ;; Hardware stack levels used: 1
  3471 ;; This function calls:
  3472 ;;		Nothing
  3473 ;; This function is called by:
  3474 ;;		_EXT_INT_Initialize
  3475 ;;		_INT0_CallBack
  3476 ;; This function uses a non-reentrant model
  3477 ;;
  3478                           
  3479                           	psect	text34
  3480  0011EE                     __ptext34:
  3481                           	callstack 0
  3482  0011EE                     _INT0_DefaultInterruptHandler:
  3483                           	callstack 21
  3484  0011EE  0012               	return		;funcret
  3485  0011F0                     __end_of_INT0_DefaultInterruptHandler:
  3486                           	callstack 0
  3487                           
  3488 ;; *************** function _EUSART_Transmit_ISR *****************
  3489 ;; Defined at:
  3490 ;;		line 197 in file "mcc_generated_files/eusart.c"
  3491 ;; Parameters:    Size  Location     Type
  3492 ;;		None
  3493 ;; Auto vars:     Size  Location     Type
  3494 ;;		None
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  1    wreg      void 
  3497 ;; Registers used:
  3498 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3499 ;; Tracked objects:
  3500 ;;		On entry : 0/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3504 ;;      Params:         0       0       0       0       0       0       0       0       0
  3505 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3506 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3507 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3508 ;;Total ram usage:        0 bytes
  3509 ;; Hardware stack levels used: 1
  3510 ;; This function calls:
  3511 ;;		Nothing
  3512 ;; This function is called by:
  3513 ;;		_EUSART_Initialize
  3514 ;;		_INTERRUPT_InterruptManager
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518                           	psect	text35
  3519  000FAA                     __ptext35:
  3520                           	callstack 0
  3521  000FAA                     _EUSART_Transmit_ISR:
  3522                           	callstack 23
  3523  000FAA                     
  3524                           ;mcc_generated_files/eusart.c: 201:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  3525  000FAA  0E08               	movlw	8
  3526  000FAC  605A               	cpfslt	_eusartTxBufferRemaining^0,c	;volatile
  3527  000FAE  EFDB  F007         	goto	i2u92_41
  3528  000FB2  EFDD  F007         	goto	i2u92_40
  3529  000FB6                     i2u92_41:
  3530  000FB6  EFF3  F007         	goto	i2l348
  3531  000FBA                     i2u92_40:
  3532  000FBA                     
  3533                           ;mcc_generated_files/eusart.c: 202:     {;mcc_generated_files/eusart.c: 203:         TX1
      +                          REG = eusartTxBuffer[eusartTxTail++];
  3534  000FBA  0ED3               	movlw	low _eusartTxBuffer
  3535  000FBC  244E               	addwf	_eusartTxTail^0,w,c	;volatile
  3536  000FBE  6ED9               	movwf	fsr2l,c
  3537  000FC0  6ADA               	clrf	fsr2h,c
  3538  000FC2  0E00               	movlw	high _eusartTxBuffer
  3539  000FC4  22DA               	addwfc	fsr2h,f,c
  3540  000FC6  50DF               	movf	indf2,w,c
  3541  000FC8  6E9A               	movwf	154,c	;volatile
  3542  000FCA  2A4E               	incf	_eusartTxTail^0,f,c	;volatile
  3543  000FCC                     
  3544                           ;mcc_generated_files/eusart.c: 204:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  3545  000FCC  0E07               	movlw	7
  3546  000FCE  644E               	cpfsgt	_eusartTxTail^0,c	;volatile
  3547  000FD0  EFEC  F007         	goto	i2u93_41
  3548  000FD4  EFEE  F007         	goto	i2u93_40
  3549  000FD8                     i2u93_41:
  3550  000FD8  EFF0  F007         	goto	i2l2233
  3551  000FDC                     i2u93_40:
  3552  000FDC                     
  3553                           ;mcc_generated_files/eusart.c: 205:         {;mcc_generated_files/eusart.c: 206:        
      +                               eusartTxTail = 0;
  3554  000FDC  0E00               	movlw	0
  3555  000FDE  6E4E               	movwf	_eusartTxTail^0,c	;volatile
  3556  000FE0                     i2l2233:
  3557                           
  3558                           ;mcc_generated_files/eusart.c: 208:         eusartTxBufferRemaining++;
  3559  000FE0  2A5A               	incf	_eusartTxBufferRemaining^0,f,c	;volatile
  3560                           
  3561                           ;mcc_generated_files/eusart.c: 209:     }
  3562  000FE2  EFF5  F007         	goto	i2l351
  3563  000FE6                     i2l348:
  3564                           
  3565                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         PIE
      +                          3bits.TXIE = 0;
  3566  000FE6  010E               	movlb	14	; () banked
  3567  000FE8  99C5               	bcf	197,4,b	;volatile
  3568  000FEA                     i2l351:
  3569  000FEA  0012               	return		;funcret
  3570  000FEC                     __end_of_EUSART_Transmit_ISR:
  3571                           	callstack 0
  3572                           
  3573 ;; *************** function _EUSART_Receive_ISR *****************
  3574 ;; Defined at:
  3575 ;;		line 216 in file "mcc_generated_files/eusart.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;		None
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;		None
  3580 ;; Return value:  Size  Location     Type
  3581 ;;                  1    wreg      void 
  3582 ;; Registers used:
  3583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3589 ;;      Params:         0       0       0       0       0       0       0       0       0
  3590 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3591 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3592 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3593 ;;Total ram usage:        0 bytes
  3594 ;; Hardware stack levels used: 1
  3595 ;; Hardware stack levels required when called: 2
  3596 ;; This function calls:
  3597 ;;		Absolute function
  3598 ;;		_EUSART_DefaultErrorHandler
  3599 ;;		_EUSART_DefaultFramingErrorHandler
  3600 ;;		_EUSART_DefaultOverrunErrorHandler
  3601 ;;		_EUSART_RxDataHandler
  3602 ;; This function is called by:
  3603 ;;		_EUSART_Initialize
  3604 ;;		_INTERRUPT_InterruptManager
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608                           	psect	text36
  3609  000AF0                     __ptext36:
  3610                           	callstack 0
  3611  000AF0                     _EUSART_Receive_ISR:
  3612                           	callstack 21
  3613  000AF0                     
  3614                           ;mcc_generated_files/eusart.c: 219:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  3615  000AF0  0E3A               	movlw	low _eusartRxStatusBuffer
  3616  000AF2  244D               	addwf	_eusartRxHead^0,w,c	;volatile
  3617  000AF4  6ED9               	movwf	fsr2l,c
  3618  000AF6  6ADA               	clrf	fsr2h,c
  3619  000AF8  0E00               	movlw	high _eusartRxStatusBuffer
  3620  000AFA  22DA               	addwfc	fsr2h,f,c
  3621  000AFC  0E00               	movlw	0
  3622  000AFE  6EDF               	movwf	indf2,c
  3623  000B00                     
  3624                           ;mcc_generated_files/eusart.c: 221:     if(RC1STAbits.FERR){
  3625  000B00  A49D               	btfss	157,2,c	;volatile
  3626  000B02  EF85  F005         	goto	i2u94_41
  3627  000B06  EF87  F005         	goto	i2u94_40
  3628  000B0A                     i2u94_41:
  3629  000B0A  EF9B  F005         	goto	i2l2243
  3630  000B0E                     i2u94_40:
  3631  000B0E                     
  3632                           ;mcc_generated_files/eusart.c: 222:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  3633  000B0E  0E3A               	movlw	low _eusartRxStatusBuffer
  3634  000B10  244D               	addwf	_eusartRxHead^0,w,c	;volatile
  3635  000B12  6ED9               	movwf	fsr2l,c
  3636  000B14  6ADA               	clrf	fsr2h,c
  3637  000B16  0E00               	movlw	high _eusartRxStatusBuffer
  3638  000B18  22DA               	addwfc	fsr2h,f,c
  3639  000B1A  82DF               	bsf	indf2,1,c
  3640  000B1C                     
  3641                           ;mcc_generated_files/eusart.c: 223:         EUSART_FramingErrorHandler();
  3642  000B1C  D802               	call	i2u95_48
  3643  000B1E  EF9B  F005         	goto	i2u95_49
  3644  000B22                     i2u95_48:
  3645  000B22  0005               	push	
  3646  000B24  6EFA               	movwf	pclath,c
  3647  000B26  5050               	movf	_EUSART_FramingErrorHandler^0,w,c
  3648  000B28  6EFD               	movwf	tosl,c
  3649  000B2A  5051               	movf	(_EUSART_FramingErrorHandler+1)^0,w,c
  3650  000B2C  6EFE               	movwf	tosh,c
  3651  000B2E  50F8               	movf	tblptru,w,c
  3652  000B30  6EFF               	movwf	tosu,c
  3653  000B32  50FA               	movf	pclath,w,c
  3654  000B34  0012               	return		;indir
  3655  000B36                     i2u95_49:
  3656  000B36                     i2l2243:
  3657                           
  3658                           ;mcc_generated_files/eusart.c: 226:     if(RC1STAbits.OERR){
  3659  000B36  A29D               	btfss	157,1,c	;volatile
  3660  000B38  EFA0  F005         	goto	i2u96_41
  3661  000B3C  EFA2  F005         	goto	i2u96_40
  3662  000B40                     i2u96_41:
  3663  000B40  EFB7  F005         	goto	i2l2249
  3664  000B44                     i2u96_40:
  3665  000B44                     
  3666                           ;mcc_generated_files/eusart.c: 227:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  3667  000B44  0E3A               	movlw	low _eusartRxStatusBuffer
  3668  000B46  244D               	addwf	_eusartRxHead^0,w,c	;volatile
  3669  000B48  6ED9               	movwf	fsr2l,c
  3670  000B4A  6ADA               	clrf	fsr2h,c
  3671  000B4C  0E00               	movlw	high _eusartRxStatusBuffer
  3672  000B4E  22DA               	addwfc	fsr2h,f,c
  3673  000B50  84DF               	bsf	indf2,2,c
  3674  000B52                     
  3675                           ;mcc_generated_files/eusart.c: 228:         EUSART_OverrunErrorHandler();
  3676  000B52  D802               	call	i2u97_48
  3677  000B54  EFB7  F005         	goto	i2u97_49
  3678  000B58                     i2u97_48:
  3679  000B58  0005               	push	
  3680  000B5A  0100               	movlb	0	; () banked
  3681  000B5C  6EFA               	movwf	pclath,c
  3682  000B5E  51E4               	movf	_EUSART_OverrunErrorHandler& (0+255),w,b
  3683  000B60  6EFD               	movwf	tosl,c
  3684  000B62  51E5               	movf	(_EUSART_OverrunErrorHandler+1)& (0+255),w,b
  3685  000B64  6EFE               	movwf	tosh,c
  3686  000B66  50F8               	movf	tblptru,w,c
  3687  000B68  6EFF               	movwf	tosu,c
  3688  000B6A  50FA               	movf	pclath,w,c
  3689  000B6C  0012               	return		;indir
  3690  000B6E                     i2u97_49:
  3691  000B6E                     i2l2249:
  3692                           
  3693                           ;mcc_generated_files/eusart.c: 231:     if(eusartRxStatusBuffer[eusartRxHead].status){
  3694  000B6E  0E3A               	movlw	low _eusartRxStatusBuffer
  3695  000B70  244D               	addwf	_eusartRxHead^0,w,c	;volatile
  3696  000B72  6ED9               	movwf	fsr2l,c
  3697  000B74  6ADA               	clrf	fsr2h,c
  3698  000B76  0E00               	movlw	high _eusartRxStatusBuffer
  3699  000B78  22DA               	addwfc	fsr2h,f,c
  3700  000B7A  50DF               	movf	indf2,w,c
  3701  000B7C  B4D8               	btfsc	status,2,c
  3702  000B7E  EFC3  F005         	goto	i2u98_41
  3703  000B82  EFC5  F005         	goto	i2u98_40
  3704  000B86                     i2u98_41:
  3705  000B86  EFD5  F005         	goto	i2l2253
  3706  000B8A                     i2u98_40:
  3707  000B8A                     
  3708                           ;mcc_generated_files/eusart.c: 232:         EUSART_ErrorHandler();
  3709  000B8A  D802               	call	i2u99_48
  3710  000B8C  EFD3  F005         	goto	i2u99_49
  3711  000B90                     i2u99_48:
  3712  000B90  0005               	push	
  3713  000B92  0100               	movlb	0	; () banked
  3714  000B94  6EFA               	movwf	pclath,c
  3715  000B96  51E2               	movf	_EUSART_ErrorHandler& (0+255),w,b
  3716  000B98  6EFD               	movwf	tosl,c
  3717  000B9A  51E3               	movf	(_EUSART_ErrorHandler+1)& (0+255),w,b
  3718  000B9C  6EFE               	movwf	tosh,c
  3719  000B9E  50F8               	movf	tblptru,w,c
  3720  000BA0  6EFF               	movwf	tosu,c
  3721  000BA2  50FA               	movf	pclath,w,c
  3722  000BA4  0012               	return		;indir
  3723  000BA6                     i2u99_49:
  3724                           
  3725                           ;mcc_generated_files/eusart.c: 233:     } else {
  3726  000BA6  EFD7  F005         	goto	i2l358
  3727  000BAA                     i2l2253:
  3728                           
  3729                           ;mcc_generated_files/eusart.c: 234:         EUSART_RxDataHandler();
  3730  000BAA  EC55  F008         	call	_EUSART_RxDataHandler	;wreg free
  3731  000BAE                     i2l358:
  3732  000BAE  0012               	return		;funcret
  3733  000BB0                     __end_of_EUSART_Receive_ISR:
  3734                           	callstack 0
  3735                           
  3736 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  3737 ;; Defined at:
  3738 ;;		line 252 in file "mcc_generated_files/eusart.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;		None
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;		None
  3743 ;; Return value:  Size  Location     Type
  3744 ;;                  1    wreg      void 
  3745 ;; Registers used:
  3746 ;;		None
  3747 ;; Tracked objects:
  3748 ;;		On entry : 0/0
  3749 ;;		On exit  : 0/0
  3750 ;;		Unchanged: 0/0
  3751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3752 ;;      Params:         0       0       0       0       0       0       0       0       0
  3753 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3754 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3755 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3756 ;;Total ram usage:        0 bytes
  3757 ;; Hardware stack levels used: 1
  3758 ;; This function calls:
  3759 ;;		Nothing
  3760 ;; This function is called by:
  3761 ;;		_EUSART_Initialize
  3762 ;;		_EUSART_Receive_ISR
  3763 ;; This function uses a non-reentrant model
  3764 ;;
  3765                           
  3766                           	psect	text37
  3767  0011DA                     __ptext37:
  3768                           	callstack 0
  3769  0011DA                     _EUSART_DefaultOverrunErrorHandler:
  3770                           	callstack 22
  3771  0011DA                     
  3772                           ;mcc_generated_files/eusart.c: 255:     RC1STAbits.CREN = 0;
  3773  0011DA  989D               	bcf	157,4,c	;volatile
  3774                           
  3775                           ;mcc_generated_files/eusart.c: 256:     RC1STAbits.CREN = 1;
  3776  0011DC  889D               	bsf	157,4,c	;volatile
  3777  0011DE  0012               	return		;funcret
  3778  0011E0                     __end_of_EUSART_DefaultOverrunErrorHandler:
  3779                           	callstack 0
  3780                           
  3781 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  3782 ;; Defined at:
  3783 ;;		line 250 in file "mcc_generated_files/eusart.c"
  3784 ;; Parameters:    Size  Location     Type
  3785 ;;		None
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;		None
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  1    wreg      void 
  3790 ;; Registers used:
  3791 ;;		None
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3797 ;;      Params:         0       0       0       0       0       0       0       0       0
  3798 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3799 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3800 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3801 ;;Total ram usage:        0 bytes
  3802 ;; Hardware stack levels used: 1
  3803 ;; This function calls:
  3804 ;;		Nothing
  3805 ;; This function is called by:
  3806 ;;		_EUSART_Initialize
  3807 ;;		_EUSART_Receive_ISR
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           	psect	text38
  3812  0011F0                     __ptext38:
  3813                           	callstack 0
  3814  0011F0                     _EUSART_DefaultFramingErrorHandler:
  3815                           	callstack 22
  3816  0011F0  0012               	return		;funcret
  3817  0011F2                     __end_of_EUSART_DefaultFramingErrorHandler:
  3818                           	callstack 0
  3819                           
  3820 ;; *************** function _EUSART_DefaultErrorHandler *****************
  3821 ;; Defined at:
  3822 ;;		line 260 in file "mcc_generated_files/eusart.c"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;		None
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;		None
  3827 ;; Return value:  Size  Location     Type
  3828 ;;                  1    wreg      void 
  3829 ;; Registers used:
  3830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3836 ;;      Params:         0       0       0       0       0       0       0       0       0
  3837 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3838 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3839 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3840 ;;Total ram usage:        0 bytes
  3841 ;; Hardware stack levels used: 1
  3842 ;; Hardware stack levels required when called: 1
  3843 ;; This function calls:
  3844 ;;		_EUSART_RxDataHandler
  3845 ;; This function is called by:
  3846 ;;		_EUSART_Initialize
  3847 ;;		_EUSART_Receive_ISR
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851                           	psect	text39
  3852  0011E0                     __ptext39:
  3853                           	callstack 0
  3854  0011E0                     _EUSART_DefaultErrorHandler:
  3855                           	callstack 21
  3856  0011E0                     
  3857                           ;mcc_generated_files/eusart.c: 261:     EUSART_RxDataHandler();
  3858  0011E0  EC55  F008         	call	_EUSART_RxDataHandler	;wreg free
  3859  0011E4  0012               	return		;funcret
  3860  0011E6                     __end_of_EUSART_DefaultErrorHandler:
  3861                           	callstack 0
  3862                           
  3863 ;; *************** function _EUSART_RxDataHandler *****************
  3864 ;; Defined at:
  3865 ;;		line 240 in file "mcc_generated_files/eusart.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;		None
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;		None
  3870 ;; Return value:  Size  Location     Type
  3871 ;;                  1    wreg      void 
  3872 ;; Registers used:
  3873 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3874 ;; Tracked objects:
  3875 ;;		On entry : 0/0
  3876 ;;		On exit  : 0/0
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3879 ;;      Params:         0       0       0       0       0       0       0       0       0
  3880 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3881 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3882 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3883 ;;Total ram usage:        0 bytes
  3884 ;; Hardware stack levels used: 1
  3885 ;; This function calls:
  3886 ;;		Nothing
  3887 ;; This function is called by:
  3888 ;;		_EUSART_Receive_ISR
  3889 ;;		_EUSART_DefaultErrorHandler
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893                           	psect	text40
  3894  0010AA                     __ptext40:
  3895                           	callstack 0
  3896  0010AA                     _EUSART_RxDataHandler:
  3897                           	callstack 22
  3898  0010AA                     
  3899                           ;mcc_generated_files/eusart.c: 242:     eusartRxBuffer[eusartRxHead++] = RC1REG;
  3900  0010AA  0ECB               	movlw	low _eusartRxBuffer
  3901  0010AC  244D               	addwf	_eusartRxHead^0,w,c	;volatile
  3902  0010AE  6ED9               	movwf	fsr2l,c
  3903  0010B0  6ADA               	clrf	fsr2h,c
  3904  0010B2  0E00               	movlw	high _eusartRxBuffer
  3905  0010B4  22DA               	addwfc	fsr2h,f,c
  3906  0010B6  CF99 FFDF          	movff	3993,indf2	;volatile
  3907  0010BA  2A4D               	incf	_eusartRxHead^0,f,c	;volatile
  3908  0010BC                     
  3909                           ;mcc_generated_files/eusart.c: 243:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  3910  0010BC  0E07               	movlw	7
  3911  0010BE  644D               	cpfsgt	_eusartRxHead^0,c	;volatile
  3912  0010C0  EF64  F008         	goto	i2u79_41
  3913  0010C4  EF66  F008         	goto	i2u79_40
  3914  0010C8                     i2u79_41:
  3915  0010C8  EF68  F008         	goto	i2l2043
  3916  0010CC                     i2u79_40:
  3917  0010CC                     
  3918                           ;mcc_generated_files/eusart.c: 244:     {;mcc_generated_files/eusart.c: 245:         eus
      +                          artRxHead = 0;
  3919  0010CC  0E00               	movlw	0
  3920  0010CE  6E4D               	movwf	_eusartRxHead^0,c	;volatile
  3921  0010D0                     i2l2043:
  3922                           
  3923                           ;mcc_generated_files/eusart.c: 247:     eusartRxCount++;
  3924  0010D0  2A4B               	incf	_eusartRxCount^0,f,c	;volatile
  3925  0010D2  0012               	return		;funcret
  3926  0010D4                     __end_of_EUSART_RxDataHandler:
  3927                           	callstack 0
  3928                           
  3929                           	psect	text41
  3930  000000                     __ptext41:
  3931                           	callstack 0
  3932  000000                     
  3933                           	psect	rparam
  3934  0000                     
  3935                           	psect	temp
  3936  00005B                     btemp:
  3937                           	callstack 0
  3938  00005B                     	ds	1
  3939  0000                     int$flags	set	btemp
  3940  0000                     wtemp8	set	btemp+1
  3941  0000                     ttemp5	set	btemp+1
  3942  0000                     ttemp6	set	btemp+4
  3943  0000                     ttemp7	set	btemp+8
  3944                           
  3945                           	psect	idloc
  3946                           
  3947                           ;Config register IDLOC0 @ 0x200000
  3948                           ;	unspecified, using default values
  3949  200000                     	org	2097152
  3950  200000  0FFF               	dw	4095
  3951                           
  3952                           ;Config register IDLOC1 @ 0x200002
  3953                           ;	unspecified, using default values
  3954  200002                     	org	2097154
  3955  200002  0FFF               	dw	4095
  3956                           
  3957                           ;Config register IDLOC2 @ 0x200004
  3958                           ;	unspecified, using default values
  3959  200004                     	org	2097156
  3960  200004  0FFF               	dw	4095
  3961                           
  3962                           ;Config register IDLOC3 @ 0x200006
  3963                           ;	unspecified, using default values
  3964  200006                     	org	2097158
  3965  200006  0FFF               	dw	4095
  3966                           
  3967                           ;Config register IDLOC4 @ 0x200008
  3968                           ;	unspecified, using default values
  3969  200008                     	org	2097160
  3970  200008  0FFF               	dw	4095
  3971                           
  3972                           ;Config register IDLOC5 @ 0x20000A
  3973                           ;	unspecified, using default values
  3974  20000A                     	org	2097162
  3975  20000A  0FFF               	dw	4095
  3976                           
  3977                           ;Config register IDLOC6 @ 0x20000C
  3978                           ;	unspecified, using default values
  3979  20000C                     	org	2097164
  3980  20000C  0FFF               	dw	4095
  3981                           
  3982                           ;Config register IDLOC7 @ 0x20000E
  3983                           ;	unspecified, using default values
  3984  20000E                     	org	2097166
  3985  20000E  0FFF               	dw	4095
  3986                           
  3987                           	psect	config
  3988                           
  3989                           ;Config register CONFIG1L @ 0x300000
  3990                           ;	External Oscillator mode Selection bits
  3991                           ;	FEXTOSC = OFF, Oscillator not enabled
  3992                           ;	Power-up default value for COSC bits
  3993                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  3994  300000                     	org	3145728
  3995  300000  8C                 	db	140
  3996                           
  3997                           ;Config register CONFIG1H @ 0x300001
  3998                           ;	Clock Out Enable bit
  3999                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  4000                           ;	Clock Switch Enable bit
  4001                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  4002                           ;	Fail-Safe Clock Monitor Enable bit
  4003                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  4004  300001                     	org	3145729
  4005  300001  FF                 	db	255
  4006                           
  4007                           ;Config register CONFIG2L @ 0x300002
  4008                           ;	Master Clear Enable bit
  4009                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  4010                           ;	Power-up Timer Enable bit
  4011                           ;	PWRTE = OFF, Power up timer disabled
  4012                           ;	Low-power BOR enable bit
  4013                           ;	LPBOREN = OFF, ULPBOR disabled
  4014                           ;	Brown-out Reset Enable bits
  4015                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  4016  300002                     	org	3145730
  4017  300002  FF                 	db	255
  4018                           
  4019                           ;Config register CONFIG2H @ 0x300003
  4020                           ;	Brown Out Reset Voltage selection bits
  4021                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  4022                           ;	ZCD Disable bit
  4023                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  4024                           ;	PPSLOCK bit One-Way Set Enable bit
  4025                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  4026                           ;	Stack Full/Underflow Reset Enable bit
  4027                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4028                           ;	Debugger Enable bit
  4029                           ;	DEBUG = OFF, Background debugger disabled
  4030                           ;	Extended Instruction Set Enable bit
  4031                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  4032  300003                     	org	3145731
  4033  300003  FF                 	db	255
  4034                           
  4035                           ;Config register CONFIG3L @ 0x300004
  4036                           ;	WDT Period Select bits
  4037                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4038                           ;	WDT operating mode
  4039                           ;	WDTE = OFF, WDT Disabled
  4040  300004                     	org	3145732
  4041  300004  9F                 	db	159
  4042                           
  4043                           ;Config register CONFIG3H @ 0x300005
  4044                           ;	WDT Window Select bits
  4045                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  4046                           ;	WDT input clock selector
  4047                           ;	WDTCCS = SC, Software Control
  4048  300005                     	org	3145733
  4049  300005  FF                 	db	255
  4050                           
  4051                           ;Config register CONFIG4L @ 0x300006
  4052                           ;	Write Protection Block 0
  4053                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4054                           ;	Write Protection Block 1
  4055                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4056                           ;	Write Protection Block 2
  4057                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4058                           ;	Write Protection Block 3
  4059                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4060  300006                     	org	3145734
  4061  300006  FF                 	db	255
  4062                           
  4063                           ;Config register CONFIG4H @ 0x300007
  4064                           ;	Configuration Register Write Protection bit
  4065                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  4066                           ;	Boot Block Write Protection bit
  4067                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4068                           ;	Data EEPROM Write Protection bit
  4069                           ;	WRTD = OFF, Data EEPROM not write-protected
  4070                           ;	Scanner Enable bit
  4071                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  4072                           ;	Low Voltage Programming Enable bit
  4073                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  4074  300007                     	org	3145735
  4075  300007  DF                 	db	223
  4076                           
  4077                           ;Config register CONFIG5L @ 0x300008
  4078                           ;	UserNVM Program Memory Code Protection bit
  4079                           ;	CP = OFF, UserNVM code protection disabled
  4080                           ;	DataNVM Memory Code Protection bit
  4081                           ;	CPD = OFF, DataNVM code protection disabled
  4082  300008                     	org	3145736
  4083  300008  FF                 	db	255
  4084                           
  4085                           ;Config register CONFIG5H @ 0x300009
  4086                           ;	unspecified, using default values
  4087  300009                     	org	3145737
  4088  300009  FF                 	db	255
  4089                           
  4090                           ;Config register CONFIG6L @ 0x30000A
  4091                           ;	Table Read Protection Block 0
  4092                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4093                           ;	Table Read Protection Block 1
  4094                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4095                           ;	Table Read Protection Block 2
  4096                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4097                           ;	Table Read Protection Block 3
  4098                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4099  30000A                     	org	3145738
  4100  30000A  FF                 	db	255
  4101                           
  4102                           ;Config register CONFIG6H @ 0x30000B
  4103                           ;	Boot Block Table Read Protection bit
  4104                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4105  30000B                     	org	3145739
  4106  30000B  FF                 	db	255
  4107                           tosu	equ	0xFFF
  4108                           tosh	equ	0xFFE
  4109                           tosl	equ	0xFFD
  4110                           stkptr	equ	0xFFC
  4111                           pclatu	equ	0xFFB
  4112                           pclath	equ	0xFFA
  4113                           pcl	equ	0xFF9
  4114                           tblptru	equ	0xFF8
  4115                           tblptrh	equ	0xFF7
  4116                           tblptrl	equ	0xFF6
  4117                           tablat	equ	0xFF5
  4118                           prodh	equ	0xFF4
  4119                           prodl	equ	0xFF3
  4120                           indf0	equ	0xFEF
  4121                           postinc0	equ	0xFEE
  4122                           postdec0	equ	0xFED
  4123                           preinc0	equ	0xFEC
  4124                           plusw0	equ	0xFEB
  4125                           fsr0h	equ	0xFEA
  4126                           fsr0l	equ	0xFE9
  4127                           wreg	equ	0xFE8
  4128                           indf1	equ	0xFE7
  4129                           postinc1	equ	0xFE6
  4130                           postdec1	equ	0xFE5
  4131                           preinc1	equ	0xFE4
  4132                           plusw1	equ	0xFE3
  4133                           fsr1h	equ	0xFE2
  4134                           fsr1l	equ	0xFE1
  4135                           bsr	equ	0xFE0
  4136                           indf2	equ	0xFDF
  4137                           postinc2	equ	0xFDE
  4138                           postdec2	equ	0xFDD
  4139                           preinc2	equ	0xFDC
  4140                           plusw2	equ	0xFDB
  4141                           fsr2h	equ	0xFDA
  4142                           fsr2l	equ	0xFD9
  4143                           status	equ	0xFD8

Data Sizes:
    Strings     8
    Constant    0
    Data        7
    BSS         170
    Persistent  15
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     57      90
    BANK0           160    107     134
    BANK1           256      0     132
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_printf(COMRAM[2]), main@returnedData(BANK0[100]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_printf(COMRAM[2]), main@returnedData(BANK0[100]), 

    S1544_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), main@returnedData(BANK0[100]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), main@returnedData(BANK0[100]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_printf(COMRAM[2]), main@returnedData(BANK0[100]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    sendUartStr@TxData	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    main@TestTxData	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    _main->_printf
    _sendUartStr->_EUSART_Write
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_stoa
    _stoa->_fputc
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               105   105      0    6345
                                              2 BANK0    105   105      0
                        _EUSART_Read
                 _EUSART_is_tx_ready
                  _SYSTEM_Initialize
                             _printf
                        _sendUartStr
 ---------------------------------------------------------------------------------
 (1) _sendUartStr                                          2     0      2     165
                                              5 COMRAM     2     0      2
                       _EUSART_Write
                  _EUSART_is_tx_done
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_tx_done                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      44
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    5291
                                             53 COMRAM     4     0      4
                                              0 BANK0      2     2      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5120
                                             45 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           41    35      6    4650
                                             35 COMRAM    10     4      6
                              _fputc
                               _stoa
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2539
                                             13 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     290
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1404
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     686
                    _ADCC_Initialize
                  _EUSART_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     196
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_tx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          1     1      0      24
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _INT0_ISR
                           _INT1_ISR
 ---------------------------------------------------------------------------------
 (8) _INT1_ISR                                             0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (9) _INT1_CallBack                                        0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT0_ISR                                             0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (9) _INT0_CallBack                                        0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (9) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (9) _EUSART_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _EUSART_is_tx_ready
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
         _stoa
           _fputc
           _strlen
   _sendUartStr
     _EUSART_Write
     _EUSART_is_tx_done

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _INT0_ISR *
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
   _INT1_ISR *
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      84       7       51.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6B      86       5       83.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     39      5A       1       95.7%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     164      18        0.0%
DATA                 0      0     164       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jan 07 00:38:48 2022

                ?_EUSART_SetRxInterruptHandler 0005                                             l24 118A  
                                           l43 10A8                                             l37 1180  
                                          l116 0F5E                                            l320 1162  
                                          l242 1134                                            l236 1118  
                                          l317 0D50                                            l341 0E22  
                                          l342 0E3A                                            l326 1176  
                                          l239 114C                                            l336 0F0E  
                                          l345 0E66                                            l443 0DB0  
                                          l380 11BC                                            l374 11B2  
                                          l383 1194                                            l377 11A8  
                                          l386 119E                                            l467 11E8  
                                          l576 0FA8                                            l569 0CD4  
                                          u900 0ECE                                            u901 0ECA  
                                          u910 0F00                                            u830 1174  
                                          u911 0EFC                                            u831 116E  
                                          u840 0E22                                            u841 0E1E  
                                          u850 0E32                                            u851 0E2E  
                                          u860 0E5E                                            u836 1176  
                                          u861 0E5A                                            u880 1160  
                                          u881 115A                                            u890 1162  
                   ??_INT0_SetInterruptHandler 0007                         ??_EUSART_RxDataHandler 0001  
               ?_EUSART_SetFramingErrorHandler 0005                        __size_of_PMD_Initialize 001C  
                                          tosl 000FFD                                            wreg 000FE8  
                                _INT0_CallBack 1050                                   ?_EUSART_Read 0001  
                                _INT1_CallBack 1022                                           l2021 1182  
                                         l2101 111A                                           l1310 098A  
                                         l2031 11A0                                           l2023 1178  
                                         l2111 0D8E                                           l2103 0D52  
                                         l2201 0EBE                                           l2033 11B4  
                                         l2025 1196                                           l2121 0D98  
                                         l2113 0D90                                           l2105 0D5E  
                                         l1305 093A                                           l1321 0E06  
                                         l1306 0982                                           l1322 0E0E  
                                         l2211 0F00                                           l2203 0EBE  
                                         l2027 118C                                           l2131 0CF8  
                                         l2123 1136                                           l2115 0D92  
                                         l2107 0D60                                           l1315 0AEE  
                                         l2213 0F04                                           l2205 0ECE  
                                         l2029 11AA                                           l2141 0D0C  
                                         l2133 0CFC                                           l2125 0CD8  
                                         l2117 0D94                                           l2109 0D70  
                                         l1334 0C44                                           l2215 0F08  
                                         l2207 0EEE                                           l2143 0D18  
                                         l2135 0D00                                           l2127 0CDC  
                                         l2119 0D96                                           l2311 0BB0  
                                         l1351 1020                                           l2217 0F0A  
                                         l2209 0EF0                                           l2145 0D24  
                                         l2137 0D04                                           l2129 0CE8  
                                         l1345 11EA                                           l2321 0C32  
                                         l2313 0BC2                                           l1257 10FA  
                                         l2161 0E4C                                           l2153 0E12  
                                         l2219 0F0C                                           l2147 0D4C  
                                         l2139 0D08                                           l2091 1094  
                                         l2315 0BD4                                           l2331 1014  
                                         l2411 0ADC                                           l2403 0A9E  
                                         l2163 0E4E                                           l2155 0E12  
                                         l2093 1096                                           l2085 107E  
                                         l2317 0BDE                                           l2325 0FEC  
                                         l2341 0836                                           l2405 0AAC  
                                         l2421 0DC6                                           l2165 0E5E  
                                         l2157 0E32                                           l2149 1164  
                                         l2261 0F88                                           l1294 088A  
                                         l2095 10A4                                           l2087 1084  
                                         l2191 110C                                           l2183 10FC  
                                         l2319 0BFC                                           l2327 0FF8  
                                         l2343 083E                                           l2335 080A  
                                         l2423 0DEA                                           l2167 0E62  
                                         l2159 0E3C                                           l2263 0F8C  
                                         l2255 0F60                                           l2431 0C46  
                                         l1296 0892                                           l2097 0F10  
                                         l2089 1090                                           l2193 1110  
                                         l2185 1100                                           l2329 0FFC  
                                         l2361 08F6                                           l2353 08B4  
                                         l2345 0852                                           l2337 081C  
                                         l2409 0AB8                                           l2417 0DB2  
                                         l2425 10D4                                           l2169 0E64  
                                         l2257 0F64                                           l2441 0C80  
                                         l2433 0C4A                                           l2099 11E6  
                                         l2195 1114                                           l2187 1104  
                                         l2371 094C                                           l2363 0914  
                                         l2355 08C8                                           l2347 085A  
                                         l2339 0824                                           l2419 0DBA  
                                         l2427 10DE                                           l2259 0F78  
                                         l2443 0C8E                                           l2435 0C56  
                                         l2197 114E                                           l2189 1108  
                                         l2373 0960                                           l2365 0918  
                                         l2357 08CC                                           l2349 0868  
                                         l2381 09BE                                           l2445 0CA6  
                                         l2437 0C60                                           l2375 0964  
                                         l2367 091C                                           l2359 08EA  
                                         l2383 09CE                                           l2447 0CAA  
                                         l2439 0C74                                           l2393 0A4C  
                                         l2385 09D2                                           l2377 098C  
                                         l2449 0CC0                                           l2395 0A70  
                                         l2387 09F6                                           l2379 09B0  
                                         l2397 0A7E                                           l2389 0A2C  
                                         l2399 0A92                                           STR_1 0801  
                                         STR_2 0806                                           u1000 0F78  
                                         u1001 0F74                                           u1010 0FA8  
                                         u1011 0FA4                                           u1200 1014  
                                         u1201 1010                                           u1211 0814  
                                         u1220 0836                                           u1300 09B0  
                                         u1221 0832                                           u1301 09AC  
                                         u1230 0868                                           u1310 09F6  
                                         u1231 0864                                           u1311 09F2  
                                         u1160 0BC2                                           u1240 0886  
                                         u1320 0A70                                           u1161 0BBE  
                                         u1241 0882                                           u1321 0A6C  
                                         u1170 0BD4                                           u1250 08B0  
                                         u1330 0E06                                           u1171 0BD0  
                                         u1251 08AC                                           u1331 0E02  
                                         u1180 0BFC                                           u1260 08EA  
                                         u1181 0BF8                                           u1261 08E6  
                                         u1341 0C50                                           _LATA 000F83  
                                         u1190 0C32                                           u1270 093A  
                                         u1350 0C74                                           _LATB 000F84  
                                         u1191 0C2E                                           u1271 0936  
                                         u1351 0C70                                           _LATC 000F85  
                                         u1280 0948                                           u1360 0CC0  
                                         u1281 0944                                           u1361 0CBC  
                                         u1290 0982                                           u1291 097E  
                                         _PMD0 000EE1                                           _PMD1 000EE2  
                                         _PMD2 000EE3                                           _PMD3 000EE4  
                                         _PMD4 000EE5                                           _PMD5 000EE6  
                                         i2l21 107C                                           i2l30 11C6  
                                         i2l40 11EC                                           i2l17 11D0  
                                         i2l34 104E                                           i2l27 11EE  
                                         _WPUA 000F10                                           _WPUB 000F18  
                                         _WPUC 000F20                                           _WPUE 000F2D  
                                         _dbuf 0164                                           _main 0C46  
                                         _prec 0046                                           _nout 0042  
                                         fsr1h 000FE2                                           fsr2h 000FDA  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         fsr2l 000FD9                                           _stoa 080A  
                                         btemp 005B                                           start 00FA  
                                 ___param_bank 000000                               __end_of_INT0_ISR 11D2  
                             __end_of_INT1_ISR 11C8                                  ?_EUSART_Write 0001  
               __size_of_OSCILLATOR_Initialize 0018                  __end_of_OSCILLATOR_Initialize 114E  
                                        _ADACQ 000F5C                                          _ADCAP 000F5D  
                                        _ADACT 000F56                                          ?_main 0001  
                                        _ADCLK 000F57                                          _ADCNT 000F67  
                                        _ADPCH 000F5F                                          _ADREF 000F58  
                                        _ADPRE 000F5E                                          _ADRPT 000F66  
                                        ?_stoa 000E                                          i2l351 0FEA  
                                        i2l362 10D2                                          i2l371 11E4  
                                        i2l348 0FE6                                          i2l365 11F0  
                                        i2l358 0BAE                                          i2l368 11DE  
                                        i2l472 0040                                          i2l481 00E6  
                                        i2l474 0064                                          i2l482 00E6  
                                        i2l477 00AC                                          _OSCEN 000EDC  
                                 vfpfcnvrt@fmt 0026                                          _TRISA 000F88  
                                        _TRISB 000F89                                 ?_INT0_CallBack 0001  
                                        _TRISC 000F8A                                          _RXPPS 000EB5  
                               ?_INT1_CallBack 0001                                          _flags 0048  
               ??_INT1_DefaultInterruptHandler 0001                                          _fputc 0BB0  
                                        _width 0044                                          _putch 11EA  
                                        main@i 00C9                       _INT1_SetInterruptHandler 1178  
                                        pclath 000FFA                                          tablat 000FF5  
                                        plusw1 000FE3                                          plusw2 000FDB  
                                        nvmcon 000F81                                          stoa@i 001A  
                                        stoa@l 0022                                          stoa@p 0020  
                                        stoa@s 0010                                          stoa@w 001C  
                                        ttemp5 005C                                          ttemp6 005F  
                                        ttemp7 0063                                          status 000FD8  
                                        wtemp8 005C                                __initialization 0E68  
                                 __end_of_main 0CD8                                   __end_of_stoa 098C  
                               ??_EUSART_Write 0005                    ?_INTERRUPT_InterruptManager 0001  
               ??_EUSART_SetRxInterruptHandler 0007                                         ??_main 0062  
                                       ??_stoa 0012                                  __activetblptr 000002  
                                 ?_sendUartStr 0006                                         _ADACCH 000F71  
                                       _ADACCL 000F70           fp__EUSART_DefaultFramingErrorHandler 0000  
    __end_of_EUSART_DefaultFramingErrorHandler 11F2     __size_of_EUSART_DefaultFramingErrorHandler 0002  
          ??_EUSART_DefaultFramingErrorHandler 0001             ?_EUSART_DefaultFramingErrorHandler 0001  
            _EUSART_DefaultFramingErrorHandler 11F0                                         _ADCON0 000F60  
                                       _ADCON1 000F59                                         _ADCON2 000F5A  
                                       _ADCON3 000F5B                     _EUSART_OverrunErrorHandler 00E4  
                                       _ADERRH 000F6F                                         _ADERRL 000F6E  
                                       ?_fputc 0005                                         _ADLTHH 000F6B  
                                       _ADLTHL 000F6A                                         _ADRESH 000F64  
                                       _ADRESL 000F63                                         _ADSTAT 000F65  
                                       _ADUTHH 000F6D                                         _ADUTHL 000F6C  
                                       _ANSELA 000F11                                         ?_putch 0001  
                                       _ANSELB 000F19                                         _ANSELC 000F21  
                               main@TestTxData 00C7                                         _RC1REG 000F99  
                                       _RC1STA 000F9D                                         _ODCONA 000F0F  
                                       _ODCONB 000F17                                         _ODCONC 000F1F  
                                       _RC6PPS 000EFD                                         i2l2041 10CC  
                                       i2l2043 10D0                                         i2l2035 10AA  
                                       i2l2037 10BA                                         i2l2039 10BC  
                                       i2l2231 0FDC                                         i2l2223 0FAA  
                                       i2l2241 0B1C                                         i2l2233 0FE0  
                                       i2l2225 0FBA                                         i2l2171 11DA  
                                       i2l2251 0B8A                                         i2l2243 0B36  
                                       i2l2235 0AF0                                         i2l2227 0FCA  
                                       i2l2173 11E0                                         i2l2253 0BAA  
                                       i2l2245 0B44                                         i2l2237 0B00  
                                       i2l2229 0FCC                                         i2l2247 0B52  
                                       i2l2239 0B0E                                         i2l2271 001A  
                                       i2l2249 0B6E                                         i2l2281 0072  
                                       i2l2273 002A                                         i2l1483 1050  
                                       i2l2283 0080                                         i2l2275 0038  
                                       i2l1485 1062                                         i2l2285 008E  
                                       i2l2277 004E                                         i2l1591 11CC  
                                       i2l1487 1022                                         i2l2287 00BA  
                                       i2l2279 005C                                         i2l1489 1034  
                                       i2l1593 11BE                                         i2l2289 00C8  
                                       i2l1595 11C2                                         i2l1589 11C8  
                                       _INLVLA 000F0D                                         _INLVLB 000F15  
                                       _INLVLC 000F1D                                         _INLVLE 000F2A  
                                       _TABLAT 000FF5                     __end_of_EUSART_is_tx_ready 1164  
                                       _OSCFRQ 000EDE                                         _NVMDAT 000F80  
                                       _TX1REG 000F9A                                         _TX1STA 000F9E  
                                 vfprintf@cfmt 0034                            _EUSART_Transmit_ISR 0FAA  
                                       clear_0 0E92                                         clear_1 0E9E  
                                       clear_2 0EAA                                         isa$std 000001  
                                       _printf 10D4                                ??_INT0_CallBack 0001  
                                       _strlen 0FEC                                _ADCC_Initialize 0F10  
                                       fputc@c 0005                                 _PMD_Initialize 111A  
                              ??_INT1_CallBack 0001                                   __mediumconst 0000  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                                         stoa@cp 001E  
                                       stoa@fp 000E                                         putch@c 0001  
                             __end_of_vfprintf 0E10       INT1_SetInterruptHandler@InterruptHandler 0005  
     INT0_SetInterruptHandler@InterruptHandler 0005                           ?_EUSART_Transmit_ISR 0001  
                __size_of_INTERRUPT_Initialize 0004                           __size_of_EUSART_Read 0052  
                            _SYSTEM_Initialize 10FC                                     __accesstop 0060  
                      __end_of__initialization 0EB0                                      ?_INT0_ISR 0001  
                                    ?_INT1_ISR 0001                             ?_SYSTEM_Initialize 0001  
                                ___rparam_used 000001           __end_of_EUSART_SetTxInterruptHandler 1196  
        __size_of_EUSART_SetTxInterruptHandler 000A                   _EUSART_SetTxInterruptHandler 118C  
                               __pcstackCOMRAM 0001                                   __pidataBANK0 11D2  
                          ??_SYSTEM_Initialize 0007                                  __end_of_fputc 0C46  
                                __end_of_putch 11EC                         __end_of_PMD_Initialize 1136  
                  __size_of_EXT_INT_Initialize 002C                           _eusartRxStatusBuffer 003A  
              ??_EUSART_SetOverrunErrorHandler 0007                                        ??_fputc 0009  
                    __end_of_SYSTEM_Initialize 111A                          ??_EUSART_Transmit_ISR 0001  
                                      ??_putch 0005                                     __pbssBANK0 00CB  
                                   __pbssBANK1 0100                           __end_of_EUSART_Write 0E68  
                        _INT0_InterruptHandler 0058                                     ??_INT0_ISR 0001  
                                   ??_INT1_ISR 0001                                     __pnvCOMRAM 0050  
                  __size_of_EUSART_Receive_ISR 00C0                  ?_EUSART_SetTxInterruptHandler 0005  
             _EUSART_TxDefaultInterruptHandler 0054                        __end_of_ADCC_Initialize 0F60  
                                      _ADFLTRH 000F73                                        _ADFLTRL 000F72  
                                      _ADPREVH 000F62                                        _ADPREVL 000F61  
                                      _ADSTPTH 000F69                                        _ADSTPTL 000F68  
                 ??_EUSART_DefaultErrorHandler 0001                                        ?_printf 0036  
                              ?_PMD_Initialize 0001                                        ?_strlen 0005  
                                _eusartRxCount 004B                     ??_INT1_SetInterruptHandler 0007  
                                      _INT0PPS 000EA1                                        _INT1PPS 000EA2  
                                      _SP1BRGH 000F9C                                        _SP1BRGL 000F9B  
                                      _OSCCON1 000ED8                                        _OSCCON3 000EDA  
                           __size_of_vfpfcnvrt 0164                                        _TBLPTRH 000FF7  
                                      _TBLPTRL 000FF6                                        _TBLPTRU 000FF8  
                                      i2u20_48 1068                                        i2u21_40 1034  
                                      i2u20_49 107C                                        i2u21_41 1030  
                __size_of_EUSART_RxDataHandler 002A                                        i2u22_48 103A  
                                      i2u22_49 104E                                        i2u19_40 1062  
                                      i2u19_41 105E                                        _NVMADRL 000F7E  
                                      _OSCTUNE 000EDD                                        _NVMCON2 000F82  
                                      i2u92_40 0FBA                                        i2u92_41 0FB6  
                                      i2u93_40 0FDC                                        i2u93_41 0FD8  
                                      i2u94_40 0B0E                                        i2u94_41 0B0A  
                                      i2u79_40 10CC                                        i2u79_41 10C8  
                                      i2u96_40 0B44                                        i2u95_48 0B22  
                                      i2u96_41 0B40                                        i2u95_49 0B36  
                         __size_of_sendUartStr 004A                                        i2u98_40 0B8A  
                                      i2u97_48 0B58                                        i2u98_41 0B86  
                                      i2u97_49 0B6E                                        _SLRCONA 000F0E  
                                      _SLRCONB 000F16                                        _SLRCONC 000F1E  
                                      i2u99_48 0B90                                        i2u99_49 0BA6  
                     ??_EUSART_SetErrorHandler 0007              __size_of_INT0_SetInterruptHandler 000A  
                    ?_INT0_SetInterruptHandler 0005                                        __Hparam 0000  
          __size_of_EUSART_DefaultErrorHandler 0006                                        __Lparam 0000  
                                    ?_vfprintf 002E                                   __psmallconst 0800  
                                      __pcinit 0E68                                        __ramtop 0800  
                                      __ptext0 0C46                                        __ptext1 0F60  
                                      __ptext2 1164                                        __ptext3 0E10  
                                      __ptext4 10D4                                        __ptext5 0DB2  
                                      __ptext6 098C                                        __ptext7 080A  
                                      __ptext8 0FEC                                        __ptext9 0BB0  
                              __size_of_printf 0028                                __size_of_strlen 0036  
                        _OSCILLATOR_Initialize 1136                       ??_PIN_MANAGER_Initialize 0005  
                   __size_of_SYSTEM_Initialize 001E                           end_of_initialization 0EB0  
        __end_of_EUSART_SetOverrunErrorHandler 11AA         __size_of_EUSART_SetOverrunErrorHandler 000A  
                _EUSART_SetOverrunErrorHandler 11A0                                        fputc@fp 0007  
                                __Lmediumconst 0000                              _EUSART_Initialize 0CD8  
                           ?_EUSART_Initialize 0001                              __end_of_vfpfcnvrt 0AF0  
                                      postdec1 000FE5                                        postdec2 000FDD  
                                      postinc0 000FEE                                        postinc1 000FE6  
                                      postinc2 000FDE                             _EUSART_is_tx_ready 114E  
                             ?_ADCC_Initialize 0001                                     ??_vfprintf 0034  
                                      strlen@a 0007                                        strlen@s 0005  
                          ??_EUSART_Initialize 0007                 ??_EUSART_SetTxInterruptHandler 0007  
                        _INT1_InterruptHandler 0056                            ?_EUSART_is_tx_ready 0001  
                        __size_of_EUSART_Write 0058                __size_of_EUSART_SetErrorHandler 000A  
                    __end_of_EUSART_Initialize 0D52                           ??_EUSART_is_tx_ready 0005  
                            __size_of_INT0_ISR 000A                              __size_of_INT1_ISR 000A  
                 __end_of_INTERRUPT_Initialize 11EA           __end_of_INT0_DefaultInterruptHandler 11F0  
        __size_of_INT0_DefaultInterruptHandler 0002                   _INT0_DefaultInterruptHandler 11EE  
           __end_of_EUSART_DefaultErrorHandler 11E6                     _EUSART_DefaultErrorHandler 11E0  
                                  vfpfcnvrt@ap 0028                                    vfpfcnvrt@cp 002C  
                                  vfpfcnvrt@fp 0024                                   _EUSART_Write 0E10  
                       ?_OSCILLATOR_Initialize 0001                                 __end_of_printf 10FC  
                        __end_of_INT0_CallBack 107E                                 __end_of_strlen 1022  
                          start_initialization 0E68                __size_of_PIN_MANAGER_Initialize 0060  
                        __end_of_INT1_CallBack 1050                                  ??_EUSART_Read 0005  
 EUSART_SetRxInterruptHandler@interruptHandler 0005   EUSART_SetTxInterruptHandler@interruptHandler 0005  
               ?_EUSART_SetOverrunErrorHandler 0005                                    vfprintf@fmt 0030  
                   _EUSART_FramingErrorHandler 0050                               ??_PMD_Initialize 0005  
                       _EUSART_SetErrorHandler 11B4                                    __pdataBANK0 00DB  
                   __end_of_EXT_INT_Initialize 10AA                fp__INT0_DefaultInterruptHandler 0000  
                ?_INT0_DefaultInterruptHandler 0001                                       ??_printf 003A  
                                     ??_strlen 0007                    __end_of_EUSART_Transmit_ISR 0FEC  
                                  __pbssCOMRAM 003A               __end_of_INT0_SetInterruptHandler 118C  
                                __pcstackBANK0 0060                     __end_of_EUSART_Receive_ISR 0BB0  
                   __size_of_EUSART_Initialize 007A               _EUSART_RxDefaultInterruptHandler 0052  
                          __end_of_EUSART_Read 0F10                                      __pnvBANK0 00E2  
                 __end_of_EUSART_RxDataHandler 10D4                         _PIN_MANAGER_Initialize 0D52  
                         EUSART_Read@readValue 0005                                      __pintcode 0008  
                                 _eusartRxHead 004D                                   _eusartTxHead 004F  
                                 _eusartRxTail 004C                                   _eusartTxTail 004E  
                 ??_INTERRUPT_InterruptManager 0001                              __size_of_vfprintf 005E  
                      _eusartTxBufferRemaining 005A                                       _BAUD1CON 000F9F  
                                  __smallconst 0800                                  ??_sendUartStr 0008  
                               __size_of_fputc 0096                                 __size_of_putch 0002  
                         _INTERRUPT_Initialize 11E6                                 _eusartRxBuffer 00CB  
                               _eusartTxBuffer 00D3                                       _INT0_ISR 11C8  
                                     _INT1_ISR 11BE         EUSART_SetErrorHandler@interruptHandler 0005  
            __size_of_INT1_SetInterruptHandler 000A                      ?_INT1_SetInterruptHandler 0005  
                                     _PIE0bits 000EC2                                       _PIE3bits 000EC5  
                            _eusartRxLastError 004A                                       i2u110_40 00BA  
                                     i2u102_40 002A                                       i2u110_41 00B6  
                                     i2u102_41 0026                                       i2u111_40 00C8  
                                     i2u103_40 0038                                       i2u111_41 00C4  
                                     i2u103_41 0034                                       i2u104_40 004E  
                                     i2u104_41 004A                                       i2u112_48 00CE  
                                     i2u105_40 005C                                       i2u112_49 00E2  
                                     i2u105_41 0058                                       i2u106_40 0072  
                                     i2u106_41 006E                                       i2u107_40 0080  
                                     i2u107_41 007C                                       i2u108_40 008E  
                                     i2u108_41 008A                                       i2u109_48 0094  
                                     i2u109_49 00A8            __size_of_INTERRUPT_InterruptManager 00F2  
                                     _PIR0bits 000ECA                ??_EUSART_SetFramingErrorHandler 0007  
                                     _PIR3bits 000ECD                                       _PIR7bits 000ED1  
                            _EUSART_is_tx_done 1164                                      main@F9679 0100  
         fp__EUSART_DefaultOverrunErrorHandler 0000      __end_of_EUSART_DefaultOverrunErrorHandler 11E0  
   __size_of_EUSART_DefaultOverrunErrorHandler 0006            ??_EUSART_DefaultOverrunErrorHandler 0001  
           ?_EUSART_DefaultOverrunErrorHandler 0001              _EUSART_DefaultOverrunErrorHandler 11DA  
                           ?_EUSART_is_tx_done 0001                                      _vfpfcnvrt 098C  
                                   _ADCON0bits 000F60                                     _ADCON1bits 000F59  
                                   _ADCON2bits 000F5A                                     _ADCON3bits 000F5B  
                          ??_EUSART_is_tx_done 0005                 ??_INT0_DefaultInterruptHandler 0001  
                            sendUartStr@TxData 0006                                    _EUSART_Read 0EBE  
                                    copy_data0 0E80                          ?_INTERRUPT_Initialize 0001  
                          __end_of_sendUartStr 0FAA                       _INT0_SetInterruptHandler 1182  
                        fp__EUSART_Receive_ISR 0000                                     _ADSTATbits 000F65  
                    __end_of_EUSART_is_tx_done 1178                                       __Hrparam 0000  
                                   vfprintf@ap 0032                                       __Lrparam 0000  
                                   vfprintf@fp 002E                               main@returnedData 0063  
                      ??_OSCILLATOR_Initialize 0005                            _EUSART_ErrorHandler 00E2  
                  ?_EUSART_DefaultErrorHandler 0001                                     ?_vfpfcnvrt 0024  
                     __size_of_ADCC_Initialize 0050                           _EUSART_RxDataHandler 10AA  
                                     __ptext10 11EA                                       __ptext11 10FC  
                                     __ptext20 118C                                       __ptext12 111A  
                                     __ptext21 1196                                       __ptext13 0D52  
                                     __ptext30 1022                                       __ptext22 11A0  
                                     __ptext14 1136                                       __ptext31 11EC  
                                     __ptext23 11AA                                       __ptext15 11E6  
                                     __ptext40 10AA                                       __ptext32 11C8  
                                     __ptext24 11B4                                       __ptext16 107E  
                                     __ptext41 0000                                       __ptext33 1050  
                                     __ptext25 0F10                                       __ptext17 1178  
                                     __ptext34 11EE                                       __ptext26 114E  
                                     __ptext18 1182                                       __ptext35 0FAA  
                                     __ptext27 0EBE                                       __ptext19 0CD8  
                                     __ptext36 0AF0                                       __ptext37 11DA  
                                     __ptext29 11BE                                       __ptext38 11F0  
                                     __ptext39 11E0                                  __size_of_main 0092  
                                __size_of_stoa 0182                    __size_of_EUSART_is_tx_ready 0016  
                      ?_EUSART_SetErrorHandler 0005                                     _RC1STAbits 000F9D  
                                    stoa@F1133 00DB  EUSART_SetOverrunErrorHandler@interruptHandler 0005  
                                     isa$xinst 000000                                       int$flags 005B  
                                     _vfprintf 0DB2             __end_of_INTERRUPT_InterruptManager 00FA  
                   _INTERRUPT_InterruptManager 0008                                      printf@fmt 0036  
        __end_of_EUSART_SetFramingErrorHandler 11B4         __size_of_EUSART_SetFramingErrorHandler 000A  
                _EUSART_SetFramingErrorHandler 11AA           __end_of_INT1_DefaultInterruptHandler 11EE  
        __size_of_INT1_DefaultInterruptHandler 0002                   _INT1_DefaultInterruptHandler 11EC  
                                   _INTCONbits 000FF2                                    _sendUartStr 0F60  
                                  _NVMCON1bits 000F81                          ?_EUSART_RxDataHandler 0001  
                       ??_INTERRUPT_Initialize 0005                             _EXT_INT_Initialize 107E  
                                     intlevel2 0000                         fp__EUSART_Transmit_ISR 0000  
                      ?_PIN_MANAGER_Initialize 0001                 __end_of_EUSART_SetErrorHandler 11BE  
                          ?_EXT_INT_Initialize 0001                     __size_of_EUSART_is_tx_done 0014  
         __end_of_EUSART_SetRxInterruptHandler 11A0          __size_of_EUSART_SetRxInterruptHandler 000A  
                 _EUSART_SetRxInterruptHandler 1196                         __size_of_INT0_CallBack 002E  
                                     printf@ap 0060                         __size_of_INT1_CallBack 002E  
                           _EUSART_Receive_ISR 0AF0  EUSART_SetFramingErrorHandler@interruptHandler 0005  
                                  ??_vfpfcnvrt 002A                                       stoa@nuls 0013  
                         ??_EXT_INT_Initialize 0007                            ?_EUSART_Receive_ISR 0001  
              fp__INT1_DefaultInterruptHandler 0000                  ?_INT1_DefaultInterruptHandler 0001  
                fp__EUSART_DefaultErrorHandler 0000               __end_of_INT1_SetInterruptHandler 1182  
                                   _TX1STAbits 000F9E                             EUSART_Write@txData 0005  
                 __size_of_EUSART_Transmit_ISR 0042                 __end_of_PIN_MANAGER_Initialize 0DB2  
                            ??_ADCC_Initialize 0005                           ??_EUSART_Receive_ISR 0001  
