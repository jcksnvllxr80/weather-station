

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jan 06 01:16:46 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F25K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    41  0000                     
    42                           ; Version 2.20
    43                           ; Generated 05/05/2020 GMT
    44                           ; 
    45                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F25K40 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     
    77 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
    78  0000                     
    79 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
    80  0000                     
    81 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
    82  0000                     
    83 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
    84  0000                     
    85                           	psect	nvCOMRAM
    86  000001                     __pnvCOMRAM:
    87                           	callstack 0
    88  000001                     _EUSART_ErrorHandler:
    89                           	callstack 0
    90  000001                     	ds	2
    91  000003                     _EUSART_OverrunErrorHandler:
    92                           	callstack 0
    93  000003                     	ds	2
    94  000005                     _EUSART_FramingErrorHandler:
    95                           	callstack 0
    96  000005                     	ds	2
    97  000007                     _INT2_InterruptHandler:
    98                           	callstack 0
    99  000007                     	ds	2
   100  000009                     _INT1_InterruptHandler:
   101                           	callstack 0
   102  000009                     	ds	2
   103  00000B                     _INT0_InterruptHandler:
   104                           	callstack 0
   105  00000B                     	ds	2
   106  0000                     _PIR7bits	set	3793
   107  0000                     _RC6PPS	set	3837
   108  0000                     _INT1PPS	set	3746
   109  0000                     _INT0PPS	set	3745
   110  0000                     _RXPPS	set	3765
   111  0000                     _PIR3bits	set	3789
   112  0000                     _PMD5	set	3814
   113  0000                     _PMD4	set	3813
   114  0000                     _PMD3	set	3812
   115  0000                     _PMD2	set	3811
   116  0000                     _PMD1	set	3810
   117  0000                     _PMD0	set	3809
   118  0000                     _OSCTUNE	set	3805
   119  0000                     _OSCFRQ	set	3806
   120  0000                     _OSCEN	set	3804
   121  0000                     _OSCCON3	set	3802
   122  0000                     _OSCCON1	set	3800
   123  0000                     _PIE0bits	set	3778
   124  0000                     _PIR0bits	set	3786
   125  0000                     _INLVLE	set	3882
   126  0000                     _INLVLC	set	3869
   127  0000                     _INLVLB	set	3861
   128  0000                     _INLVLA	set	3853
   129  0000                     _SLRCONC	set	3870
   130  0000                     _SLRCONB	set	3862
   131  0000                     _SLRCONA	set	3854
   132  0000                     _ODCONC	set	3871
   133  0000                     _ODCONB	set	3863
   134  0000                     _ODCONA	set	3855
   135  0000                     _WPUC	set	3872
   136  0000                     _WPUA	set	3856
   137  0000                     _WPUB	set	3864
   138  0000                     _WPUE	set	3885
   139  0000                     _ANSELA	set	3857
   140  0000                     _ANSELB	set	3865
   141  0000                     _ANSELC	set	3873
   142  0000                     _ADCON1bits	set	3929
   143  0000                     _ADCON2bits	set	3930
   144  0000                     _ADCON3bits	set	3931
   145  0000                     _ADACQ	set	3932
   146  0000                     _ADCLK	set	3927
   147  0000                     _ADACT	set	3926
   148  0000                     _ADREF	set	3928
   149  0000                     _ADCON3	set	3931
   150  0000                     _ADCON2	set	3930
   151  0000                     _ADCON1	set	3929
   152  0000                     _ADPRE	set	3934
   153  0000                     _ADCAP	set	3933
   154  0000                     _ADPCH	set	3935
   155  0000                     _NVMDAT	set	3968
   156  0000                     _NVMADRL	set	3966
   157  0000                     _NVMCON2	set	3970
   158  0000                     _TABLAT	set	4085
   159  0000                     _TBLPTRL	set	4086
   160  0000                     _TBLPTRH	set	4087
   161  0000                     _TBLPTRU	set	4088
   162  0000                     _NVMCON1bits	set	3969
   163  0000                     _TRISC	set	3978
   164  0000                     _TRISB	set	3977
   165  0000                     _TRISA	set	3976
   166  0000                     _LATC	set	3973
   167  0000                     _LATB	set	3972
   168  0000                     _LATA	set	3971
   169  0000                     _TX1REG	set	3994
   170  0000                     _RC1REG	set	3993
   171  0000                     _RC1STAbits	set	3997
   172  0000                     _TX1STAbits	set	3998
   173  0000                     _SP1BRGH	set	3996
   174  0000                     _SP1BRGL	set	3995
   175  0000                     _TX1STA	set	3998
   176  0000                     _RC1STA	set	3997
   177  0000                     _BAUD1CON	set	3999
   178  0000                     _ADERRL	set	3950
   179  0000                     _ADERRH	set	3951
   180  0000                     _ADPREVL	set	3937
   181  0000                     _ADPREVH	set	3938
   182  0000                     _ADFLTRL	set	3954
   183  0000                     _ADFLTRH	set	3955
   184  0000                     _ADSTATbits	set	3941
   185  0000                     _ADACCL	set	3952
   186  0000                     _ADACCH	set	3953
   187  0000                     _ADCNT	set	3943
   188  0000                     _ADRESL	set	3939
   189  0000                     _ADRESH	set	3940
   190  0000                     _ADCON0bits	set	3936
   191  0000                     _ADCON0	set	3936
   192  0000                     _ADSTAT	set	3941
   193  0000                     _ADRPT	set	3942
   194  0000                     _ADSTPTH	set	3945
   195  0000                     _ADSTPTL	set	3944
   196  0000                     _ADUTHH	set	3949
   197  0000                     _ADUTHL	set	3948
   198  0000                     _ADLTHH	set	3947
   199  0000                     _ADLTHL	set	3946
   200  0000                     _INTCONbits	set	4082
   201                           
   202                           	psect	smallconst
   203  000800                     __psmallconst:
   204                           	callstack 0
   205  000800  00                 	db	0
   206  000801                     STR_1:
   207  000801  41                 	db	65	;'A'
   208  000802  54                 	db	84	;'T'
   209  000803  0D                 	db	13
   210  000804  0A                 	db	10
   211  000805  0D                 	db	13
   212  000806  0A                 	db	10
   213  000807  00                 	db	0
   214  000808  00                 	db	0	; dummy byte at the end
   215  0000                     
   216                           ; #config settings
   217                           
   218                           	psect	cinit
   219  000A64                     __pcinit:
   220                           	callstack 0
   221  000A64                     start_initialization:
   222                           	callstack 0
   223  000A64                     __initialization:
   224                           	callstack 0
   225                           
   226                           ; NVMREG Errata
   227  000A64                     	if	3969
   228  000A64  8E81               	bsf	129,7,c
   229  000A66  9C81               	bcf	129,6,c
   230  000A68                     	endif
   231                           
   232                           ; Clear objects allocated to COMRAM (1 bytes)
   233  000A68  6A14               	clrf	__pbssCOMRAM& (0+255),c
   234  000A6A                     end_of_initialization:
   235                           	callstack 0
   236  000A6A                     __end_of__initialization:
   237                           	callstack 0
   238  000A6A  9015               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   239  000A6C  9215               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   240  000A6E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   241  000A70  6EF8               	movwf	tblptru,c
   242  000A72  0100               	movlb	0
   243  000A74  EFED  F004         	goto	_main	;jump to C main() function
   244                           
   245                           	psect	bssCOMRAM
   246  000014                     __pbssCOMRAM:
   247                           	callstack 0
   248  000014                     _eusartRxLastError:
   249                           	callstack 0
   250  000014                     	ds	1
   251                           
   252                           	psect	cstackCOMRAM
   253  00000D                     __pcstackCOMRAM:
   254                           	callstack 0
   255  00000D                     ??_INTERRUPT_InterruptManager:
   256  00000D                     
   257                           ; 1 bytes @ 0x0
   258  00000D                     	ds	2
   259  00000F                     EUSART_Write@txData:
   260                           	callstack 0
   261  00000F                     INT0_SetInterruptHandler@InterruptHandler:
   262                           	callstack 0
   263  00000F                     INT1_SetInterruptHandler@InterruptHandler:
   264                           	callstack 0
   265  00000F                     INT2_SetInterruptHandler@InterruptHandler:
   266                           	callstack 0
   267  00000F                     EUSART_SetFramingErrorHandler@interruptHandler:
   268                           	callstack 0
   269  00000F                     EUSART_SetOverrunErrorHandler@interruptHandler:
   270                           	callstack 0
   271  00000F                     EUSART_SetErrorHandler@interruptHandler:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0x2
   275  00000F                     	ds	1
   276  000010                     sendUartStr@TxData:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0x3
   280  000010                     	ds	1
   281  000011                     
   282                           ; 1 bytes @ 0x4
   283  000011                     	ds	1
   284  000012                     main@TestTxData:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0x5
   288  000012                     	ds	2
   289                           
   290 ;;
   291 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   292 ;;
   293 ;; *************** function _main *****************
   294 ;; Defined at:
   295 ;;		line 52 in file "main.c"
   296 ;; Parameters:    Size  Location     Type
   297 ;;		None
   298 ;; Auto vars:     Size  Location     Type
   299 ;;  TestTxData      2    5[COMRAM] PTR unsigned char 
   300 ;;		 -> STR_1(7), 
   301 ;; Return value:  Size  Location     Type
   302 ;;                  1    wreg      void 
   303 ;; Registers used:
   304 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   305 ;; Tracked objects:
   306 ;;		On entry : 0/0
   307 ;;		On exit  : 0/0
   308 ;;		Unchanged: 0/0
   309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   310 ;;      Params:         0       0       0       0       0       0       0       0       0
   311 ;;      Locals:         2       0       0       0       0       0       0       0       0
   312 ;;      Temps:          0       0       0       0       0       0       0       0       0
   313 ;;      Totals:         2       0       0       0       0       0       0       0       0
   314 ;;Total ram usage:        2 bytes
   315 ;; Hardware stack levels required when called: 7
   316 ;; This function calls:
   317 ;;		_SYSTEM_Initialize
   318 ;;		_sendUartStr
   319 ;; This function is called by:
   320 ;;		Startup code after reset
   321 ;; This function uses a non-reentrant model
   322 ;;
   323                           
   324                           	psect	text0
   325  0009DA                     __ptext0:
   326                           	callstack 0
   327  0009DA                     _main:
   328                           	callstack 24
   329  0009DA                     
   330                           ;main.c: 55:     SYSTEM_Initialize();
   331  0009DA  ECFD  F004         	call	_SYSTEM_Initialize	;wreg free
   332  0009DE                     
   333                           ;main.c: 72:     char* TestTxData = "AT\r\n\r\n";
   334  0009DE  0E01               	movlw	low STR_1
   335  0009E0  6E12               	movwf	main@TestTxData^0,c
   336  0009E2  0E08               	movlw	high STR_1
   337  0009E4  6E13               	movwf	(main@TestTxData+1)^0,c
   338  0009E6                     l1644:
   339                           
   340                           ;main.c: 74:     {;main.c: 75:         sendUartStr(TestTxData);
   341  0009E6  C012  F010         	movff	main@TestTxData,sendUartStr@TxData
   342  0009EA  C013  F011         	movff	main@TestTxData+1,sendUartStr@TxData+1
   343  0009EE  EC5D  F004         	call	_sendUartStr	;wreg free
   344  0009F2  EFF3  F004         	goto	l1644
   345  0009F6  EF32  F000         	goto	start
   346  0009FA                     __end_of_main:
   347                           	callstack 0
   348                           
   349 ;; *************** function _sendUartStr *****************
   350 ;; Defined at:
   351 ;;		line 80 in file "main.c"
   352 ;; Parameters:    Size  Location     Type
   353 ;;  TxData          2    3[COMRAM] PTR unsigned char 
   354 ;;		 -> STR_1(7), 
   355 ;; Auto vars:     Size  Location     Type
   356 ;;		None
   357 ;; Return value:  Size  Location     Type
   358 ;;                  1    wreg      void 
   359 ;; Registers used:
   360 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   361 ;; Tracked objects:
   362 ;;		On entry : 0/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   366 ;;      Params:         2       0       0       0       0       0       0       0       0
   367 ;;      Locals:         0       0       0       0       0       0       0       0       0
   368 ;;      Temps:          0       0       0       0       0       0       0       0       0
   369 ;;      Totals:         2       0       0       0       0       0       0       0       0
   370 ;;Total ram usage:        2 bytes
   371 ;; Hardware stack levels used: 1
   372 ;; Hardware stack levels required when called: 5
   373 ;; This function calls:
   374 ;;		_EUSART_Write
   375 ;;		_EUSART_is_tx_done
   376 ;; This function is called by:
   377 ;;		_main
   378 ;; This function uses a non-reentrant model
   379 ;;
   380                           
   381                           	psect	text1
   382  0008BA                     __ptext1:
   383                           	callstack 0
   384  0008BA                     _sendUartStr:
   385                           	callstack 25
   386  0008BA                     
   387                           ;main.c: 81:     while (*TxData != '\0') {
   388  0008BA  EF73  F004         	goto	l1638
   389  0008BE                     l1632:
   390                           
   391                           ;main.c: 82:         if (EUSART_is_tx_done()){
   392  0008BE  EC3C  F005         	call	_EUSART_is_tx_done	;wreg free
   393  0008C2  0900               	iorlw	0
   394  0008C4  B4D8               	btfsc	status,2,c
   395  0008C6  EF67  F004         	goto	u281
   396  0008CA  EF69  F004         	goto	u280
   397  0008CE                     u281:
   398  0008CE  EF73  F004         	goto	l1638
   399  0008D2                     u280:
   400  0008D2                     
   401                           ;main.c: 83:             EUSART_Write(*TxData);
   402  0008D2  C010  FFF6         	movff	sendUartStr@TxData,tblptrl
   403  0008D6  C011  FFF7         	movff	sendUartStr@TxData+1,tblptrh
   404  0008DA                     	if	0	;tblptru may be non-zero
   405  0008DA                     	endif
   406  0008DA                     	if	0	;tblptru may be non-zero
   407  0008DA                     	endif
   408  0008DA  0008               	tblrd		*
   409  0008DC  50F5               	movf	tablat,w,c
   410  0008DE  EC1A  F005         	call	_EUSART_Write
   411  0008E2                     
   412                           ;main.c: 84:             TxData++;
   413  0008E2  4A10               	infsnz	sendUartStr@TxData^0,f,c
   414  0008E4  2A11               	incf	(sendUartStr@TxData+1)^0,f,c
   415  0008E6                     l1638:
   416                           
   417                           ;main.c: 81:     while (*TxData != '\0') {
   418  0008E6  C010  FFF6         	movff	sendUartStr@TxData,tblptrl
   419  0008EA  C011  FFF7         	movff	sendUartStr@TxData+1,tblptrh
   420  0008EE                     	if	0	;tblptru may be non-zero
   421  0008EE                     	endif
   422  0008EE                     	if	0	;tblptru may be non-zero
   423  0008EE                     	endif
   424  0008EE  0008               	tblrd		*
   425  0008F0  50F5               	movf	tablat,w,c
   426  0008F2  0900               	iorlw	0
   427  0008F4  A4D8               	btfss	status,2,c
   428  0008F6  EF7F  F004         	goto	u291
   429  0008FA  EF81  F004         	goto	u290
   430  0008FE                     u291:
   431  0008FE  EF5F  F004         	goto	l1632
   432  000902                     u290:
   433  000902  0012               	return		;funcret
   434  000904                     __end_of_sendUartStr:
   435                           	callstack 0
   436                           
   437 ;; *************** function _EUSART_is_tx_done *****************
   438 ;; Defined at:
   439 ;;		line 104 in file "mcc_generated_files/eusart.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;		None
   442 ;; Auto vars:     Size  Location     Type
   443 ;;		None
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      _Bool 
   446 ;; Registers used:
   447 ;;		wreg
   448 ;; Tracked objects:
   449 ;;		On entry : 0/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   453 ;;      Params:         0       0       0       0       0       0       0       0       0
   454 ;;      Locals:         0       0       0       0       0       0       0       0       0
   455 ;;      Temps:          0       0       0       0       0       0       0       0       0
   456 ;;      Totals:         0       0       0       0       0       0       0       0       0
   457 ;;Total ram usage:        0 bytes
   458 ;; Hardware stack levels used: 1
   459 ;; Hardware stack levels required when called: 4
   460 ;; This function calls:
   461 ;;		Nothing
   462 ;; This function is called by:
   463 ;;		_sendUartStr
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467                           	psect	text2
   468  000A78                     __ptext2:
   469                           	callstack 0
   470  000A78                     _EUSART_is_tx_done:
   471                           	callstack 25
   472  000A78                     
   473                           ;mcc_generated_files/eusart.c: 106:     return TX1STAbits.TRMT;
   474  000A78  B29E               	btfsc	158,1,c	;volatile
   475  000A7A  EF41  F005         	goto	u51
   476  000A7E  EF44  F005         	goto	u50
   477  000A82                     u51:
   478  000A82  0E01               	movlw	1
   479  000A84  EF45  F005         	goto	u56
   480  000A88                     u50:
   481  000A88  0E00               	movlw	0
   482  000A8A                     u56:
   483  000A8A  0012               	return		;funcret
   484  000A8C                     __end_of_EUSART_is_tx_done:
   485                           	callstack 0
   486                           
   487 ;; *************** function _EUSART_Write *****************
   488 ;; Defined at:
   489 ;;		line 132 in file "mcc_generated_files/eusart.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;  txData          1    wreg     unsigned char 
   492 ;; Auto vars:     Size  Location     Type
   493 ;;  txData          1    2[COMRAM] unsigned char 
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		wreg
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   503 ;;      Params:         0       0       0       0       0       0       0       0       0
   504 ;;      Locals:         1       0       0       0       0       0       0       0       0
   505 ;;      Temps:          0       0       0       0       0       0       0       0       0
   506 ;;      Totals:         1       0       0       0       0       0       0       0       0
   507 ;;Total ram usage:        1 bytes
   508 ;; Hardware stack levels used: 1
   509 ;; Hardware stack levels required when called: 4
   510 ;; This function calls:
   511 ;;		Nothing
   512 ;; This function is called by:
   513 ;;		_sendUartStr
   514 ;; This function uses a non-reentrant model
   515 ;;
   516                           
   517                           	psect	text3
   518  000A34                     __ptext3:
   519                           	callstack 0
   520  000A34                     _EUSART_Write:
   521                           	callstack 25
   522                           
   523                           ;incstack = 0
   524                           ;EUSART_Write@txData stored from wreg
   525  000A34  6E0F               	movwf	EUSART_Write@txData^0,c
   526  000A36                     l326:
   527                           
   528                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR3bits.TXIF)
   529  000A36  010E               	movlb	14	; () banked
   530  000A38  A9CD               	btfss	205,4,b	;volatile
   531  000A3A  EF21  F005         	goto	u61
   532  000A3E  EF23  F005         	goto	u60
   533  000A42                     u61:
   534  000A42  EF1B  F005         	goto	l326
   535  000A46                     u60:
   536  000A46                     
   537                           ; BSR set to: 14
   538                           ;mcc_generated_files/eusart.c: 138:     TX1REG = txData;
   539  000A46  C00F  FF9A         	movff	EUSART_Write@txData,3994	;volatile
   540  000A4A                     
   541                           ; BSR set to: 14
   542  000A4A  0012               	return		;funcret
   543  000A4C                     __end_of_EUSART_Write:
   544                           	callstack 0
   545                           
   546 ;; *************** function _SYSTEM_Initialize *****************
   547 ;; Defined at:
   548 ;;		line 50 in file "mcc_generated_files/mcc.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;		None
   551 ;; Auto vars:     Size  Location     Type
   552 ;;		None
   553 ;; Return value:  Size  Location     Type
   554 ;;                  1    wreg      void 
   555 ;; Registers used:
   556 ;;		wreg, status,2, status,0, cstack
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   562 ;;      Params:         0       0       0       0       0       0       0       0       0
   563 ;;      Locals:         0       0       0       0       0       0       0       0       0
   564 ;;      Temps:          0       0       0       0       0       0       0       0       0
   565 ;;      Totals:         0       0       0       0       0       0       0       0       0
   566 ;;Total ram usage:        0 bytes
   567 ;; Hardware stack levels used: 1
   568 ;; Hardware stack levels required when called: 6
   569 ;; This function calls:
   570 ;;		_ADCC_Initialize
   571 ;;		_EUSART_Initialize
   572 ;;		_EXT_INT_Initialize
   573 ;;		_INTERRUPT_Initialize
   574 ;;		_OSCILLATOR_Initialize
   575 ;;		_PIN_MANAGER_Initialize
   576 ;;		_PMD_Initialize
   577 ;; This function is called by:
   578 ;;		_main
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           	psect	text4
   583  0009FA                     __ptext4:
   584                           	callstack 0
   585  0009FA                     _SYSTEM_Initialize:
   586                           	callstack 24
   587  0009FA                     
   588                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
   589  0009FA  EC6E  F005         	call	_INTERRUPT_Initialize	;wreg free
   590  0009FE                     
   591                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
   592  0009FE  EC0C  F005         	call	_PMD_Initialize	;wreg free
   593  000A02                     
   594                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
   595  000A02  EC05  F004         	call	_PIN_MANAGER_Initialize	;wreg free
   596  000A06                     
   597                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
   598  000A06  EC26  F005         	call	_OSCILLATOR_Initialize	;wreg free
   599  000A0A                     
   600                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
   601  000A0A  EC35  F004         	call	_ADCC_Initialize	;wreg free
   602  000A0E                     
   603                           ;mcc_generated_files/mcc.c: 57:     EXT_INT_Initialize();
   604  000A0E  ECA1  F004         	call	_EXT_INT_Initialize	;wreg free
   605  000A12                     
   606                           ;mcc_generated_files/mcc.c: 58:     EUSART_Initialize();
   607  000A12  EC82  F004         	call	_EUSART_Initialize	;wreg free
   608  000A16  0012               	return		;funcret
   609  000A18                     __end_of_SYSTEM_Initialize:
   610                           	callstack 0
   611                           
   612 ;; *************** function _PMD_Initialize *****************
   613 ;; Defined at:
   614 ;;		line 75 in file "mcc_generated_files/mcc.c"
   615 ;; Parameters:    Size  Location     Type
   616 ;;		None
   617 ;; Auto vars:     Size  Location     Type
   618 ;;		None
   619 ;; Return value:  Size  Location     Type
   620 ;;                  1    wreg      void 
   621 ;; Registers used:
   622 ;;		wreg, status,2
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   628 ;;      Params:         0       0       0       0       0       0       0       0       0
   629 ;;      Locals:         0       0       0       0       0       0       0       0       0
   630 ;;      Temps:          0       0       0       0       0       0       0       0       0
   631 ;;      Totals:         0       0       0       0       0       0       0       0       0
   632 ;;Total ram usage:        0 bytes
   633 ;; Hardware stack levels used: 1
   634 ;; Hardware stack levels required when called: 4
   635 ;; This function calls:
   636 ;;		Nothing
   637 ;; This function is called by:
   638 ;;		_SYSTEM_Initialize
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642                           	psect	text5
   643  000A18                     __ptext5:
   644                           	callstack 0
   645  000A18                     _PMD_Initialize:
   646                           	callstack 25
   647  000A18                     
   648                           ;mcc_generated_files/mcc.c: 78:     PMD0 = 0x00;
   649  000A18  0E00               	movlw	0
   650  000A1A  010E               	movlb	14	; () banked
   651  000A1C  6FE1               	movwf	225,b	;volatile
   652                           
   653                           ;mcc_generated_files/mcc.c: 80:     PMD1 = 0x00;
   654  000A1E  0E00               	movlw	0
   655  000A20  6FE2               	movwf	226,b	;volatile
   656                           
   657                           ;mcc_generated_files/mcc.c: 82:     PMD2 = 0x00;
   658  000A22  0E00               	movlw	0
   659  000A24  6FE3               	movwf	227,b	;volatile
   660                           
   661                           ;mcc_generated_files/mcc.c: 84:     PMD3 = 0x00;
   662  000A26  0E00               	movlw	0
   663  000A28  6FE4               	movwf	228,b	;volatile
   664                           
   665                           ;mcc_generated_files/mcc.c: 86:     PMD4 = 0x00;
   666  000A2A  0E00               	movlw	0
   667  000A2C  6FE5               	movwf	229,b	;volatile
   668                           
   669                           ;mcc_generated_files/mcc.c: 88:     PMD5 = 0x00;
   670  000A2E  0E00               	movlw	0
   671  000A30  6FE6               	movwf	230,b	;volatile
   672  000A32                     
   673                           ; BSR set to: 14
   674  000A32  0012               	return		;funcret
   675  000A34                     __end_of_PMD_Initialize:
   676                           	callstack 0
   677                           
   678 ;; *************** function _PIN_MANAGER_Initialize *****************
   679 ;; Defined at:
   680 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;		None
   683 ;; Auto vars:     Size  Location     Type
   684 ;;		None
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		wreg, status,2
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   694 ;;      Params:         0       0       0       0       0       0       0       0       0
   695 ;;      Locals:         0       0       0       0       0       0       0       0       0
   696 ;;      Temps:          0       0       0       0       0       0       0       0       0
   697 ;;      Totals:         0       0       0       0       0       0       0       0       0
   698 ;;Total ram usage:        0 bytes
   699 ;; Hardware stack levels used: 1
   700 ;; Hardware stack levels required when called: 4
   701 ;; This function calls:
   702 ;;		Nothing
   703 ;; This function is called by:
   704 ;;		_SYSTEM_Initialize
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           	psect	text6
   709  00080A                     __ptext6:
   710                           	callstack 0
   711  00080A                     _PIN_MANAGER_Initialize:
   712                           	callstack 25
   713  00080A                     
   714                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
   715  00080A  0E00               	movlw	0
   716  00080C  6E83               	movwf	131,c	;volatile
   717                           
   718                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
   719  00080E  0E00               	movlw	0
   720  000810  6E84               	movwf	132,c	;volatile
   721                           
   722                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
   723  000812  0E00               	movlw	0
   724  000814  6E85               	movwf	133,c	;volatile
   725  000816                     
   726                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
   727  000816  6888               	setf	136,c	;volatile
   728  000818                     
   729                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
   730  000818  6889               	setf	137,c	;volatile
   731                           
   732                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
   733  00081A  0EBF               	movlw	191
   734  00081C  6E8A               	movwf	138,c	;volatile
   735                           
   736                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x7F;
   737  00081E  0E7F               	movlw	127
   738  000820  010F               	movlb	15	; () banked
   739  000822  6F21               	movwf	33,b	;volatile
   740                           
   741                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xFC;
   742  000824  0EFC               	movlw	252
   743  000826  6F19               	movwf	25,b	;volatile
   744  000828                     
   745                           ; BSR set to: 15
   746                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xFF;
   747  000828  6911               	setf	17,b	;volatile
   748                           
   749                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
   750  00082A  0E00               	movlw	0
   751  00082C  6F2D               	movwf	45,b	;volatile
   752                           
   753                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
   754  00082E  0E00               	movlw	0
   755  000830  6F18               	movwf	24,b	;volatile
   756                           
   757                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
   758  000832  0E00               	movlw	0
   759  000834  6F10               	movwf	16,b	;volatile
   760                           
   761                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
   762  000836  0E00               	movlw	0
   763  000838  6F20               	movwf	32,b	;volatile
   764                           
   765                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
   766  00083A  0E00               	movlw	0
   767  00083C  6F0F               	movwf	15,b	;volatile
   768                           
   769                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
   770  00083E  0E00               	movlw	0
   771  000840  6F17               	movwf	23,b	;volatile
   772                           
   773                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
   774  000842  0E00               	movlw	0
   775  000844  6F1F               	movwf	31,b	;volatile
   776  000846                     
   777                           ; BSR set to: 15
   778                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
   779  000846  690E               	setf	14,b	;volatile
   780  000848                     
   781                           ; BSR set to: 15
   782                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
   783  000848  6916               	setf	22,b	;volatile
   784  00084A                     
   785                           ; BSR set to: 15
   786                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
   787  00084A  691E               	setf	30,b	;volatile
   788  00084C                     
   789                           ; BSR set to: 15
   790                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0xFF;
   791  00084C  690D               	setf	13,b	;volatile
   792  00084E                     
   793                           ; BSR set to: 15
   794                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xFF;
   795  00084E  6915               	setf	21,b	;volatile
   796  000850                     
   797                           ; BSR set to: 15
   798                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
   799  000850  691D               	setf	29,b	;volatile
   800                           
   801                           ;mcc_generated_files/pin_manager.c: 106:     INLVLE = 0x08;
   802  000852  0E08               	movlw	8
   803  000854  6F2A               	movwf	42,b	;volatile
   804                           
   805                           ;mcc_generated_files/pin_manager.c: 115:     RXPPS = 0x17;
   806  000856  0E17               	movlw	23
   807  000858  010E               	movlb	14	; () banked
   808  00085A  6FB5               	movwf	181,b	;volatile
   809                           
   810                           ;mcc_generated_files/pin_manager.c: 116:     INT0PPS = 0x08;
   811  00085C  0E08               	movlw	8
   812  00085E  6FA1               	movwf	161,b	;volatile
   813                           
   814                           ;mcc_generated_files/pin_manager.c: 117:     INT1PPS = 0x09;
   815  000860  0E09               	movlw	9
   816  000862  6FA2               	movwf	162,b	;volatile
   817                           
   818                           ;mcc_generated_files/pin_manager.c: 118:     RC6PPS = 0x09;
   819  000864  0E09               	movlw	9
   820  000866  6FFD               	movwf	253,b	;volatile
   821  000868                     
   822                           ; BSR set to: 14
   823  000868  0012               	return		;funcret
   824  00086A                     __end_of_PIN_MANAGER_Initialize:
   825                           	callstack 0
   826                           
   827 ;; *************** function _OSCILLATOR_Initialize *****************
   828 ;; Defined at:
   829 ;;		line 61 in file "mcc_generated_files/mcc.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;		None
   832 ;; Auto vars:     Size  Location     Type
   833 ;;		None
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      void 
   836 ;; Registers used:
   837 ;;		wreg, status,2
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   843 ;;      Params:         0       0       0       0       0       0       0       0       0
   844 ;;      Locals:         0       0       0       0       0       0       0       0       0
   845 ;;      Temps:          0       0       0       0       0       0       0       0       0
   846 ;;      Totals:         0       0       0       0       0       0       0       0       0
   847 ;;Total ram usage:        0 bytes
   848 ;; Hardware stack levels used: 1
   849 ;; Hardware stack levels required when called: 4
   850 ;; This function calls:
   851 ;;		Nothing
   852 ;; This function is called by:
   853 ;;		_SYSTEM_Initialize
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857                           	psect	text7
   858  000A4C                     __ptext7:
   859                           	callstack 0
   860  000A4C                     _OSCILLATOR_Initialize:
   861                           	callstack 25
   862  000A4C                     
   863                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x70;
   864  000A4C  0E70               	movlw	112
   865  000A4E  010E               	movlb	14	; () banked
   866  000A50  6FD8               	movwf	216,b	;volatile
   867                           
   868                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
   869  000A52  0E00               	movlw	0
   870  000A54  6FDA               	movwf	218,b	;volatile
   871                           
   872                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
   873  000A56  0E00               	movlw	0
   874  000A58  6FDC               	movwf	220,b	;volatile
   875                           
   876                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x02;
   877  000A5A  0E02               	movlw	2
   878  000A5C  6FDE               	movwf	222,b	;volatile
   879                           
   880                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
   881  000A5E  0E00               	movlw	0
   882  000A60  6FDD               	movwf	221,b	;volatile
   883  000A62                     
   884                           ; BSR set to: 14
   885  000A62  0012               	return		;funcret
   886  000A64                     __end_of_OSCILLATOR_Initialize:
   887                           	callstack 0
   888                           
   889 ;; *************** function _INTERRUPT_Initialize *****************
   890 ;; Defined at:
   891 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;		None
   894 ;; Auto vars:     Size  Location     Type
   895 ;;		None
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      void 
   898 ;; Registers used:
   899 ;;		None
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   905 ;;      Params:         0       0       0       0       0       0       0       0       0
   906 ;;      Locals:         0       0       0       0       0       0       0       0       0
   907 ;;      Temps:          0       0       0       0       0       0       0       0       0
   908 ;;      Totals:         0       0       0       0       0       0       0       0       0
   909 ;;Total ram usage:        0 bytes
   910 ;; Hardware stack levels used: 1
   911 ;; Hardware stack levels required when called: 4
   912 ;; This function calls:
   913 ;;		Nothing
   914 ;; This function is called by:
   915 ;;		_SYSTEM_Initialize
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           	psect	text8
   920  000ADC                     __ptext8:
   921                           	callstack 0
   922  000ADC                     _INTERRUPT_Initialize:
   923                           	callstack 25
   924  000ADC                     
   925                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
   926  000ADC  9AF2               	bcf	242,5,c	;volatile
   927  000ADE  0012               	return		;funcret
   928  000AE0                     __end_of_INTERRUPT_Initialize:
   929                           	callstack 0
   930                           
   931 ;; *************** function _EXT_INT_Initialize *****************
   932 ;; Defined at:
   933 ;;		line 113 in file "mcc_generated_files/ext_int.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;		None
   936 ;; Auto vars:     Size  Location     Type
   937 ;;		None
   938 ;; Return value:  Size  Location     Type
   939 ;;                  1    wreg      void 
   940 ;; Registers used:
   941 ;;		wreg, status,2, status,0, cstack
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   947 ;;      Params:         0       0       0       0       0       0       0       0       0
   948 ;;      Locals:         0       0       0       0       0       0       0       0       0
   949 ;;      Temps:          0       0       0       0       0       0       0       0       0
   950 ;;      Totals:         0       0       0       0       0       0       0       0       0
   951 ;;Total ram usage:        0 bytes
   952 ;; Hardware stack levels used: 1
   953 ;; Hardware stack levels required when called: 5
   954 ;; This function calls:
   955 ;;		_INT0_SetInterruptHandler
   956 ;;		_INT1_SetInterruptHandler
   957 ;;		_INT2_SetInterruptHandler
   958 ;; This function is called by:
   959 ;;		_SYSTEM_Initialize
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           	psect	text9
   964  000942                     __ptext9:
   965                           	callstack 0
   966  000942                     _EXT_INT_Initialize:
   967                           	callstack 24
   968  000942                     
   969                           ;mcc_generated_files/ext_int.c: 118:     (PIR0bits.INT0IF = 0);
   970  000942  010E               	movlb	14	; () banked
   971  000944  91CA               	bcf	202,0,b	;volatile
   972                           
   973                           ;mcc_generated_files/ext_int.c: 119:     (INTCONbits.INT0EDG = 1);
   974  000946  80F2               	bsf	242,0,c	;volatile
   975  000948                     
   976                           ; BSR set to: 14
   977                           ;mcc_generated_files/ext_int.c: 121:     INT0_SetInterruptHandler(INT0_DefaultInterruptH
      +                          andler);
   978  000948  0EE2               	movlw	low _INT0_DefaultInterruptHandler
   979  00094A  6E0F               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
   980  00094C  0E0A               	movlw	high _INT0_DefaultInterruptHandler
   981  00094E  6E10               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
   982  000950  EC50  F005         	call	_INT0_SetInterruptHandler	;wreg free
   983  000954                     
   984                           ;mcc_generated_files/ext_int.c: 122:     (PIE0bits.INT0IE = 1);
   985  000954  010E               	movlb	14	; () banked
   986  000956  81C2               	bsf	194,0,b	;volatile
   987  000958                     
   988                           ; BSR set to: 14
   989                           ;mcc_generated_files/ext_int.c: 127:     (PIR0bits.INT1IF = 0);
   990  000958  93CA               	bcf	202,1,b	;volatile
   991  00095A                     
   992                           ; BSR set to: 14
   993                           ;mcc_generated_files/ext_int.c: 128:     (INTCONbits.INT1EDG = 1);
   994  00095A  82F2               	bsf	242,1,c	;volatile
   995                           
   996                           ;mcc_generated_files/ext_int.c: 130:     INT1_SetInterruptHandler(INT1_DefaultInterruptH
      +                          andler);
   997  00095C  0EE0               	movlw	low _INT1_DefaultInterruptHandler
   998  00095E  6E0F               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
   999  000960  0E0A               	movlw	high _INT1_DefaultInterruptHandler
  1000  000962  6E10               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
  1001  000964  EC4B  F005         	call	_INT1_SetInterruptHandler	;wreg free
  1002  000968                     
  1003                           ;mcc_generated_files/ext_int.c: 131:     (PIE0bits.INT1IE = 1);
  1004  000968  010E               	movlb	14	; () banked
  1005  00096A  83C2               	bsf	194,1,b	;volatile
  1006  00096C                     
  1007                           ; BSR set to: 14
  1008                           ;mcc_generated_files/ext_int.c: 136:     (PIR0bits.INT2IF = 0);
  1009  00096C  95CA               	bcf	202,2,b	;volatile
  1010  00096E                     
  1011                           ; BSR set to: 14
  1012                           ;mcc_generated_files/ext_int.c: 137:     (INTCONbits.INT2EDG = 1);
  1013  00096E  84F2               	bsf	242,2,c	;volatile
  1014                           
  1015                           ;mcc_generated_files/ext_int.c: 139:     INT2_SetInterruptHandler(INT2_DefaultInterruptH
      +                          andler);
  1016  000970  0E00               	movlw	0
  1017  000972  6E0F               	movwf	INT2_SetInterruptHandler@InterruptHandler^0,c
  1018  000974  0E00               	movlw	0
  1019  000976  6E10               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^0,c
  1020  000978  EC46  F005         	call	_INT2_SetInterruptHandler	;wreg free
  1021  00097C  0012               	return		;funcret
  1022  00097E                     __end_of_EXT_INT_Initialize:
  1023                           	callstack 0
  1024                           
  1025 ;; *************** function _INT2_SetInterruptHandler *****************
  1026 ;; Defined at:
  1027 ;;		line 104 in file "mcc_generated_files/ext_int.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  1030 ;;		 -> INT2_DefaultInterruptHandler(1), 
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;		None
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  1    wreg      void 
  1035 ;; Registers used:
  1036 ;;		wreg, status,2, status,0
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1042 ;;      Params:         2       0       0       0       0       0       0       0       0
  1043 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1044 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1045 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1046 ;;Total ram usage:        2 bytes
  1047 ;; Hardware stack levels used: 1
  1048 ;; Hardware stack levels required when called: 4
  1049 ;; This function calls:
  1050 ;;		Nothing
  1051 ;; This function is called by:
  1052 ;;		_EXT_INT_Initialize
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           	psect	text10
  1057  000A8C                     __ptext10:
  1058                           	callstack 0
  1059  000A8C                     _INT2_SetInterruptHandler:
  1060                           	callstack 24
  1061  000A8C                     
  1062                           ;mcc_generated_files/ext_int.c: 105:     INT2_InterruptHandler = InterruptHandler;
  1063  000A8C  C00F  F007         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  1064  000A90  C010  F008         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  1065  000A94  0012               	return		;funcret
  1066  000A96                     __end_of_INT2_SetInterruptHandler:
  1067                           	callstack 0
  1068                           
  1069 ;; *************** function _INT1_SetInterruptHandler *****************
  1070 ;; Defined at:
  1071 ;;		line 78 in file "mcc_generated_files/ext_int.c"
  1072 ;; Parameters:    Size  Location     Type
  1073 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  1074 ;;		 -> INT1_DefaultInterruptHandler(1), 
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;		None
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      void 
  1079 ;; Registers used:
  1080 ;;		wreg, status,2, status,0
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1086 ;;      Params:         2       0       0       0       0       0       0       0       0
  1087 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1088 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1089 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1090 ;;Total ram usage:        2 bytes
  1091 ;; Hardware stack levels used: 1
  1092 ;; Hardware stack levels required when called: 4
  1093 ;; This function calls:
  1094 ;;		Nothing
  1095 ;; This function is called by:
  1096 ;;		_EXT_INT_Initialize
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100                           	psect	text11
  1101  000A96                     __ptext11:
  1102                           	callstack 0
  1103  000A96                     _INT1_SetInterruptHandler:
  1104                           	callstack 24
  1105  000A96                     
  1106                           ;mcc_generated_files/ext_int.c: 79:     INT1_InterruptHandler = InterruptHandler;
  1107  000A96  C00F  F009         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  1108  000A9A  C010  F00A         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  1109  000A9E  0012               	return		;funcret
  1110  000AA0                     __end_of_INT1_SetInterruptHandler:
  1111                           	callstack 0
  1112                           
  1113 ;; *************** function _INT0_SetInterruptHandler *****************
  1114 ;; Defined at:
  1115 ;;		line 52 in file "mcc_generated_files/ext_int.c"
  1116 ;; Parameters:    Size  Location     Type
  1117 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  1118 ;;		 -> INT0_DefaultInterruptHandler(1), 
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;		None
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  1    wreg      void 
  1123 ;; Registers used:
  1124 ;;		wreg, status,2, status,0
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1130 ;;      Params:         2       0       0       0       0       0       0       0       0
  1131 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1132 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1133 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1134 ;;Total ram usage:        2 bytes
  1135 ;; Hardware stack levels used: 1
  1136 ;; Hardware stack levels required when called: 4
  1137 ;; This function calls:
  1138 ;;		Nothing
  1139 ;; This function is called by:
  1140 ;;		_EXT_INT_Initialize
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           
  1144                           	psect	text12
  1145  000AA0                     __ptext12:
  1146                           	callstack 0
  1147  000AA0                     _INT0_SetInterruptHandler:
  1148                           	callstack 24
  1149  000AA0                     
  1150                           ;mcc_generated_files/ext_int.c: 53:     INT0_InterruptHandler = InterruptHandler;
  1151  000AA0  C00F  F00B         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  1152  000AA4  C010  F00C         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  1153  000AA8  0012               	return		;funcret
  1154  000AAA                     __end_of_INT0_SetInterruptHandler:
  1155                           	callstack 0
  1156                           
  1157 ;; *************** function _EUSART_Initialize *****************
  1158 ;; Defined at:
  1159 ;;		line 66 in file "mcc_generated_files/eusart.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;		None
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;		None
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      void 
  1166 ;; Registers used:
  1167 ;;		wreg, status,2, status,0, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1173 ;;      Params:         0       0       0       0       0       0       0       0       0
  1174 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1175 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1176 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1177 ;;Total ram usage:        0 bytes
  1178 ;; Hardware stack levels used: 1
  1179 ;; Hardware stack levels required when called: 5
  1180 ;; This function calls:
  1181 ;;		_EUSART_SetErrorHandler
  1182 ;;		_EUSART_SetFramingErrorHandler
  1183 ;;		_EUSART_SetOverrunErrorHandler
  1184 ;; This function is called by:
  1185 ;;		_SYSTEM_Initialize
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           	psect	text13
  1190  000904                     __ptext13:
  1191                           	callstack 0
  1192  000904                     _EUSART_Initialize:
  1193                           	callstack 24
  1194  000904                     
  1195                           ;mcc_generated_files/eusart.c: 71:     BAUD1CON = 0x08;
  1196  000904  0E08               	movlw	8
  1197  000906  6E9F               	movwf	159,c	;volatile
  1198                           
  1199                           ;mcc_generated_files/eusart.c: 74:     RC1STA = 0x90;
  1200  000908  0E90               	movlw	144
  1201  00090A  6E9D               	movwf	157,c	;volatile
  1202                           
  1203                           ;mcc_generated_files/eusart.c: 77:     TX1STA = 0x24;
  1204  00090C  0E24               	movlw	36
  1205  00090E  6E9E               	movwf	158,c	;volatile
  1206                           
  1207                           ;mcc_generated_files/eusart.c: 80:     SP1BRGL = 0x01;
  1208  000910  0E01               	movlw	1
  1209  000912  6E9B               	movwf	155,c	;volatile
  1210                           
  1211                           ;mcc_generated_files/eusart.c: 83:     SP1BRGH = 0x00;
  1212  000914  0E00               	movlw	0
  1213  000916  6E9C               	movwf	156,c	;volatile
  1214  000918                     
  1215                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  1216  000918  0E00               	movlw	0
  1217  00091A  6E0F               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
  1218  00091C  0E00               	movlw	0
  1219  00091E  6E10               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
  1220  000920  EC5A  F005         	call	_EUSART_SetFramingErrorHandler	;wreg free
  1221  000924                     
  1222                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  1223  000924  0E00               	movlw	0
  1224  000926  6E0F               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
  1225  000928  0E00               	movlw	0
  1226  00092A  6E10               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
  1227  00092C  EC55  F005         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  1228  000930                     
  1229                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  1230  000930  0E00               	movlw	0
  1231  000932  6E0F               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
  1232  000934  0E00               	movlw	0
  1233  000936  6E10               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
  1234  000938  EC5F  F005         	call	_EUSART_SetErrorHandler	;wreg free
  1235  00093C                     
  1236                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  1237  00093C  0E00               	movlw	0
  1238  00093E  6E14               	movwf	_eusartRxLastError^0,c	;volatile
  1239  000940  0012               	return		;funcret
  1240  000942                     __end_of_EUSART_Initialize:
  1241                           	callstack 0
  1242                           
  1243 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  1244 ;; Defined at:
  1245 ;;		line 161 in file "mcc_generated_files/eusart.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  1248 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  1249 ;; Auto vars:     Size  Location     Type
  1250 ;;		None
  1251 ;; Return value:  Size  Location     Type
  1252 ;;                  1    wreg      void 
  1253 ;; Registers used:
  1254 ;;		wreg, status,2, status,0
  1255 ;; Tracked objects:
  1256 ;;		On entry : 0/0
  1257 ;;		On exit  : 0/0
  1258 ;;		Unchanged: 0/0
  1259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1260 ;;      Params:         2       0       0       0       0       0       0       0       0
  1261 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1262 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1263 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1264 ;;Total ram usage:        2 bytes
  1265 ;; Hardware stack levels used: 1
  1266 ;; Hardware stack levels required when called: 4
  1267 ;; This function calls:
  1268 ;;		Nothing
  1269 ;; This function is called by:
  1270 ;;		_EUSART_Initialize
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           	psect	text14
  1275  000AAA                     __ptext14:
  1276                           	callstack 0
  1277  000AAA                     _EUSART_SetOverrunErrorHandler:
  1278                           	callstack 24
  1279  000AAA                     
  1280                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  1281  000AAA  C00F  F003         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  1282  000AAE  C010  F004         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  1283  000AB2  0012               	return		;funcret
  1284  000AB4                     __end_of_EUSART_SetOverrunErrorHandler:
  1285                           	callstack 0
  1286                           
  1287 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  1288 ;; Defined at:
  1289 ;;		line 157 in file "mcc_generated_files/eusart.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  1292 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;		None
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  1    wreg      void 
  1297 ;; Registers used:
  1298 ;;		wreg, status,2, status,0
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1304 ;;      Params:         2       0       0       0       0       0       0       0       0
  1305 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1306 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1307 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1308 ;;Total ram usage:        2 bytes
  1309 ;; Hardware stack levels used: 1
  1310 ;; Hardware stack levels required when called: 4
  1311 ;; This function calls:
  1312 ;;		Nothing
  1313 ;; This function is called by:
  1314 ;;		_EUSART_Initialize
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           	psect	text15
  1319  000AB4                     __ptext15:
  1320                           	callstack 0
  1321  000AB4                     _EUSART_SetFramingErrorHandler:
  1322                           	callstack 24
  1323  000AB4                     
  1324                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  1325  000AB4  C00F  F005         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  1326  000AB8  C010  F006         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  1327  000ABC  0012               	return		;funcret
  1328  000ABE                     __end_of_EUSART_SetFramingErrorHandler:
  1329                           	callstack 0
  1330                           
  1331 ;; *************** function _EUSART_SetErrorHandler *****************
  1332 ;; Defined at:
  1333 ;;		line 165 in file "mcc_generated_files/eusart.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  1336 ;;		 -> EUSART_DefaultErrorHandler(1), 
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;		None
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  1    wreg      void 
  1341 ;; Registers used:
  1342 ;;		wreg, status,2, status,0
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1348 ;;      Params:         2       0       0       0       0       0       0       0       0
  1349 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1350 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1351 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1352 ;;Total ram usage:        2 bytes
  1353 ;; Hardware stack levels used: 1
  1354 ;; Hardware stack levels required when called: 4
  1355 ;; This function calls:
  1356 ;;		Nothing
  1357 ;; This function is called by:
  1358 ;;		_EUSART_Initialize
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text16
  1363  000ABE                     __ptext16:
  1364                           	callstack 0
  1365  000ABE                     _EUSART_SetErrorHandler:
  1366                           	callstack 24
  1367  000ABE                     
  1368                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  1369  000ABE  C00F  F001         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  1370  000AC2  C010  F002         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  1371  000AC6  0012               	return		;funcret
  1372  000AC8                     __end_of_EUSART_SetErrorHandler:
  1373                           	callstack 0
  1374                           
  1375 ;; *************** function _ADCC_Initialize *****************
  1376 ;; Defined at:
  1377 ;;		line 62 in file "mcc_generated_files/adcc.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;		None
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;		None
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  1    wreg      void 
  1384 ;; Registers used:
  1385 ;;		wreg, status,2
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1391 ;;      Params:         0       0       0       0       0       0       0       0       0
  1392 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1393 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1394 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1395 ;;Total ram usage:        0 bytes
  1396 ;; Hardware stack levels used: 1
  1397 ;; Hardware stack levels required when called: 4
  1398 ;; This function calls:
  1399 ;;		Nothing
  1400 ;; This function is called by:
  1401 ;;		_SYSTEM_Initialize
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           	psect	text17
  1406  00086A                     __ptext17:
  1407                           	callstack 0
  1408  00086A                     _ADCC_Initialize:
  1409                           	callstack 25
  1410  00086A                     
  1411                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  1412  00086A  0E00               	movlw	0
  1413  00086C  6E6A               	movwf	106,c	;volatile
  1414                           
  1415                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  1416  00086E  0E00               	movlw	0
  1417  000870  6E6B               	movwf	107,c	;volatile
  1418                           
  1419                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  1420  000872  0E00               	movlw	0
  1421  000874  6E6C               	movwf	108,c	;volatile
  1422                           
  1423                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  1424  000876  0E00               	movlw	0
  1425  000878  6E6D               	movwf	109,c	;volatile
  1426                           
  1427                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  1428  00087A  0E00               	movlw	0
  1429  00087C  6E68               	movwf	104,c	;volatile
  1430                           
  1431                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  1432  00087E  0E00               	movlw	0
  1433  000880  6E69               	movwf	105,c	;volatile
  1434                           
  1435                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
  1436  000882  0E00               	movlw	0
  1437  000884  6E66               	movwf	102,c	;volatile
  1438                           
  1439                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x00;
  1440  000886  0E00               	movlw	0
  1441  000888  010F               	movlb	15	; () banked
  1442  00088A  6F5F               	movwf	95,b	;volatile
  1443                           
  1444                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
  1445  00088C  0E00               	movlw	0
  1446  00088E  6F5D               	movwf	93,b	;volatile
  1447                           
  1448                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
  1449  000890  0E00               	movlw	0
  1450  000892  6F5E               	movwf	94,b	;volatile
  1451                           
  1452                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
  1453  000894  0E00               	movlw	0
  1454  000896  6F59               	movwf	89,b	;volatile
  1455                           
  1456                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x02;
  1457  000898  0E02               	movlw	2
  1458  00089A  6F5A               	movwf	90,b	;volatile
  1459                           
  1460                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
  1461  00089C  0E00               	movlw	0
  1462  00089E  6F5B               	movwf	91,b	;volatile
  1463                           
  1464                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
  1465  0008A0  0E00               	movlw	0
  1466  0008A2  6E65               	movwf	101,c	;volatile
  1467                           
  1468                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
  1469  0008A4  0E00               	movlw	0
  1470  0008A6  6F58               	movwf	88,b	;volatile
  1471                           
  1472                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
  1473  0008A8  0E00               	movlw	0
  1474  0008AA  6F56               	movwf	86,b	;volatile
  1475                           
  1476                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x00;
  1477  0008AC  0E00               	movlw	0
  1478  0008AE  6F57               	movwf	87,b	;volatile
  1479                           
  1480                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x84;
  1481  0008B0  0E84               	movlw	132
  1482  0008B2  6E60               	movwf	96,c	;volatile
  1483                           
  1484                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x00;
  1485  0008B4  0E00               	movlw	0
  1486  0008B6  6F5C               	movwf	92,b	;volatile
  1487  0008B8                     
  1488                           ; BSR set to: 15
  1489  0008B8  0012               	return		;funcret
  1490  0008BA                     __end_of_ADCC_Initialize:
  1491                           	callstack 0
  1492                           
  1493 ;; *************** function _INTERRUPT_InterruptManager *****************
  1494 ;; Defined at:
  1495 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;		None
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;		None
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  1    wreg      void 
  1502 ;; Registers used:
  1503 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1509 ;;      Params:         0       0       0       0       0       0       0       0       0
  1510 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1511 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1512 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1513 ;;Total ram usage:        2 bytes
  1514 ;; Hardware stack levels used: 1
  1515 ;; Hardware stack levels required when called: 3
  1516 ;; This function calls:
  1517 ;;		_INT0_ISR
  1518 ;;		_INT1_ISR
  1519 ;; This function is called by:
  1520 ;;		Interrupt level 2
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           	psect	intcode
  1525  000008                     __pintcode:
  1526                           	callstack 0
  1527  000008                     _INTERRUPT_InterruptManager:
  1528                           	callstack 24
  1529                           
  1530                           ; BSR set to: 15
  1531                           ;incstack = 0
  1532  000008  8215               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1533  00000A  CFFA F00D          	movff	pclath,??_INTERRUPT_InterruptManager
  1534  00000E  CFFB F00E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1535  000012                     
  1536                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.INT0IE == 1 && PIR0bits.IN
      +                          T0IF == 1)
  1537  000012  010E               	movlb	14	; () banked
  1538  000014  A1C2               	btfss	194,0,b	;volatile
  1539  000016  EF0F  F000         	goto	i2u16_41
  1540  00001A  EF11  F000         	goto	i2u16_40
  1541  00001E                     i2u16_41:
  1542  00001E  EF1C  F000         	goto	i2l425
  1543  000022                     i2u16_40:
  1544  000022                     
  1545                           ; BSR set to: 14
  1546  000022  A1CA               	btfss	202,0,b	;volatile
  1547  000024  EF16  F000         	goto	i2u17_41
  1548  000028  EF18  F000         	goto	i2u17_40
  1549  00002C                     i2u17_41:
  1550  00002C  EF1C  F000         	goto	i2l425
  1551  000030                     i2u17_40:
  1552  000030                     
  1553                           ; BSR set to: 14
  1554                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         INT0_ISR();
  1555  000030  EC69  F005         	call	_INT0_ISR	;wreg free
  1556                           
  1557                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  1558  000034  EF2C  F000         	goto	i2l429
  1559  000038                     i2l425:
  1560                           
  1561                           ; BSR set to: 14
  1562  000038  A3C2               	btfss	194,1,b	;volatile
  1563  00003A  EF21  F000         	goto	i2u18_41
  1564  00003E  EF23  F000         	goto	i2u18_40
  1565  000042                     i2u18_41:
  1566  000042  EF2C  F000         	goto	i2l429
  1567  000046                     i2u18_40:
  1568  000046                     
  1569                           ; BSR set to: 14
  1570  000046  A3CA               	btfss	202,1,b	;volatile
  1571  000048  EF28  F000         	goto	i2u19_41
  1572  00004C  EF2A  F000         	goto	i2u19_40
  1573  000050                     i2u19_41:
  1574  000050  EF2C  F000         	goto	i2l429
  1575  000054                     i2u19_40:
  1576  000054                     
  1577                           ; BSR set to: 14
  1578                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         INT1_ISR();
  1579  000054  EC64  F005         	call	_INT1_ISR	;wreg free
  1580  000058                     i2l429:
  1581  000058  C00E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1582  00005C  C00D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1583  000060  9215               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1584  000062  0011               	retfie		f
  1585  000064                     __end_of_INTERRUPT_InterruptManager:
  1586                           	callstack 0
  1587                           
  1588 ;; *************** function _INT1_ISR *****************
  1589 ;; Defined at:
  1590 ;;		line 60 in file "mcc_generated_files/ext_int.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;		None
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;		None
  1595 ;; Return value:  Size  Location     Type
  1596 ;;                  1    wreg      void 
  1597 ;; Registers used:
  1598 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1599 ;; Tracked objects:
  1600 ;;		On entry : 0/0
  1601 ;;		On exit  : 0/0
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1604 ;;      Params:         0       0       0       0       0       0       0       0       0
  1605 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1606 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1607 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1608 ;;Total ram usage:        0 bytes
  1609 ;; Hardware stack levels used: 1
  1610 ;; Hardware stack levels required when called: 2
  1611 ;; This function calls:
  1612 ;;		_INT1_CallBack
  1613 ;; This function is called by:
  1614 ;;		_INTERRUPT_InterruptManager
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           	psect	text19
  1619  000AC8                     __ptext19:
  1620                           	callstack 0
  1621  000AC8                     _INT1_ISR:
  1622                           	callstack 24
  1623  000AC8                     
  1624                           ;mcc_generated_files/ext_int.c: 62:     (PIR0bits.INT1IF = 0);
  1625  000AC8  010E               	movlb	14	; () banked
  1626  000ACA  93CA               	bcf	202,1,b	;volatile
  1627  000ACC                     
  1628                           ; BSR set to: 14
  1629                           ;mcc_generated_files/ext_int.c: 65:     INT1_CallBack();
  1630  000ACC  ECBF  F004         	call	_INT1_CallBack	;wreg free
  1631  000AD0  0012               	return		;funcret
  1632  000AD2                     __end_of_INT1_ISR:
  1633                           	callstack 0
  1634                           
  1635 ;; *************** function _INT1_CallBack *****************
  1636 ;; Defined at:
  1637 ;;		line 69 in file "mcc_generated_files/ext_int.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;		None
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;		None
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  1    wreg      void 
  1644 ;; Registers used:
  1645 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1651 ;;      Params:         0       0       0       0       0       0       0       0       0
  1652 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1653 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1654 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1655 ;;Total ram usage:        0 bytes
  1656 ;; Hardware stack levels used: 1
  1657 ;; Hardware stack levels required when called: 1
  1658 ;; This function calls:
  1659 ;;		Absolute function
  1660 ;;		_INT1_DefaultInterruptHandler
  1661 ;; This function is called by:
  1662 ;;		_INT1_ISR
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           	psect	text20
  1667  00097E                     __ptext20:
  1668                           	callstack 0
  1669  00097E                     _INT1_CallBack:
  1670                           	callstack 24
  1671  00097E                     
  1672                           ;mcc_generated_files/ext_int.c: 72:     if(INT1_InterruptHandler)
  1673  00097E  5009               	movf	_INT1_InterruptHandler^0,w,c
  1674  000980  100A               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
  1675  000982  B4D8               	btfsc	status,2,c
  1676  000984  EFC6  F004         	goto	i2u3_41
  1677  000988  EFC8  F004         	goto	i2u3_40
  1678  00098C                     i2u3_41:
  1679  00098C  EFD5  F004         	goto	i2l38
  1680  000990                     i2u3_40:
  1681  000990                     
  1682                           ;mcc_generated_files/ext_int.c: 73:     {;mcc_generated_files/ext_int.c: 74:         INT
      +                          1_InterruptHandler();
  1683  000990  D802               	call	i2u4_48
  1684  000992  EFD5  F004         	goto	i2u4_49
  1685  000996                     i2u4_48:
  1686  000996  0005               	push	
  1687  000998  6EFA               	movwf	pclath,c
  1688  00099A  5009               	movf	_INT1_InterruptHandler^0,w,c
  1689  00099C  6EFD               	movwf	tosl,c
  1690  00099E  500A               	movf	(_INT1_InterruptHandler+1)^0,w,c
  1691  0009A0  6EFE               	movwf	tosh,c
  1692  0009A2  50F8               	movf	tblptru,w,c
  1693  0009A4  6EFF               	movwf	tosu,c
  1694  0009A6  50FA               	movf	pclath,w,c
  1695  0009A8  0012               	return		;indir
  1696  0009AA                     i2u4_49:
  1697  0009AA                     i2l38:
  1698  0009AA  0012               	return		;funcret
  1699  0009AC                     __end_of_INT1_CallBack:
  1700                           	callstack 0
  1701                           
  1702 ;; *************** function _INT1_DefaultInterruptHandler *****************
  1703 ;; Defined at:
  1704 ;;		line 82 in file "mcc_generated_files/ext_int.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;		None
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;		None
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      void 
  1711 ;; Registers used:
  1712 ;;		None
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1718 ;;      Params:         0       0       0       0       0       0       0       0       0
  1719 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1720 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1721 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1722 ;;Total ram usage:        0 bytes
  1723 ;; Hardware stack levels used: 1
  1724 ;; This function calls:
  1725 ;;		Nothing
  1726 ;; This function is called by:
  1727 ;;		_EXT_INT_Initialize
  1728 ;;		_INT1_CallBack
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text21
  1733  000AE0                     __ptext21:
  1734                           	callstack 0
  1735  000AE0                     _INT1_DefaultInterruptHandler:
  1736                           	callstack 24
  1737  000AE0  0012               	return		;funcret
  1738  000AE2                     __end_of_INT1_DefaultInterruptHandler:
  1739                           	callstack 0
  1740                           
  1741 ;; *************** function _INT0_ISR *****************
  1742 ;; Defined at:
  1743 ;;		line 34 in file "mcc_generated_files/ext_int.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;		None
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;		None
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  1    wreg      void 
  1750 ;; Registers used:
  1751 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1757 ;;      Params:         0       0       0       0       0       0       0       0       0
  1758 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1759 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1760 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1761 ;;Total ram usage:        0 bytes
  1762 ;; Hardware stack levels used: 1
  1763 ;; Hardware stack levels required when called: 2
  1764 ;; This function calls:
  1765 ;;		_INT0_CallBack
  1766 ;; This function is called by:
  1767 ;;		_INTERRUPT_InterruptManager
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           	psect	text22
  1772  000AD2                     __ptext22:
  1773                           	callstack 0
  1774  000AD2                     _INT0_ISR:
  1775                           	callstack 24
  1776  000AD2                     
  1777                           ;mcc_generated_files/ext_int.c: 36:     (PIR0bits.INT0IF = 0);
  1778  000AD2  010E               	movlb	14	; () banked
  1779  000AD4  91CA               	bcf	202,0,b	;volatile
  1780  000AD6                     
  1781                           ; BSR set to: 14
  1782                           ;mcc_generated_files/ext_int.c: 39:     INT0_CallBack();
  1783  000AD6  ECD6  F004         	call	_INT0_CallBack	;wreg free
  1784  000ADA  0012               	return		;funcret
  1785  000ADC                     __end_of_INT0_ISR:
  1786                           	callstack 0
  1787                           
  1788 ;; *************** function _INT0_CallBack *****************
  1789 ;; Defined at:
  1790 ;;		line 43 in file "mcc_generated_files/ext_int.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;		None
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;		None
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  1    wreg      void 
  1797 ;; Registers used:
  1798 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1804 ;;      Params:         0       0       0       0       0       0       0       0       0
  1805 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1806 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1807 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1808 ;;Total ram usage:        0 bytes
  1809 ;; Hardware stack levels used: 1
  1810 ;; Hardware stack levels required when called: 1
  1811 ;; This function calls:
  1812 ;;		Absolute function
  1813 ;;		_INT0_DefaultInterruptHandler
  1814 ;; This function is called by:
  1815 ;;		_INT0_ISR
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           	psect	text23
  1820  0009AC                     __ptext23:
  1821                           	callstack 0
  1822  0009AC                     _INT0_CallBack:
  1823                           	callstack 24
  1824  0009AC                     
  1825                           ;mcc_generated_files/ext_int.c: 46:     if(INT0_InterruptHandler)
  1826  0009AC  500B               	movf	_INT0_InterruptHandler^0,w,c
  1827  0009AE  100C               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
  1828  0009B0  B4D8               	btfsc	status,2,c
  1829  0009B2  EFDD  F004         	goto	i2u1_41
  1830  0009B6  EFDF  F004         	goto	i2u1_40
  1831  0009BA                     i2u1_41:
  1832  0009BA  EFEC  F004         	goto	i2l25
  1833  0009BE                     i2u1_40:
  1834  0009BE                     
  1835                           ;mcc_generated_files/ext_int.c: 47:     {;mcc_generated_files/ext_int.c: 48:         INT
      +                          0_InterruptHandler();
  1836  0009BE  D802               	call	i2u2_48
  1837  0009C0  EFEC  F004         	goto	i2u2_49
  1838  0009C4                     i2u2_48:
  1839  0009C4  0005               	push	
  1840  0009C6  6EFA               	movwf	pclath,c
  1841  0009C8  500B               	movf	_INT0_InterruptHandler^0,w,c
  1842  0009CA  6EFD               	movwf	tosl,c
  1843  0009CC  500C               	movf	(_INT0_InterruptHandler+1)^0,w,c
  1844  0009CE  6EFE               	movwf	tosh,c
  1845  0009D0  50F8               	movf	tblptru,w,c
  1846  0009D2  6EFF               	movwf	tosu,c
  1847  0009D4  50FA               	movf	pclath,w,c
  1848  0009D6  0012               	return		;indir
  1849  0009D8                     i2u2_49:
  1850  0009D8                     i2l25:
  1851  0009D8  0012               	return		;funcret
  1852  0009DA                     __end_of_INT0_CallBack:
  1853                           	callstack 0
  1854                           
  1855 ;; *************** function _INT0_DefaultInterruptHandler *****************
  1856 ;; Defined at:
  1857 ;;		line 56 in file "mcc_generated_files/ext_int.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;		None
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;		None
  1862 ;; Return value:  Size  Location     Type
  1863 ;;                  1    wreg      void 
  1864 ;; Registers used:
  1865 ;;		None
  1866 ;; Tracked objects:
  1867 ;;		On entry : 0/0
  1868 ;;		On exit  : 0/0
  1869 ;;		Unchanged: 0/0
  1870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1871 ;;      Params:         0       0       0       0       0       0       0       0       0
  1872 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1873 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1874 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1875 ;;Total ram usage:        0 bytes
  1876 ;; Hardware stack levels used: 1
  1877 ;; This function calls:
  1878 ;;		Nothing
  1879 ;; This function is called by:
  1880 ;;		_EXT_INT_Initialize
  1881 ;;		_INT0_CallBack
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885                           	psect	text24
  1886  000AE2                     __ptext24:
  1887                           	callstack 0
  1888  000AE2                     _INT0_DefaultInterruptHandler:
  1889                           	callstack 24
  1890  000AE2  0012               	return		;funcret
  1891  000AE4                     __end_of_INT0_DefaultInterruptHandler:
  1892                           	callstack 0
  1893                           
  1894                           	psect	text25
  1895  000000                     __ptext25:
  1896                           	callstack 0
  1897  000000                     
  1898                           	psect	rparam
  1899  0000                     
  1900                           	psect	temp
  1901  000015                     btemp:
  1902                           	callstack 0
  1903  000015                     	ds	1
  1904  0000                     int$flags	set	btemp
  1905  0000                     wtemp8	set	btemp+1
  1906  0000                     ttemp5	set	btemp+1
  1907  0000                     ttemp6	set	btemp+4
  1908  0000                     ttemp7	set	btemp+8
  1909                           
  1910                           	psect	idloc
  1911                           
  1912                           ;Config register IDLOC0 @ 0x200000
  1913                           ;	unspecified, using default values
  1914  200000                     	org	2097152
  1915  200000  0FFF               	dw	4095
  1916                           
  1917                           ;Config register IDLOC1 @ 0x200002
  1918                           ;	unspecified, using default values
  1919  200002                     	org	2097154
  1920  200002  0FFF               	dw	4095
  1921                           
  1922                           ;Config register IDLOC2 @ 0x200004
  1923                           ;	unspecified, using default values
  1924  200004                     	org	2097156
  1925  200004  0FFF               	dw	4095
  1926                           
  1927                           ;Config register IDLOC3 @ 0x200006
  1928                           ;	unspecified, using default values
  1929  200006                     	org	2097158
  1930  200006  0FFF               	dw	4095
  1931                           
  1932                           ;Config register IDLOC4 @ 0x200008
  1933                           ;	unspecified, using default values
  1934  200008                     	org	2097160
  1935  200008  0FFF               	dw	4095
  1936                           
  1937                           ;Config register IDLOC5 @ 0x20000A
  1938                           ;	unspecified, using default values
  1939  20000A                     	org	2097162
  1940  20000A  0FFF               	dw	4095
  1941                           
  1942                           ;Config register IDLOC6 @ 0x20000C
  1943                           ;	unspecified, using default values
  1944  20000C                     	org	2097164
  1945  20000C  0FFF               	dw	4095
  1946                           
  1947                           ;Config register IDLOC7 @ 0x20000E
  1948                           ;	unspecified, using default values
  1949  20000E                     	org	2097166
  1950  20000E  0FFF               	dw	4095
  1951                           
  1952                           	psect	config
  1953                           
  1954                           ;Config register CONFIG1L @ 0x300000
  1955                           ;	External Oscillator mode Selection bits
  1956                           ;	FEXTOSC = OFF, Oscillator not enabled
  1957                           ;	Power-up default value for COSC bits
  1958                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1959  300000                     	org	3145728
  1960  300000  FC                 	db	252
  1961                           
  1962                           ;Config register CONFIG1H @ 0x300001
  1963                           ;	Clock Out Enable bit
  1964                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1965                           ;	Clock Switch Enable bit
  1966                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1967                           ;	Fail-Safe Clock Monitor Enable bit
  1968                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1969  300001                     	org	3145729
  1970  300001  FF                 	db	255
  1971                           
  1972                           ;Config register CONFIG2L @ 0x300002
  1973                           ;	Master Clear Enable bit
  1974                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1975                           ;	Power-up Timer Enable bit
  1976                           ;	PWRTE = OFF, Power up timer disabled
  1977                           ;	Low-power BOR enable bit
  1978                           ;	LPBOREN = OFF, ULPBOR disabled
  1979                           ;	Brown-out Reset Enable bits
  1980                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1981  300002                     	org	3145730
  1982  300002  FF                 	db	255
  1983                           
  1984                           ;Config register CONFIG2H @ 0x300003
  1985                           ;	Brown Out Reset Voltage selection bits
  1986                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  1987                           ;	ZCD Disable bit
  1988                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1989                           ;	PPSLOCK bit One-Way Set Enable bit
  1990                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  1991                           ;	Stack Full/Underflow Reset Enable bit
  1992                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1993                           ;	Debugger Enable bit
  1994                           ;	DEBUG = OFF, Background debugger disabled
  1995                           ;	Extended Instruction Set Enable bit
  1996                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1997  300003                     	org	3145731
  1998  300003  FF                 	db	255
  1999                           
  2000                           ;Config register CONFIG3L @ 0x300004
  2001                           ;	WDT Period Select bits
  2002                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2003                           ;	WDT operating mode
  2004                           ;	WDTE = OFF, WDT Disabled
  2005  300004                     	org	3145732
  2006  300004  9F                 	db	159
  2007                           
  2008                           ;Config register CONFIG3H @ 0x300005
  2009                           ;	WDT Window Select bits
  2010                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2011                           ;	WDT input clock selector
  2012                           ;	WDTCCS = SC, Software Control
  2013  300005                     	org	3145733
  2014  300005  FF                 	db	255
  2015                           
  2016                           ;Config register CONFIG4L @ 0x300006
  2017                           ;	Write Protection Block 0
  2018                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  2019                           ;	Write Protection Block 1
  2020                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2021                           ;	Write Protection Block 2
  2022                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2023                           ;	Write Protection Block 3
  2024                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2025  300006                     	org	3145734
  2026  300006  FF                 	db	255
  2027                           
  2028                           ;Config register CONFIG4H @ 0x300007
  2029                           ;	Configuration Register Write Protection bit
  2030                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  2031                           ;	Boot Block Write Protection bit
  2032                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2033                           ;	Data EEPROM Write Protection bit
  2034                           ;	WRTD = OFF, Data EEPROM not write-protected
  2035                           ;	Scanner Enable bit
  2036                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  2037                           ;	Low Voltage Programming Enable bit
  2038                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  2039  300007                     	org	3145735
  2040  300007  FF                 	db	255
  2041                           
  2042                           ;Config register CONFIG5L @ 0x300008
  2043                           ;	UserNVM Program Memory Code Protection bit
  2044                           ;	CP = OFF, UserNVM code protection disabled
  2045                           ;	DataNVM Memory Code Protection bit
  2046                           ;	CPD = OFF, DataNVM code protection disabled
  2047  300008                     	org	3145736
  2048  300008  FF                 	db	255
  2049                           
  2050                           ;Config register CONFIG5H @ 0x300009
  2051                           ;	unspecified, using default values
  2052  300009                     	org	3145737
  2053  300009  FF                 	db	255
  2054                           
  2055                           ;Config register CONFIG6L @ 0x30000A
  2056                           ;	Table Read Protection Block 0
  2057                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2058                           ;	Table Read Protection Block 1
  2059                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2060                           ;	Table Read Protection Block 2
  2061                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2062                           ;	Table Read Protection Block 3
  2063                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2064  30000A                     	org	3145738
  2065  30000A  FF                 	db	255
  2066                           
  2067                           ;Config register CONFIG6H @ 0x30000B
  2068                           ;	Boot Block Table Read Protection bit
  2069                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2070  30000B                     	org	3145739
  2071  30000B  FF                 	db	255
  2072                           tosu	equ	0xFFF
  2073                           tosh	equ	0xFFE
  2074                           tosl	equ	0xFFD
  2075                           stkptr	equ	0xFFC
  2076                           pclatu	equ	0xFFB
  2077                           pclath	equ	0xFFA
  2078                           pcl	equ	0xFF9
  2079                           tblptru	equ	0xFF8
  2080                           tblptrh	equ	0xFF7
  2081                           tblptrl	equ	0xFF6
  2082                           tablat	equ	0xFF5
  2083                           prodh	equ	0xFF4
  2084                           prodl	equ	0xFF3
  2085                           indf0	equ	0xFEF
  2086                           postinc0	equ	0xFEE
  2087                           postdec0	equ	0xFED
  2088                           preinc0	equ	0xFEC
  2089                           plusw0	equ	0xFEB
  2090                           fsr0h	equ	0xFEA
  2091                           fsr0l	equ	0xFE9
  2092                           wreg	equ	0xFE8
  2093                           indf1	equ	0xFE7
  2094                           postinc1	equ	0xFE6
  2095                           postdec1	equ	0xFE5
  2096                           preinc1	equ	0xFE4
  2097                           plusw1	equ	0xFE3
  2098                           fsr1h	equ	0xFE2
  2099                           fsr1l	equ	0xFE1
  2100                           bsr	equ	0xFE0
  2101                           indf2	equ	0xFDF
  2102                           postinc2	equ	0xFDE
  2103                           postdec2	equ	0xFDD
  2104                           preinc2	equ	0xFDC
  2105                           plusw2	equ	0xFDB
  2106                           fsr2h	equ	0xFDA
  2107                           fsr2l	equ	0xFD9
  2108                           status	equ	0xFD8

Data Sizes:
    Strings     7
    Constant    0
    Data        0
    BSS         1
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      7      20
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sendUartStr@TxData	PTR unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    main@TestTxData	PTR unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    _main->_sendUartStr
    _sendUartStr->_EUSART_Write
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     747
                                              5 COMRAM     2     2      0
                  _SYSTEM_Initialize
                        _sendUartStr
 ---------------------------------------------------------------------------------
 (1) _sendUartStr                                          2     0      2     136
                                              3 COMRAM     2     0      2
                       _EUSART_Write
                  _EUSART_is_tx_done
 ---------------------------------------------------------------------------------
 (2) _EUSART_is_tx_done                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     588
                    _ADCC_Initialize
                  _EUSART_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     294
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0       0
                                              0 COMRAM     2     2      0
                           _INT0_ISR
                           _INT1_ISR
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT1_CallBack                                        0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT0_CallBack                                        0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _sendUartStr
     _EUSART_Write
     _EUSART_is_tx_done

 _INTERRUPT_InterruptManager (ROOT)
   _INT0_ISR
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      7      14       1       21.3%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      14      18        0.0%
DATA                 0      0      14       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jan 06 01:16:46 2022

                                           l41 0A9E                                             l28 0AA8  
                                           l60 097C                                             l54 0A94  
                                           u50 0A88                                             u51 0A82  
                                           u60 0A46                                             u61 0A42  
                                           u56 0A8A                                            l133 08B8  
                                          l302 0940                                            l313 0A8A  
                                          l420 0ADE                                            l404 0868  
                                          l341 0ABC                                            l253 0A16  
                                          l326 0A36                                            l344 0AB2  
                                          l256 0A62                                            l512 0902  
                                          l329 0A4A                                            l347 0AC6  
                                          l259 0A32                                            u280 08D2  
                                          u281 08CE                                            u290 0902  
                                          u291 08FE                     ??_INT0_SetInterruptHandler 0011  
               ?_EUSART_SetFramingErrorHandler 000F                        __size_of_PMD_Initialize 001C  
                                          tosl 000FFD                                  _INT0_CallBack 09AC  
                                _INT1_CallBack 097E                                           l1230 080A  
                                         l1224 086A                                           l1240 0848  
                                         l1232 0816                                           l1226 0ADC  
                                         l1250 0A4C                                           l1242 084A  
                                         l1234 0818                                           l1244 084C  
                                         l1236 0828                                           l1228 0A18  
                                         l1246 084E                                           l1238 0846  
                                         l1262 0A78                                           l1600 0968  
                                         l1248 0850                                           l1610 0924  
                                         l1602 096C                                           l1266 0A36  
                                         l1612 0930                                           l1604 096E  
                                         l1620 0A02                                           l1268 0A46  
                                         l1614 093C                                           l1606 0904  
                                         l1622 0A06                                           l1630 08BA  
                                         l1608 0918                                           l1624 0A0A  
                                         l1616 09FA                                           l1632 08BE  
                                         l1640 09DA                                           l1626 0A0E  
                                         l1618 09FE                                           l1634 08D2  
                                         l1642 09DE                                           l1580 0A96  
                                         l1628 0A12                                           l1636 08E2  
                                         l1644 09E6                                           l1582 0A8C  
                                         l1590 0942                                           l1638 08E6  
                                         l1584 0AB4                                           l1592 0948  
                                         l1586 0AAA                                           l1578 0AA0  
                                         l1594 0954                                           l1588 0ABE  
                                         l1596 0958                                           l1598 095A  
                                         STR_1 0801                                           _LATA 000F83  
                                         _LATB 000F84                                           _LATC 000F85  
                                         _PMD0 000EE1                                           _PMD1 000EE2  
                                         _PMD2 000EE3                                           _PMD3 000EE4  
                                         _PMD4 000EE5                                           _PMD5 000EE6  
                                         i2l21 0ADA                                           i2l31 0AE2  
                                         i2l25 09D8                                           i2l34 0AD0  
                                         i2l44 0AE0                                           i2l38 09AA  
                                         _WPUA 000F10                                           _WPUB 000F18  
                                         _WPUC 000F20                                           _WPUE 000F2D  
                                         _main 09DA                                           btemp 0015  
            __size_of_INT2_SetInterruptHandler 000A                      ?_INT2_SetInterruptHandler 000F  
                                         start 0064                                   ___param_bank 000000  
                             __end_of_INT0_ISR 0ADC                               __end_of_INT1_ISR 0AD2  
                                ?_EUSART_Write 000D                 __size_of_OSCILLATOR_Initialize 0018  
                __end_of_OSCILLATOR_Initialize 0A64                                          _ADACQ 000F5C  
                                        _ADCAP 000F5D                                          _ADACT 000F56  
                                        ?_main 000D                                          _ADCLK 000F57  
                                        _ADCNT 000F67                                          _ADPCH 000F5F  
                                        _ADREF 000F58                                          _ADPRE 000F5E  
                                        _ADRPT 000F66                                          i2l425 0038  
                                        i2l429 0058                                          _OSCEN 000EDC  
                                        _TRISA 000F88                                          _TRISB 000F89  
                               ?_INT0_CallBack 000D                                          _TRISC 000F8A  
                                        _RXPPS 000EB5                                 ?_INT1_CallBack 000D  
               ??_INT1_DefaultInterruptHandler 000D                       _INT1_SetInterruptHandler 0A96  
                                        pclath 000FFA                                          tablat 000FF5  
                                        nvmcon 000F81                                          ttemp5 0016  
                                        ttemp6 0019                                          ttemp7 001D  
                                        status 000FD8                                          wtemp8 0016  
                              __initialization 0A64                                   __end_of_main 09FA  
                               ??_EUSART_Write 000F                    ?_INTERRUPT_InterruptManager 000D  
                                       ??_main 0012                                  __activetblptr 000002  
                                 ?_sendUartStr 0010                                         _ADACCH 000F71  
                                       _ADACCL 000F70              _EUSART_DefaultFramingErrorHandler 000000  
                                       _ADCON0 000F60                                         _ADCON1 000F59  
                                       _ADCON2 000F5A                                         _ADCON3 000F5B  
                   _EUSART_OverrunErrorHandler 0003                                         _ADERRH 000F6F  
                                       _ADERRL 000F6E                                         _ADLTHH 000F6B  
                                       _ADLTHL 000F6A                                         _ADRESH 000F64  
                                       _ADRESL 000F63                                         _ADSTAT 000F65  
                                       _ADUTHH 000F6D                                         _ADUTHL 000F6C  
                                       _ANSELA 000F11                                         _ANSELB 000F19  
                                       _ANSELC 000F21                                 main@TestTxData 0012  
                                       _RC1REG 000F99                                         _RC1STA 000F9D  
                                       _ODCONA 000F0F                                         _ODCONB 000F17  
                                       _ODCONC 000F1F                                         _RC6PPS 000EFD  
                                       i2l1200 09AC                                         i2l1202 09BE  
                                       i2l1204 097E                                         i2l1206 0990  
                                       i2l1270 0AD2                                         i2l1272 0AD6  
                                       i2l1440 0030                                         i2l1274 0AC8  
                                       i2l1442 0046                                         i2l1276 0ACC  
                                       i2l1444 0054                                         i2l1436 0012  
                                       i2l1438 0022                                         _INLVLA 000F0D  
                                       _INLVLB 000F15                                         _INLVLC 000F1D  
                                       _INLVLE 000F2A                                         _TABLAT 000FF5  
                                       _OSCFRQ 000EDE                                         _NVMDAT 000F80  
                                       _TX1REG 000F9A                                         i2u1_40 09BE  
                                       i2u1_41 09BA                                         i2u2_48 09C4  
                                       i2u3_40 0990                                         i2u2_49 09D8  
                                       i2u3_41 098C                                         _TX1STA 000F9E  
                                       i2u4_48 0996                                         i2u4_49 09AA  
                                       isa$std 000001                                ??_INT0_CallBack 000D  
                              _ADCC_Initialize 086A                                 _PMD_Initialize 0A18  
                 _INT2_DefaultInterruptHandler 000000                                ??_INT1_CallBack 000D  
                                 __mediumconst 0000                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         tblptru 000FF8  
     INT2_SetInterruptHandler@InterruptHandler 000F       INT1_SetInterruptHandler@InterruptHandler 000F  
     INT0_SetInterruptHandler@InterruptHandler 000F                  __size_of_INTERRUPT_Initialize 0004  
                            _SYSTEM_Initialize 09FA                                     __accesstop 0060  
                      __end_of__initialization 0A6A                                      ?_INT0_ISR 000D  
                                    ?_INT1_ISR 000D                             ?_SYSTEM_Initialize 000D  
                                ___rparam_used 000001                                 __pcstackCOMRAM 000D  
                          ??_SYSTEM_Initialize 0011                         __end_of_PMD_Initialize 0A34  
                  __size_of_EXT_INT_Initialize 003C               __end_of_INT2_SetInterruptHandler 0A96  
              ??_EUSART_SetOverrunErrorHandler 0011                      __end_of_SYSTEM_Initialize 0A18  
                         __end_of_EUSART_Write 0A4C                          _INT0_InterruptHandler 000B  
                                   ??_INT0_ISR 000D                                     ??_INT1_ISR 000D  
                                   __pnvCOMRAM 0001                        __end_of_ADCC_Initialize 08BA  
                                      _ADFLTRH 000F73                                        _ADFLTRL 000F72  
                                      _ADPREVH 000F62                                        _ADPREVL 000F61  
                                      _ADSTPTH 000F69                                        _ADSTPTL 000F68  
                              ?_PMD_Initialize 000D                     ??_INT1_SetInterruptHandler 0011  
                                      _INT0PPS 000EA1                                        _INT1PPS 000EA2  
                                      _SP1BRGH 000F9C                                        _SP1BRGL 000F9B  
                                      _OSCCON1 000ED8                                        _OSCCON3 000EDA  
                                      _TBLPTRH 000FF7                                        _TBLPTRL 000FF6  
                                      _TBLPTRU 000FF8                                        i2u16_40 0022  
                                      i2u16_41 001E                                        i2u17_40 0030  
                                      i2u17_41 002C                                        i2u18_40 0046  
                                      i2u18_41 0042                                        i2u19_40 0054  
                                      i2u19_41 0050                                        _NVMADRL 000F7E  
                                      _OSCTUNE 000EDD                                        _NVMCON2 000F82  
                         __size_of_sendUartStr 004A                                        _SLRCONA 000F0E  
                                      _SLRCONB 000F16                                        _SLRCONC 000F1E  
                     ??_EUSART_SetErrorHandler 0011              __size_of_INT0_SetInterruptHandler 000A  
                    ?_INT0_SetInterruptHandler 000F                                        __Hparam 0000  
                                      __Lparam 0000                                   __psmallconst 0800  
                                      __pcinit 0A64                                        __ramtop 0800  
                                      __ptext0 09DA                                        __ptext1 08BA  
                                      __ptext2 0A78                                        __ptext3 0A34  
                                      __ptext4 09FA                                        __ptext5 0A18  
                                      __ptext6 080A                                        __ptext7 0A4C  
                                      __ptext8 0ADC                                        __ptext9 0942  
                        _OSCILLATOR_Initialize 0A4C                       ??_PIN_MANAGER_Initialize 000F  
                   __size_of_SYSTEM_Initialize 001E                           end_of_initialization 0A6A  
                     _INT2_SetInterruptHandler 0A8C          __end_of_EUSART_SetOverrunErrorHandler 0AB4  
       __size_of_EUSART_SetOverrunErrorHandler 000A                  _EUSART_SetOverrunErrorHandler 0AAA  
                                __Lmediumconst 0000                              _EUSART_Initialize 0904  
                           ?_EUSART_Initialize 000D                               ?_ADCC_Initialize 000D  
                          ??_EUSART_Initialize 0011                          _INT1_InterruptHandler 0009  
                        __size_of_EUSART_Write 0018                __size_of_EUSART_SetErrorHandler 000A  
                    __end_of_EUSART_Initialize 0942                              __size_of_INT0_ISR 000A  
                            __size_of_INT1_ISR 000A                   __end_of_INTERRUPT_Initialize 0AE0  
         __end_of_INT0_DefaultInterruptHandler 0AE4          __size_of_INT0_DefaultInterruptHandler 0002  
                 _INT0_DefaultInterruptHandler 0AE2                     _EUSART_DefaultErrorHandler 000000  
                                 _EUSART_Write 0A34                         ?_OSCILLATOR_Initialize 000D  
                        __end_of_INT0_CallBack 09DA                            start_initialization 0A64  
              __size_of_PIN_MANAGER_Initialize 0060                          __end_of_INT1_CallBack 09AC  
               ?_EUSART_SetOverrunErrorHandler 000F                     _EUSART_FramingErrorHandler 0005  
                             ??_PMD_Initialize 000F                         _EUSART_SetErrorHandler 0ABE  
                   __end_of_EXT_INT_Initialize 097E                fp__INT0_DefaultInterruptHandler 0000  
                ?_INT0_DefaultInterruptHandler 000D                                    __pbssCOMRAM 0014  
             __end_of_INT0_SetInterruptHandler 0AAA                     __size_of_EUSART_Initialize 003E  
                        _INT2_InterruptHandler 0007                         _PIN_MANAGER_Initialize 080A  
                                    __pintcode 0008                   ??_INTERRUPT_InterruptManager 000D  
                                     _BAUD1CON 000F9F                                    __smallconst 0800  
                                ??_sendUartStr 0012                     ??_INT2_SetInterruptHandler 0011  
                         _INTERRUPT_Initialize 0ADC                                       _INT0_ISR 0AD2  
                                     _INT1_ISR 0AC8         EUSART_SetErrorHandler@interruptHandler 000F  
            __size_of_INT1_SetInterruptHandler 000A                      ?_INT1_SetInterruptHandler 000F  
                                     _PIE0bits 000EC2                              _eusartRxLastError 0014  
          __size_of_INTERRUPT_InterruptManager 005C                                       _PIR0bits 000ECA  
              ??_EUSART_SetFramingErrorHandler 0011                                       _PIR3bits 000ECD  
                                     _PIR7bits 000ED1                              _EUSART_is_tx_done 0A78  
            _EUSART_DefaultOverrunErrorHandler 000000                             ?_EUSART_is_tx_done 000D  
                                   _ADCON0bits 000F60                                     _ADCON1bits 000F59  
                                   _ADCON2bits 000F5A                                     _ADCON3bits 000F5B  
                          ??_EUSART_is_tx_done 000F                 ??_INT0_DefaultInterruptHandler 000D  
                            sendUartStr@TxData 0010                          ?_INTERRUPT_Initialize 000D  
                          __end_of_sendUartStr 0904                       _INT0_SetInterruptHandler 0AA0  
                                   _ADSTATbits 000F65                      __end_of_EUSART_is_tx_done 0A8C  
                                     __Hrparam 0000                                       __Lrparam 0000  
                      ??_OSCILLATOR_Initialize 000F                            _EUSART_ErrorHandler 0001  
                     __size_of_ADCC_Initialize 0050                                       __ptext10 0A8C  
                                     __ptext11 0A96                                       __ptext20 097E  
                                     __ptext12 0AA0                                       __ptext21 0AE0  
                                     __ptext13 0904                                       __ptext22 0AD2  
                                     __ptext14 0AAA                                       __ptext23 09AC  
                                     __ptext15 0AB4                                       __ptext24 0AE2  
                                     __ptext16 0ABE                                       __ptext25 0000  
                                     __ptext17 086A                                       __ptext19 0AC8  
                                __size_of_main 0020                        ?_EUSART_SetErrorHandler 000F  
                                   _RC1STAbits 000F9D  EUSART_SetOverrunErrorHandler@interruptHandler 000F  
                                     isa$xinst 000000                                       int$flags 0015  
           __end_of_INTERRUPT_InterruptManager 0064                     _INTERRUPT_InterruptManager 0008  
        __end_of_EUSART_SetFramingErrorHandler 0ABE         __size_of_EUSART_SetFramingErrorHandler 000A  
                _EUSART_SetFramingErrorHandler 0AB4           __end_of_INT1_DefaultInterruptHandler 0AE2  
        __size_of_INT1_DefaultInterruptHandler 0002                   _INT1_DefaultInterruptHandler 0AE0  
                                   _INTCONbits 000FF2                                    _sendUartStr 08BA  
                                  _NVMCON1bits 000F81                         ??_INTERRUPT_Initialize 000F  
                           _EXT_INT_Initialize 0942                                       intlevel2 0000  
                      ?_PIN_MANAGER_Initialize 000D                 __end_of_EUSART_SetErrorHandler 0AC8  
                          ?_EXT_INT_Initialize 000D                     __size_of_EUSART_is_tx_done 0014  
                       __size_of_INT0_CallBack 002E                         __size_of_INT1_CallBack 002E  
EUSART_SetFramingErrorHandler@interruptHandler 000F                           ??_EXT_INT_Initialize 0011  
              fp__INT1_DefaultInterruptHandler 0000                  ?_INT1_DefaultInterruptHandler 000D  
             __end_of_INT1_SetInterruptHandler 0AA0                                     _TX1STAbits 000F9E  
                           EUSART_Write@txData 000F                 __end_of_PIN_MANAGER_Initialize 086A  
                            ??_ADCC_Initialize 000F  
