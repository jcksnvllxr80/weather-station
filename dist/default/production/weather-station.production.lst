

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jan 03 21:54:01 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F25K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    40  0000                     
    41                           ; Version 2.20
    42                           ; Generated 05/05/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F25K40 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     
    76 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
    77  0000                     
    78 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
    79  0000                     
    80 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
    81  0000                     
    82                           	psect	nvCOMRAM
    83  000001                     __pnvCOMRAM:
    84                           	callstack 0
    85  000001                     _EUSART_ErrorHandler:
    86                           	callstack 0
    87  000001                     	ds	2
    88  000003                     _EUSART_OverrunErrorHandler:
    89                           	callstack 0
    90  000003                     	ds	2
    91  000005                     _EUSART_FramingErrorHandler:
    92                           	callstack 0
    93  000005                     	ds	2
    94  000007                     _INT2_InterruptHandler:
    95                           	callstack 0
    96  000007                     	ds	2
    97  000009                     _INT1_InterruptHandler:
    98                           	callstack 0
    99  000009                     	ds	2
   100  00000B                     _INT0_InterruptHandler:
   101                           	callstack 0
   102  00000B                     	ds	2
   103  0000                     _PIR7bits	set	3793
   104  0000                     _RC6PPS	set	3837
   105  0000                     _INT1PPS	set	3746
   106  0000                     _INT2PPS	set	3747
   107  0000                     _INT0PPS	set	3745
   108  0000                     _RXPPS	set	3765
   109  0000                     _PIR3bits	set	3789
   110  0000                     _PMD5	set	3814
   111  0000                     _PMD4	set	3813
   112  0000                     _PMD3	set	3812
   113  0000                     _PMD2	set	3811
   114  0000                     _PMD1	set	3810
   115  0000                     _PMD0	set	3809
   116  0000                     _OSCTUNE	set	3805
   117  0000                     _OSCFRQ	set	3806
   118  0000                     _OSCEN	set	3804
   119  0000                     _OSCCON3	set	3802
   120  0000                     _OSCCON1	set	3800
   121  0000                     _PIE0bits	set	3778
   122  0000                     _PIR0bits	set	3786
   123  0000                     _INLVLE	set	3882
   124  0000                     _INLVLC	set	3869
   125  0000                     _INLVLB	set	3861
   126  0000                     _INLVLA	set	3853
   127  0000                     _SLRCONC	set	3870
   128  0000                     _SLRCONB	set	3862
   129  0000                     _SLRCONA	set	3854
   130  0000                     _ODCONC	set	3871
   131  0000                     _ODCONB	set	3863
   132  0000                     _ODCONA	set	3855
   133  0000                     _WPUC	set	3872
   134  0000                     _WPUA	set	3856
   135  0000                     _WPUB	set	3864
   136  0000                     _WPUE	set	3885
   137  0000                     _ANSELA	set	3857
   138  0000                     _ANSELB	set	3865
   139  0000                     _ANSELC	set	3873
   140  0000                     _ADCON1bits	set	3929
   141  0000                     _ADCON2bits	set	3930
   142  0000                     _ADCON3bits	set	3931
   143  0000                     _ADACQ	set	3932
   144  0000                     _ADCLK	set	3927
   145  0000                     _ADACT	set	3926
   146  0000                     _ADREF	set	3928
   147  0000                     _ADCON3	set	3931
   148  0000                     _ADCON2	set	3930
   149  0000                     _ADCON1	set	3929
   150  0000                     _ADPRE	set	3934
   151  0000                     _ADCAP	set	3933
   152  0000                     _ADPCH	set	3935
   153  0000                     _NVMDAT	set	3968
   154  0000                     _NVMADRL	set	3966
   155  0000                     _NVMCON2	set	3970
   156  0000                     _TABLAT	set	4085
   157  0000                     _TBLPTRL	set	4086
   158  0000                     _TBLPTRH	set	4087
   159  0000                     _TBLPTRU	set	4088
   160  0000                     _NVMCON1bits	set	3969
   161  0000                     _TRISC	set	3978
   162  0000                     _TRISB	set	3977
   163  0000                     _TRISA	set	3976
   164  0000                     _LATC	set	3973
   165  0000                     _LATB	set	3972
   166  0000                     _LATA	set	3971
   167  0000                     _TX1REG	set	3994
   168  0000                     _RC1REG	set	3993
   169  0000                     _RC1STAbits	set	3997
   170  0000                     _TX1STAbits	set	3998
   171  0000                     _SP1BRGH	set	3996
   172  0000                     _SP1BRGL	set	3995
   173  0000                     _TX1STA	set	3998
   174  0000                     _RC1STA	set	3997
   175  0000                     _BAUD1CON	set	3999
   176  0000                     _ADERRL	set	3950
   177  0000                     _ADERRH	set	3951
   178  0000                     _ADPREVL	set	3937
   179  0000                     _ADPREVH	set	3938
   180  0000                     _ADFLTRL	set	3954
   181  0000                     _ADFLTRH	set	3955
   182  0000                     _ADSTATbits	set	3941
   183  0000                     _ADACCL	set	3952
   184  0000                     _ADACCH	set	3953
   185  0000                     _ADCNT	set	3943
   186  0000                     _ADRESL	set	3939
   187  0000                     _ADRESH	set	3940
   188  0000                     _ADCON0bits	set	3936
   189  0000                     _ADCON0	set	3936
   190  0000                     _ADSTAT	set	3941
   191  0000                     _ADRPT	set	3942
   192  0000                     _ADSTPTH	set	3945
   193  0000                     _ADSTPTL	set	3944
   194  0000                     _ADUTHH	set	3949
   195  0000                     _ADUTHL	set	3948
   196  0000                     _ADLTHH	set	3947
   197  0000                     _ADLTHL	set	3946
   198  0000                     _INTCONbits	set	4082
   199                           
   200                           ; #config settings
   201                           
   202                           	psect	cinit
   203  00029E                     __pcinit:
   204                           	callstack 0
   205  00029E                     start_initialization:
   206                           	callstack 0
   207  00029E                     __initialization:
   208                           	callstack 0
   209                           
   210                           ; Clear objects allocated to COMRAM (1 bytes)
   211  00029E  6A11               	clrf	__pbssCOMRAM& (0+255),c
   212  0002A0                     end_of_initialization:
   213                           	callstack 0
   214  0002A0                     __end_of__initialization:
   215                           	callstack 0
   216  0002A0  9012               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   217  0002A2  9212               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   218  0002A4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   219  0002A6  6EF8               	movwf	tblptru,c
   220  0002A8  0100               	movlb	0
   221  0002AA  EF57  F001         	goto	_main	;jump to C main() function
   222                           
   223                           	psect	bssCOMRAM
   224  000011                     __pbssCOMRAM:
   225                           	callstack 0
   226  000011                     _eusartRxLastError:
   227                           	callstack 0
   228  000011                     	ds	1
   229                           
   230                           	psect	cstackCOMRAM
   231  00000D                     __pcstackCOMRAM:
   232                           	callstack 0
   233  00000D                     ??_INTERRUPT_InterruptManager:
   234                           
   235                           ; 1 bytes @ 0x0
   236  00000D                     	ds	2
   237  00000F                     INT0_SetInterruptHandler@InterruptHandler:
   238                           	callstack 0
   239  00000F                     INT1_SetInterruptHandler@InterruptHandler:
   240                           	callstack 0
   241  00000F                     INT2_SetInterruptHandler@InterruptHandler:
   242                           	callstack 0
   243  00000F                     EUSART_SetFramingErrorHandler@interruptHandler:
   244                           	callstack 0
   245  00000F                     EUSART_SetOverrunErrorHandler@interruptHandler:
   246                           	callstack 0
   247  00000F                     EUSART_SetErrorHandler@interruptHandler:
   248                           	callstack 0
   249                           
   250                           ; 2 bytes @ 0x2
   251  00000F                     	ds	2
   252  000011                     
   253                           ; 1 bytes @ 0x4
   254 ;;
   255 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   256 ;;
   257 ;; *************** function _main *****************
   258 ;; Defined at:
   259 ;;		line 49 in file "main.c"
   260 ;; Parameters:    Size  Location     Type
   261 ;;		None
   262 ;; Auto vars:     Size  Location     Type
   263 ;;		None
   264 ;; Return value:  Size  Location     Type
   265 ;;                  1    wreg      void 
   266 ;; Registers used:
   267 ;;		wreg, status,2, status,0, cstack
   268 ;; Tracked objects:
   269 ;;		On entry : 0/0
   270 ;;		On exit  : 0/0
   271 ;;		Unchanged: 0/0
   272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   273 ;;      Params:         0       0       0       0       0       0       0       0       0
   274 ;;      Locals:         0       0       0       0       0       0       0       0       0
   275 ;;      Temps:          0       0       0       0       0       0       0       0       0
   276 ;;      Totals:         0       0       0       0       0       0       0       0       0
   277 ;;Total ram usage:        0 bytes
   278 ;; Hardware stack levels required when called: 7
   279 ;; This function calls:
   280 ;;		_SYSTEM_Initialize
   281 ;; This function is called by:
   282 ;;		Startup code after reset
   283 ;; This function uses a non-reentrant model
   284 ;;
   285                           
   286                           	psect	text0
   287  0002AE                     __ptext0:
   288                           	callstack 0
   289  0002AE                     _main:
   290                           	callstack 24
   291  0002AE                     
   292                           ;main.c: 52:     SYSTEM_Initialize();
   293  0002AE  EC26  F001         	call	_SYSTEM_Initialize	;wreg free
   294  0002B2                     l67:
   295  0002B2  EF59  F001         	goto	l67
   296  0002B6  EF46  F000         	goto	start
   297  0002BA                     __end_of_main:
   298                           	callstack 0
   299                           
   300 ;; *************** function _SYSTEM_Initialize *****************
   301 ;; Defined at:
   302 ;;		line 50 in file "mcc_generated_files/mcc.c"
   303 ;; Parameters:    Size  Location     Type
   304 ;;		None
   305 ;; Auto vars:     Size  Location     Type
   306 ;;		None
   307 ;; Return value:  Size  Location     Type
   308 ;;                  1    wreg      void 
   309 ;; Registers used:
   310 ;;		wreg, status,2, status,0, cstack
   311 ;; Tracked objects:
   312 ;;		On entry : 0/0
   313 ;;		On exit  : 0/0
   314 ;;		Unchanged: 0/0
   315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   316 ;;      Params:         0       0       0       0       0       0       0       0       0
   317 ;;      Locals:         0       0       0       0       0       0       0       0       0
   318 ;;      Temps:          0       0       0       0       0       0       0       0       0
   319 ;;      Totals:         0       0       0       0       0       0       0       0       0
   320 ;;Total ram usage:        0 bytes
   321 ;; Hardware stack levels used: 1
   322 ;; Hardware stack levels required when called: 6
   323 ;; This function calls:
   324 ;;		_ADCC_Initialize
   325 ;;		_EUSART_Initialize
   326 ;;		_EXT_INT_Initialize
   327 ;;		_INTERRUPT_Initialize
   328 ;;		_OSCILLATOR_Initialize
   329 ;;		_PIN_MANAGER_Initialize
   330 ;;		_PMD_Initialize
   331 ;; This function is called by:
   332 ;;		_main
   333 ;; This function uses a non-reentrant model
   334 ;;
   335                           
   336                           	psect	text1
   337  00024C                     __ptext1:
   338                           	callstack 0
   339  00024C                     _SYSTEM_Initialize:
   340                           	callstack 24
   341  00024C                     
   342                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
   343  00024C  EC8A  F001         	call	_INTERRUPT_Initialize	;wreg free
   344  000250                     
   345                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
   346  000250  EC35  F001         	call	_PMD_Initialize	;wreg free
   347  000254                     
   348                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
   349  000254  EC48  F000         	call	_PIN_MANAGER_Initialize	;wreg free
   350  000258                     
   351                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
   352  000258  EC43  F001         	call	_OSCILLATOR_Initialize	;wreg free
   353  00025C                     
   354                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
   355  00025C  EC7A  F000         	call	_ADCC_Initialize	;wreg free
   356  000260                     
   357                           ;mcc_generated_files/mcc.c: 57:     EXT_INT_Initialize();
   358  000260  ECA2  F000         	call	_EXT_INT_Initialize	;wreg free
   359  000264                     
   360                           ;mcc_generated_files/mcc.c: 58:     EUSART_Initialize();
   361  000264  ECC2  F000         	call	_EUSART_Initialize	;wreg free
   362  000268  0012               	return		;funcret
   363  00026A                     __end_of_SYSTEM_Initialize:
   364                           	callstack 0
   365                           
   366 ;; *************** function _PMD_Initialize *****************
   367 ;; Defined at:
   368 ;;		line 75 in file "mcc_generated_files/mcc.c"
   369 ;; Parameters:    Size  Location     Type
   370 ;;		None
   371 ;; Auto vars:     Size  Location     Type
   372 ;;		None
   373 ;; Return value:  Size  Location     Type
   374 ;;                  1    wreg      void 
   375 ;; Registers used:
   376 ;;		wreg, status,2
   377 ;; Tracked objects:
   378 ;;		On entry : 0/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   382 ;;      Params:         0       0       0       0       0       0       0       0       0
   383 ;;      Locals:         0       0       0       0       0       0       0       0       0
   384 ;;      Temps:          0       0       0       0       0       0       0       0       0
   385 ;;      Totals:         0       0       0       0       0       0       0       0       0
   386 ;;Total ram usage:        0 bytes
   387 ;; Hardware stack levels used: 1
   388 ;; Hardware stack levels required when called: 4
   389 ;; This function calls:
   390 ;;		Nothing
   391 ;; This function is called by:
   392 ;;		_SYSTEM_Initialize
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396                           	psect	text2
   397  00026A                     __ptext2:
   398                           	callstack 0
   399  00026A                     _PMD_Initialize:
   400                           	callstack 25
   401  00026A                     
   402                           ;mcc_generated_files/mcc.c: 78:     PMD0 = 0x00;
   403  00026A  0E00               	movlw	0
   404  00026C  010E               	movlb	14	; () banked
   405  00026E  6FE1               	movwf	225,b	;volatile
   406                           
   407                           ;mcc_generated_files/mcc.c: 80:     PMD1 = 0x00;
   408  000270  0E00               	movlw	0
   409  000272  6FE2               	movwf	226,b	;volatile
   410                           
   411                           ;mcc_generated_files/mcc.c: 82:     PMD2 = 0x00;
   412  000274  0E00               	movlw	0
   413  000276  6FE3               	movwf	227,b	;volatile
   414                           
   415                           ;mcc_generated_files/mcc.c: 84:     PMD3 = 0x00;
   416  000278  0E00               	movlw	0
   417  00027A  6FE4               	movwf	228,b	;volatile
   418                           
   419                           ;mcc_generated_files/mcc.c: 86:     PMD4 = 0x00;
   420  00027C  0E00               	movlw	0
   421  00027E  6FE5               	movwf	229,b	;volatile
   422                           
   423                           ;mcc_generated_files/mcc.c: 88:     PMD5 = 0x00;
   424  000280  0E00               	movlw	0
   425  000282  6FE6               	movwf	230,b	;volatile
   426  000284                     
   427                           ; BSR set to: 14
   428  000284  0012               	return		;funcret
   429  000286                     __end_of_PMD_Initialize:
   430                           	callstack 0
   431                           
   432 ;; *************** function _PIN_MANAGER_Initialize *****************
   433 ;; Defined at:
   434 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   435 ;; Parameters:    Size  Location     Type
   436 ;;		None
   437 ;; Auto vars:     Size  Location     Type
   438 ;;		None
   439 ;; Return value:  Size  Location     Type
   440 ;;                  1    wreg      void 
   441 ;; Registers used:
   442 ;;		wreg, status,2
   443 ;; Tracked objects:
   444 ;;		On entry : 0/0
   445 ;;		On exit  : 0/0
   446 ;;		Unchanged: 0/0
   447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   448 ;;      Params:         0       0       0       0       0       0       0       0       0
   449 ;;      Locals:         0       0       0       0       0       0       0       0       0
   450 ;;      Temps:          0       0       0       0       0       0       0       0       0
   451 ;;      Totals:         0       0       0       0       0       0       0       0       0
   452 ;;Total ram usage:        0 bytes
   453 ;; Hardware stack levels used: 1
   454 ;; Hardware stack levels required when called: 4
   455 ;; This function calls:
   456 ;;		Nothing
   457 ;; This function is called by:
   458 ;;		_SYSTEM_Initialize
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           	psect	text3
   463  000090                     __ptext3:
   464                           	callstack 0
   465  000090                     _PIN_MANAGER_Initialize:
   466                           	callstack 25
   467  000090                     
   468                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
   469  000090  0E00               	movlw	0
   470  000092  6E83               	movwf	131,c	;volatile
   471                           
   472                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
   473  000094  0E00               	movlw	0
   474  000096  6E84               	movwf	132,c	;volatile
   475                           
   476                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
   477  000098  0E00               	movlw	0
   478  00009A  6E85               	movwf	133,c	;volatile
   479  00009C                     
   480                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
   481  00009C  6888               	setf	136,c	;volatile
   482  00009E                     
   483                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
   484  00009E  6889               	setf	137,c	;volatile
   485                           
   486                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
   487  0000A0  0EBF               	movlw	191
   488  0000A2  6E8A               	movwf	138,c	;volatile
   489                           
   490                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x7F;
   491  0000A4  0E7F               	movlw	127
   492  0000A6  010F               	movlb	15	; () banked
   493  0000A8  6F21               	movwf	33,b	;volatile
   494                           
   495                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xF8;
   496  0000AA  0EF8               	movlw	248
   497  0000AC  6F19               	movwf	25,b	;volatile
   498  0000AE                     
   499                           ; BSR set to: 15
   500                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xFF;
   501  0000AE  6911               	setf	17,b	;volatile
   502                           
   503                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
   504  0000B0  0E00               	movlw	0
   505  0000B2  6F2D               	movwf	45,b	;volatile
   506                           
   507                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
   508  0000B4  0E00               	movlw	0
   509  0000B6  6F18               	movwf	24,b	;volatile
   510                           
   511                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
   512  0000B8  0E00               	movlw	0
   513  0000BA  6F10               	movwf	16,b	;volatile
   514                           
   515                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
   516  0000BC  0E00               	movlw	0
   517  0000BE  6F20               	movwf	32,b	;volatile
   518                           
   519                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
   520  0000C0  0E00               	movlw	0
   521  0000C2  6F0F               	movwf	15,b	;volatile
   522                           
   523                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
   524  0000C4  0E00               	movlw	0
   525  0000C6  6F17               	movwf	23,b	;volatile
   526                           
   527                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
   528  0000C8  0E00               	movlw	0
   529  0000CA  6F1F               	movwf	31,b	;volatile
   530  0000CC                     
   531                           ; BSR set to: 15
   532                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
   533  0000CC  690E               	setf	14,b	;volatile
   534  0000CE                     
   535                           ; BSR set to: 15
   536                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
   537  0000CE  6916               	setf	22,b	;volatile
   538  0000D0                     
   539                           ; BSR set to: 15
   540                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
   541  0000D0  691E               	setf	30,b	;volatile
   542  0000D2                     
   543                           ; BSR set to: 15
   544                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0xFF;
   545  0000D2  690D               	setf	13,b	;volatile
   546  0000D4                     
   547                           ; BSR set to: 15
   548                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xFF;
   549  0000D4  6915               	setf	21,b	;volatile
   550  0000D6                     
   551                           ; BSR set to: 15
   552                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
   553  0000D6  691D               	setf	29,b	;volatile
   554                           
   555                           ;mcc_generated_files/pin_manager.c: 106:     INLVLE = 0x08;
   556  0000D8  0E08               	movlw	8
   557  0000DA  6F2A               	movwf	42,b	;volatile
   558                           
   559                           ;mcc_generated_files/pin_manager.c: 115:     RXPPS = 0x17;
   560  0000DC  0E17               	movlw	23
   561  0000DE  010E               	movlb	14	; () banked
   562  0000E0  6FB5               	movwf	181,b	;volatile
   563                           
   564                           ;mcc_generated_files/pin_manager.c: 116:     INT0PPS = 0x08;
   565  0000E2  0E08               	movlw	8
   566  0000E4  6FA1               	movwf	161,b	;volatile
   567                           
   568                           ;mcc_generated_files/pin_manager.c: 117:     INT2PPS = 0x0A;
   569  0000E6  0E0A               	movlw	10
   570  0000E8  6FA3               	movwf	163,b	;volatile
   571                           
   572                           ;mcc_generated_files/pin_manager.c: 118:     INT1PPS = 0x09;
   573  0000EA  0E09               	movlw	9
   574  0000EC  6FA2               	movwf	162,b	;volatile
   575                           
   576                           ;mcc_generated_files/pin_manager.c: 119:     RC6PPS = 0x09;
   577  0000EE  0E09               	movlw	9
   578  0000F0  6FFD               	movwf	253,b	;volatile
   579  0000F2                     
   580                           ; BSR set to: 14
   581  0000F2  0012               	return		;funcret
   582  0000F4                     __end_of_PIN_MANAGER_Initialize:
   583                           	callstack 0
   584                           
   585 ;; *************** function _OSCILLATOR_Initialize *****************
   586 ;; Defined at:
   587 ;;		line 61 in file "mcc_generated_files/mcc.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;		None
   590 ;; Auto vars:     Size  Location     Type
   591 ;;		None
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		wreg, status,2
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   601 ;;      Params:         0       0       0       0       0       0       0       0       0
   602 ;;      Locals:         0       0       0       0       0       0       0       0       0
   603 ;;      Temps:          0       0       0       0       0       0       0       0       0
   604 ;;      Totals:         0       0       0       0       0       0       0       0       0
   605 ;;Total ram usage:        0 bytes
   606 ;; Hardware stack levels used: 1
   607 ;; Hardware stack levels required when called: 4
   608 ;; This function calls:
   609 ;;		Nothing
   610 ;; This function is called by:
   611 ;;		_SYSTEM_Initialize
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           	psect	text4
   616  000286                     __ptext4:
   617                           	callstack 0
   618  000286                     _OSCILLATOR_Initialize:
   619                           	callstack 25
   620  000286                     
   621                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x70;
   622  000286  0E70               	movlw	112
   623  000288  010E               	movlb	14	; () banked
   624  00028A  6FD8               	movwf	216,b	;volatile
   625                           
   626                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
   627  00028C  0E00               	movlw	0
   628  00028E  6FDA               	movwf	218,b	;volatile
   629                           
   630                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
   631  000290  0E00               	movlw	0
   632  000292  6FDC               	movwf	220,b	;volatile
   633                           
   634                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x02;
   635  000294  0E02               	movlw	2
   636  000296  6FDE               	movwf	222,b	;volatile
   637                           
   638                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
   639  000298  0E00               	movlw	0
   640  00029A  6FDD               	movwf	221,b	;volatile
   641  00029C                     
   642                           ; BSR set to: 14
   643  00029C  0012               	return		;funcret
   644  00029E                     __end_of_OSCILLATOR_Initialize:
   645                           	callstack 0
   646                           
   647 ;; *************** function _INTERRUPT_Initialize *****************
   648 ;; Defined at:
   649 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;		None
   652 ;; Auto vars:     Size  Location     Type
   653 ;;		None
   654 ;; Return value:  Size  Location     Type
   655 ;;                  1    wreg      void 
   656 ;; Registers used:
   657 ;;		None
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   663 ;;      Params:         0       0       0       0       0       0       0       0       0
   664 ;;      Locals:         0       0       0       0       0       0       0       0       0
   665 ;;      Temps:          0       0       0       0       0       0       0       0       0
   666 ;;      Totals:         0       0       0       0       0       0       0       0       0
   667 ;;Total ram usage:        0 bytes
   668 ;; Hardware stack levels used: 1
   669 ;; Hardware stack levels required when called: 4
   670 ;; This function calls:
   671 ;;		Nothing
   672 ;; This function is called by:
   673 ;;		_SYSTEM_Initialize
   674 ;; This function uses a non-reentrant model
   675 ;;
   676                           
   677                           	psect	text5
   678  000314                     __ptext5:
   679                           	callstack 0
   680  000314                     _INTERRUPT_Initialize:
   681                           	callstack 25
   682  000314                     
   683                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
   684  000314  9AF2               	bcf	242,5,c	;volatile
   685  000316  0012               	return		;funcret
   686  000318                     __end_of_INTERRUPT_Initialize:
   687                           	callstack 0
   688                           
   689 ;; *************** function _EXT_INT_Initialize *****************
   690 ;; Defined at:
   691 ;;		line 113 in file "mcc_generated_files/ext_int.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;		None
   694 ;; Auto vars:     Size  Location     Type
   695 ;;		None
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      void 
   698 ;; Registers used:
   699 ;;		wreg, status,2, status,0, cstack
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   705 ;;      Params:         0       0       0       0       0       0       0       0       0
   706 ;;      Locals:         0       0       0       0       0       0       0       0       0
   707 ;;      Temps:          0       0       0       0       0       0       0       0       0
   708 ;;      Totals:         0       0       0       0       0       0       0       0       0
   709 ;;Total ram usage:        0 bytes
   710 ;; Hardware stack levels used: 1
   711 ;; Hardware stack levels required when called: 5
   712 ;; This function calls:
   713 ;;		_INT0_SetInterruptHandler
   714 ;;		_INT1_SetInterruptHandler
   715 ;;		_INT2_SetInterruptHandler
   716 ;; This function is called by:
   717 ;;		_SYSTEM_Initialize
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           
   721                           	psect	text6
   722  000144                     __ptext6:
   723                           	callstack 0
   724  000144                     _EXT_INT_Initialize:
   725                           	callstack 24
   726  000144                     
   727                           ;mcc_generated_files/ext_int.c: 118:     (PIR0bits.INT0IF = 0);
   728  000144  010E               	movlb	14	; () banked
   729  000146  91CA               	bcf	202,0,b	;volatile
   730                           
   731                           ;mcc_generated_files/ext_int.c: 119:     (INTCONbits.INT0EDG = 1);
   732  000148  80F2               	bsf	242,0,c	;volatile
   733  00014A                     
   734                           ; BSR set to: 14
   735                           ;mcc_generated_files/ext_int.c: 121:     INT0_SetInterruptHandler(INT0_DefaultInterruptH
      +                          andler);
   736  00014A  0E1C               	movlw	low _INT0_DefaultInterruptHandler
   737  00014C  6E0F               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
   738  00014E  0E03               	movlw	high _INT0_DefaultInterruptHandler
   739  000150  6E10               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
   740  000152  EC67  F001         	call	_INT0_SetInterruptHandler	;wreg free
   741  000156                     
   742                           ;mcc_generated_files/ext_int.c: 122:     (PIE0bits.INT0IE = 1);
   743  000156  010E               	movlb	14	; () banked
   744  000158  81C2               	bsf	194,0,b	;volatile
   745  00015A                     
   746                           ; BSR set to: 14
   747                           ;mcc_generated_files/ext_int.c: 127:     (PIR0bits.INT1IF = 0);
   748  00015A  93CA               	bcf	202,1,b	;volatile
   749  00015C                     
   750                           ; BSR set to: 14
   751                           ;mcc_generated_files/ext_int.c: 128:     (INTCONbits.INT1EDG = 1);
   752  00015C  82F2               	bsf	242,1,c	;volatile
   753                           
   754                           ;mcc_generated_files/ext_int.c: 130:     INT1_SetInterruptHandler(INT1_DefaultInterruptH
      +                          andler);
   755  00015E  0E1A               	movlw	low _INT1_DefaultInterruptHandler
   756  000160  6E0F               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
   757  000162  0E03               	movlw	high _INT1_DefaultInterruptHandler
   758  000164  6E10               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
   759  000166  EC62  F001         	call	_INT1_SetInterruptHandler	;wreg free
   760  00016A                     
   761                           ;mcc_generated_files/ext_int.c: 131:     (PIE0bits.INT1IE = 1);
   762  00016A  010E               	movlb	14	; () banked
   763  00016C  83C2               	bsf	194,1,b	;volatile
   764  00016E                     
   765                           ; BSR set to: 14
   766                           ;mcc_generated_files/ext_int.c: 136:     (PIR0bits.INT2IF = 0);
   767  00016E  95CA               	bcf	202,2,b	;volatile
   768  000170                     
   769                           ; BSR set to: 14
   770                           ;mcc_generated_files/ext_int.c: 137:     (INTCONbits.INT2EDG = 1);
   771  000170  84F2               	bsf	242,2,c	;volatile
   772                           
   773                           ;mcc_generated_files/ext_int.c: 139:     INT2_SetInterruptHandler(INT2_DefaultInterruptH
      +                          andler);
   774  000172  0E18               	movlw	low _INT2_DefaultInterruptHandler
   775  000174  6E0F               	movwf	INT2_SetInterruptHandler@InterruptHandler^0,c
   776  000176  0E03               	movlw	high _INT2_DefaultInterruptHandler
   777  000178  6E10               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^0,c
   778  00017A  EC5D  F001         	call	_INT2_SetInterruptHandler	;wreg free
   779  00017E                     
   780                           ;mcc_generated_files/ext_int.c: 140:     (PIE0bits.INT2IE = 1);
   781  00017E  010E               	movlb	14	; () banked
   782  000180  85C2               	bsf	194,2,b	;volatile
   783  000182                     
   784                           ; BSR set to: 14
   785  000182  0012               	return		;funcret
   786  000184                     __end_of_EXT_INT_Initialize:
   787                           	callstack 0
   788                           
   789 ;; *************** function _INT2_SetInterruptHandler *****************
   790 ;; Defined at:
   791 ;;		line 104 in file "mcc_generated_files/ext_int.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
   794 ;;		 -> INT2_DefaultInterruptHandler(1), 
   795 ;; Auto vars:     Size  Location     Type
   796 ;;		None
   797 ;; Return value:  Size  Location     Type
   798 ;;                  1    wreg      void 
   799 ;; Registers used:
   800 ;;		wreg, status,2, status,0
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   806 ;;      Params:         2       0       0       0       0       0       0       0       0
   807 ;;      Locals:         0       0       0       0       0       0       0       0       0
   808 ;;      Temps:          0       0       0       0       0       0       0       0       0
   809 ;;      Totals:         2       0       0       0       0       0       0       0       0
   810 ;;Total ram usage:        2 bytes
   811 ;; Hardware stack levels used: 1
   812 ;; Hardware stack levels required when called: 4
   813 ;; This function calls:
   814 ;;		Nothing
   815 ;; This function is called by:
   816 ;;		_EXT_INT_Initialize
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           	psect	text7
   821  0002BA                     __ptext7:
   822                           	callstack 0
   823  0002BA                     _INT2_SetInterruptHandler:
   824                           	callstack 24
   825  0002BA                     
   826                           ;mcc_generated_files/ext_int.c: 105:     INT2_InterruptHandler = InterruptHandler;
   827  0002BA  C00F  F007         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
   828  0002BE  C010  F008         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
   829  0002C2  0012               	return		;funcret
   830  0002C4                     __end_of_INT2_SetInterruptHandler:
   831                           	callstack 0
   832                           
   833 ;; *************** function _INT1_SetInterruptHandler *****************
   834 ;; Defined at:
   835 ;;		line 78 in file "mcc_generated_files/ext_int.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
   838 ;;		 -> INT1_DefaultInterruptHandler(1), 
   839 ;; Auto vars:     Size  Location     Type
   840 ;;		None
   841 ;; Return value:  Size  Location     Type
   842 ;;                  1    wreg      void 
   843 ;; Registers used:
   844 ;;		wreg, status,2, status,0
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   850 ;;      Params:         2       0       0       0       0       0       0       0       0
   851 ;;      Locals:         0       0       0       0       0       0       0       0       0
   852 ;;      Temps:          0       0       0       0       0       0       0       0       0
   853 ;;      Totals:         2       0       0       0       0       0       0       0       0
   854 ;;Total ram usage:        2 bytes
   855 ;; Hardware stack levels used: 1
   856 ;; Hardware stack levels required when called: 4
   857 ;; This function calls:
   858 ;;		Nothing
   859 ;; This function is called by:
   860 ;;		_EXT_INT_Initialize
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864                           	psect	text8
   865  0002C4                     __ptext8:
   866                           	callstack 0
   867  0002C4                     _INT1_SetInterruptHandler:
   868                           	callstack 24
   869  0002C4                     
   870                           ;mcc_generated_files/ext_int.c: 79:     INT1_InterruptHandler = InterruptHandler;
   871  0002C4  C00F  F009         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
   872  0002C8  C010  F00A         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
   873  0002CC  0012               	return		;funcret
   874  0002CE                     __end_of_INT1_SetInterruptHandler:
   875                           	callstack 0
   876                           
   877 ;; *************** function _INT0_SetInterruptHandler *****************
   878 ;; Defined at:
   879 ;;		line 52 in file "mcc_generated_files/ext_int.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
   882 ;;		 -> INT0_DefaultInterruptHandler(1), 
   883 ;; Auto vars:     Size  Location     Type
   884 ;;		None
   885 ;; Return value:  Size  Location     Type
   886 ;;                  1    wreg      void 
   887 ;; Registers used:
   888 ;;		wreg, status,2, status,0
   889 ;; Tracked objects:
   890 ;;		On entry : 0/0
   891 ;;		On exit  : 0/0
   892 ;;		Unchanged: 0/0
   893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   894 ;;      Params:         2       0       0       0       0       0       0       0       0
   895 ;;      Locals:         0       0       0       0       0       0       0       0       0
   896 ;;      Temps:          0       0       0       0       0       0       0       0       0
   897 ;;      Totals:         2       0       0       0       0       0       0       0       0
   898 ;;Total ram usage:        2 bytes
   899 ;; Hardware stack levels used: 1
   900 ;; Hardware stack levels required when called: 4
   901 ;; This function calls:
   902 ;;		Nothing
   903 ;; This function is called by:
   904 ;;		_EXT_INT_Initialize
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           	psect	text9
   909  0002CE                     __ptext9:
   910                           	callstack 0
   911  0002CE                     _INT0_SetInterruptHandler:
   912                           	callstack 24
   913  0002CE                     
   914                           ;mcc_generated_files/ext_int.c: 53:     INT0_InterruptHandler = InterruptHandler;
   915  0002CE  C00F  F00B         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
   916  0002D2  C010  F00C         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
   917  0002D6  0012               	return		;funcret
   918  0002D8                     __end_of_INT0_SetInterruptHandler:
   919                           	callstack 0
   920                           
   921 ;; *************** function _EUSART_Initialize *****************
   922 ;; Defined at:
   923 ;;		line 66 in file "mcc_generated_files/eusart.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;		None
   926 ;; Auto vars:     Size  Location     Type
   927 ;;		None
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      void 
   930 ;; Registers used:
   931 ;;		wreg, status,2, status,0, cstack
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   937 ;;      Params:         0       0       0       0       0       0       0       0       0
   938 ;;      Locals:         0       0       0       0       0       0       0       0       0
   939 ;;      Temps:          0       0       0       0       0       0       0       0       0
   940 ;;      Totals:         0       0       0       0       0       0       0       0       0
   941 ;;Total ram usage:        0 bytes
   942 ;; Hardware stack levels used: 1
   943 ;; Hardware stack levels required when called: 5
   944 ;; This function calls:
   945 ;;		_EUSART_SetErrorHandler
   946 ;;		_EUSART_SetFramingErrorHandler
   947 ;;		_EUSART_SetOverrunErrorHandler
   948 ;; This function is called by:
   949 ;;		_SYSTEM_Initialize
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           	psect	text10
   954  000184                     __ptext10:
   955                           	callstack 0
   956  000184                     _EUSART_Initialize:
   957                           	callstack 24
   958  000184                     
   959                           ;mcc_generated_files/eusart.c: 71:     BAUD1CON = 0x08;
   960  000184  0E08               	movlw	8
   961  000186  6E9F               	movwf	159,c	;volatile
   962                           
   963                           ;mcc_generated_files/eusart.c: 74:     RC1STA = 0x90;
   964  000188  0E90               	movlw	144
   965  00018A  6E9D               	movwf	157,c	;volatile
   966                           
   967                           ;mcc_generated_files/eusart.c: 77:     TX1STA = 0x24;
   968  00018C  0E24               	movlw	36
   969  00018E  6E9E               	movwf	158,c	;volatile
   970                           
   971                           ;mcc_generated_files/eusart.c: 80:     SP1BRGL = 0x01;
   972  000190  0E01               	movlw	1
   973  000192  6E9B               	movwf	155,c	;volatile
   974                           
   975                           ;mcc_generated_files/eusart.c: 83:     SP1BRGH = 0x00;
   976  000194  0E00               	movlw	0
   977  000196  6E9C               	movwf	156,c	;volatile
   978  000198                     
   979                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
   980  000198  0E00               	movlw	0
   981  00019A  6E0F               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
   982  00019C  0E00               	movlw	0
   983  00019E  6E10               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
   984  0001A0  EC71  F001         	call	_EUSART_SetFramingErrorHandler	;wreg free
   985  0001A4                     
   986                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
   987  0001A4  0E00               	movlw	0
   988  0001A6  6E0F               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
   989  0001A8  0E00               	movlw	0
   990  0001AA  6E10               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
   991  0001AC  EC6C  F001         	call	_EUSART_SetOverrunErrorHandler	;wreg free
   992  0001B0                     
   993                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
   994  0001B0  0E00               	movlw	0
   995  0001B2  6E0F               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
   996  0001B4  0E00               	movlw	0
   997  0001B6  6E10               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
   998  0001B8  EC76  F001         	call	_EUSART_SetErrorHandler	;wreg free
   999  0001BC                     
  1000                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  1001  0001BC  0E00               	movlw	0
  1002  0001BE  6E11               	movwf	_eusartRxLastError^0,c	;volatile
  1003  0001C0  0012               	return		;funcret
  1004  0001C2                     __end_of_EUSART_Initialize:
  1005                           	callstack 0
  1006                           
  1007 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  1008 ;; Defined at:
  1009 ;;		line 161 in file "mcc_generated_files/eusart.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  1012 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;		None
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  1    wreg      void 
  1017 ;; Registers used:
  1018 ;;		wreg, status,2, status,0
  1019 ;; Tracked objects:
  1020 ;;		On entry : 0/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1024 ;;      Params:         2       0       0       0       0       0       0       0       0
  1025 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1026 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1027 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1028 ;;Total ram usage:        2 bytes
  1029 ;; Hardware stack levels used: 1
  1030 ;; Hardware stack levels required when called: 4
  1031 ;; This function calls:
  1032 ;;		Nothing
  1033 ;; This function is called by:
  1034 ;;		_EUSART_Initialize
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038                           	psect	text11
  1039  0002D8                     __ptext11:
  1040                           	callstack 0
  1041  0002D8                     _EUSART_SetOverrunErrorHandler:
  1042                           	callstack 24
  1043  0002D8                     
  1044                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  1045  0002D8  C00F  F003         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  1046  0002DC  C010  F004         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  1047  0002E0  0012               	return		;funcret
  1048  0002E2                     __end_of_EUSART_SetOverrunErrorHandler:
  1049                           	callstack 0
  1050                           
  1051 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  1052 ;; Defined at:
  1053 ;;		line 157 in file "mcc_generated_files/eusart.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  1056 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;		None
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  1    wreg      void 
  1061 ;; Registers used:
  1062 ;;		wreg, status,2, status,0
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1068 ;;      Params:         2       0       0       0       0       0       0       0       0
  1069 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1070 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1071 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1072 ;;Total ram usage:        2 bytes
  1073 ;; Hardware stack levels used: 1
  1074 ;; Hardware stack levels required when called: 4
  1075 ;; This function calls:
  1076 ;;		Nothing
  1077 ;; This function is called by:
  1078 ;;		_EUSART_Initialize
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           	psect	text12
  1083  0002E2                     __ptext12:
  1084                           	callstack 0
  1085  0002E2                     _EUSART_SetFramingErrorHandler:
  1086                           	callstack 24
  1087  0002E2                     
  1088                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  1089  0002E2  C00F  F005         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  1090  0002E6  C010  F006         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  1091  0002EA  0012               	return		;funcret
  1092  0002EC                     __end_of_EUSART_SetFramingErrorHandler:
  1093                           	callstack 0
  1094                           
  1095 ;; *************** function _EUSART_SetErrorHandler *****************
  1096 ;; Defined at:
  1097 ;;		line 165 in file "mcc_generated_files/eusart.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  1100 ;;		 -> EUSART_DefaultErrorHandler(1), 
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;		None
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      void 
  1105 ;; Registers used:
  1106 ;;		wreg, status,2, status,0
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1112 ;;      Params:         2       0       0       0       0       0       0       0       0
  1113 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1114 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1115 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1116 ;;Total ram usage:        2 bytes
  1117 ;; Hardware stack levels used: 1
  1118 ;; Hardware stack levels required when called: 4
  1119 ;; This function calls:
  1120 ;;		Nothing
  1121 ;; This function is called by:
  1122 ;;		_EUSART_Initialize
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126                           	psect	text13
  1127  0002EC                     __ptext13:
  1128                           	callstack 0
  1129  0002EC                     _EUSART_SetErrorHandler:
  1130                           	callstack 24
  1131  0002EC                     
  1132                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  1133  0002EC  C00F  F001         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  1134  0002F0  C010  F002         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  1135  0002F4  0012               	return		;funcret
  1136  0002F6                     __end_of_EUSART_SetErrorHandler:
  1137                           	callstack 0
  1138                           
  1139 ;; *************** function _ADCC_Initialize *****************
  1140 ;; Defined at:
  1141 ;;		line 62 in file "mcc_generated_files/adcc.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;		None
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;		None
  1146 ;; Return value:  Size  Location     Type
  1147 ;;                  1    wreg      void 
  1148 ;; Registers used:
  1149 ;;		wreg, status,2
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1155 ;;      Params:         0       0       0       0       0       0       0       0       0
  1156 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1157 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1158 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1159 ;;Total ram usage:        0 bytes
  1160 ;; Hardware stack levels used: 1
  1161 ;; Hardware stack levels required when called: 4
  1162 ;; This function calls:
  1163 ;;		Nothing
  1164 ;; This function is called by:
  1165 ;;		_SYSTEM_Initialize
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           	psect	text14
  1170  0000F4                     __ptext14:
  1171                           	callstack 0
  1172  0000F4                     _ADCC_Initialize:
  1173                           	callstack 25
  1174  0000F4                     
  1175                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  1176  0000F4  0E00               	movlw	0
  1177  0000F6  6E6A               	movwf	106,c	;volatile
  1178                           
  1179                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  1180  0000F8  0E00               	movlw	0
  1181  0000FA  6E6B               	movwf	107,c	;volatile
  1182                           
  1183                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  1184  0000FC  0E00               	movlw	0
  1185  0000FE  6E6C               	movwf	108,c	;volatile
  1186                           
  1187                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  1188  000100  0E00               	movlw	0
  1189  000102  6E6D               	movwf	109,c	;volatile
  1190                           
  1191                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  1192  000104  0E00               	movlw	0
  1193  000106  6E68               	movwf	104,c	;volatile
  1194                           
  1195                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  1196  000108  0E00               	movlw	0
  1197  00010A  6E69               	movwf	105,c	;volatile
  1198                           
  1199                           ;mcc_generated_files/adcc.c: 78:     ADRPT = 0x00;
  1200  00010C  0E00               	movlw	0
  1201  00010E  6E66               	movwf	102,c	;volatile
  1202                           
  1203                           ;mcc_generated_files/adcc.c: 80:     ADPCH = 0x00;
  1204  000110  0E00               	movlw	0
  1205  000112  010F               	movlb	15	; () banked
  1206  000114  6F5F               	movwf	95,b	;volatile
  1207                           
  1208                           ;mcc_generated_files/adcc.c: 82:     ADCAP = 0x00;
  1209  000116  0E00               	movlw	0
  1210  000118  6F5D               	movwf	93,b	;volatile
  1211                           
  1212                           ;mcc_generated_files/adcc.c: 84:     ADPRE = 0x00;
  1213  00011A  0E00               	movlw	0
  1214  00011C  6F5E               	movwf	94,b	;volatile
  1215                           
  1216                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
  1217  00011E  0E00               	movlw	0
  1218  000120  6F59               	movwf	89,b	;volatile
  1219                           
  1220                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x02;
  1221  000122  0E02               	movlw	2
  1222  000124  6F5A               	movwf	90,b	;volatile
  1223                           
  1224                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
  1225  000126  0E00               	movlw	0
  1226  000128  6F5B               	movwf	91,b	;volatile
  1227                           
  1228                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
  1229  00012A  0E00               	movlw	0
  1230  00012C  6E65               	movwf	101,c	;volatile
  1231                           
  1232                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
  1233  00012E  0E00               	movlw	0
  1234  000130  6F58               	movwf	88,b	;volatile
  1235                           
  1236                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
  1237  000132  0E00               	movlw	0
  1238  000134  6F56               	movwf	86,b	;volatile
  1239                           
  1240                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x00;
  1241  000136  0E00               	movlw	0
  1242  000138  6F57               	movwf	87,b	;volatile
  1243                           
  1244                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x84;
  1245  00013A  0E84               	movlw	132
  1246  00013C  6E60               	movwf	96,c	;volatile
  1247                           
  1248                           ;mcc_generated_files/adcc.c: 102:     ADACQ = 0x00;
  1249  00013E  0E00               	movlw	0
  1250  000140  6F5C               	movwf	92,b	;volatile
  1251  000142                     
  1252                           ; BSR set to: 15
  1253  000142  0012               	return		;funcret
  1254  000144                     __end_of_ADCC_Initialize:
  1255                           	callstack 0
  1256                           
  1257 ;; *************** function _INTERRUPT_InterruptManager *****************
  1258 ;; Defined at:
  1259 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;		None
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;		None
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  1    wreg      void 
  1266 ;; Registers used:
  1267 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1273 ;;      Params:         0       0       0       0       0       0       0       0       0
  1274 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1275 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1276 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1277 ;;Total ram usage:        2 bytes
  1278 ;; Hardware stack levels used: 1
  1279 ;; Hardware stack levels required when called: 3
  1280 ;; This function calls:
  1281 ;;		_INT0_ISR
  1282 ;;		_INT1_ISR
  1283 ;;		_INT2_ISR
  1284 ;; This function is called by:
  1285 ;;		Interrupt level 2
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           	psect	intcode
  1290  000008                     __pintcode:
  1291                           	callstack 0
  1292  000008                     _INTERRUPT_InterruptManager:
  1293                           	callstack 24
  1294                           
  1295                           ; BSR set to: 15
  1296                           ;incstack = 0
  1297  000008  8212               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1298  00000A  CFFA F00D          	movff	pclath,??_INTERRUPT_InterruptManager
  1299  00000E  CFFB F00E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1300  000012                     
  1301                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE0bits.INT0IE == 1 && PIR0bits.IN
      +                          T0IF == 1)
  1302  000012  010E               	movlb	14	; () banked
  1303  000014  A1C2               	btfss	194,0,b	;volatile
  1304  000016  EF0F  F000         	goto	i2u13_41
  1305  00001A  EF11  F000         	goto	i2u13_40
  1306  00001E                     i2u13_41:
  1307  00001E  EF1C  F000         	goto	i2l439
  1308  000022                     i2u13_40:
  1309  000022                     
  1310                           ; BSR set to: 14
  1311  000022  A1CA               	btfss	202,0,b	;volatile
  1312  000024  EF16  F000         	goto	i2u14_41
  1313  000028  EF18  F000         	goto	i2u14_40
  1314  00002C                     i2u14_41:
  1315  00002C  EF1C  F000         	goto	i2l439
  1316  000030                     i2u14_40:
  1317  000030                     
  1318                           ; BSR set to: 14
  1319                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         INT0_ISR();
  1320  000030  EC85  F001         	call	_INT0_ISR	;wreg free
  1321                           
  1322                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  1323  000034  EF40  F000         	goto	i2l445
  1324  000038                     i2l439:
  1325                           
  1326                           ; BSR set to: 14
  1327  000038  A3C2               	btfss	194,1,b	;volatile
  1328  00003A  EF21  F000         	goto	i2u15_41
  1329  00003E  EF23  F000         	goto	i2u15_40
  1330  000042                     i2u15_41:
  1331  000042  EF2E  F000         	goto	i2l441
  1332  000046                     i2u15_40:
  1333  000046                     
  1334                           ; BSR set to: 14
  1335  000046  A3CA               	btfss	202,1,b	;volatile
  1336  000048  EF28  F000         	goto	i2u16_41
  1337  00004C  EF2A  F000         	goto	i2u16_40
  1338  000050                     i2u16_41:
  1339  000050  EF2E  F000         	goto	i2l441
  1340  000054                     i2u16_40:
  1341  000054                     
  1342                           ; BSR set to: 14
  1343                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         INT1_ISR();
  1344  000054  EC80  F001         	call	_INT1_ISR	;wreg free
  1345                           
  1346                           ;mcc_generated_files/interrupt_manager.c: 68:     }
  1347  000058  EF40  F000         	goto	i2l445
  1348  00005C                     i2l441:
  1349                           
  1350                           ; BSR set to: 14
  1351  00005C  A5C2               	btfss	194,2,b	;volatile
  1352  00005E  EF33  F000         	goto	i2u17_41
  1353  000062  EF35  F000         	goto	i2u17_40
  1354  000066                     i2u17_41:
  1355  000066  EF40  F000         	goto	i2l442
  1356  00006A                     i2u17_40:
  1357  00006A                     
  1358                           ; BSR set to: 14
  1359  00006A  A5CA               	btfss	202,2,b	;volatile
  1360  00006C  EF3A  F000         	goto	i2u18_41
  1361  000070  EF3C  F000         	goto	i2u18_40
  1362  000074                     i2u18_41:
  1363  000074  EF40  F000         	goto	i2l442
  1364  000078                     i2u18_40:
  1365  000078                     
  1366                           ; BSR set to: 14
  1367                           ;mcc_generated_files/interrupt_manager.c: 70:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 71:         INT2_ISR();
  1368  000078  EC7B  F001         	call	_INT2_ISR	;wreg free
  1369                           
  1370                           ;mcc_generated_files/interrupt_manager.c: 72:     }
  1371  00007C  EF40  F000         	goto	i2l445
  1372  000080                     i2l442:
  1373  000080                     i2l445:
  1374  000080  C00E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1375  000084  C00D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1376  000088  9212               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1377  00008A  0011               	retfie		f
  1378  00008C                     __end_of_INTERRUPT_InterruptManager:
  1379                           	callstack 0
  1380                           
  1381 ;; *************** function _INT2_ISR *****************
  1382 ;; Defined at:
  1383 ;;		line 86 in file "mcc_generated_files/ext_int.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;		None
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;		None
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  1    wreg      void 
  1390 ;; Registers used:
  1391 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1397 ;;      Params:         0       0       0       0       0       0       0       0       0
  1398 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1399 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1400 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1401 ;;Total ram usage:        0 bytes
  1402 ;; Hardware stack levels used: 1
  1403 ;; Hardware stack levels required when called: 2
  1404 ;; This function calls:
  1405 ;;		_INT2_CallBack
  1406 ;; This function is called by:
  1407 ;;		_INTERRUPT_InterruptManager
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411                           	psect	text16
  1412  0002F6                     __ptext16:
  1413                           	callstack 0
  1414  0002F6                     _INT2_ISR:
  1415                           	callstack 24
  1416  0002F6                     
  1417                           ;mcc_generated_files/ext_int.c: 88:     (PIR0bits.INT2IF = 0);
  1418  0002F6  010E               	movlb	14	; () banked
  1419  0002F8  95CA               	bcf	202,2,b	;volatile
  1420  0002FA                     
  1421                           ; BSR set to: 14
  1422                           ;mcc_generated_files/ext_int.c: 91:     INT2_CallBack();
  1423  0002FA  ECE1  F000         	call	_INT2_CallBack	;wreg free
  1424  0002FE  0012               	return		;funcret
  1425  000300                     __end_of_INT2_ISR:
  1426                           	callstack 0
  1427                           
  1428 ;; *************** function _INT2_CallBack *****************
  1429 ;; Defined at:
  1430 ;;		line 95 in file "mcc_generated_files/ext_int.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;		None
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;		None
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  1    wreg      void 
  1437 ;; Registers used:
  1438 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1444 ;;      Params:         0       0       0       0       0       0       0       0       0
  1445 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1446 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1447 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1448 ;;Total ram usage:        0 bytes
  1449 ;; Hardware stack levels used: 1
  1450 ;; Hardware stack levels required when called: 1
  1451 ;; This function calls:
  1452 ;;		Absolute function
  1453 ;;		_INT2_DefaultInterruptHandler
  1454 ;; This function is called by:
  1455 ;;		_INT2_ISR
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           	psect	text17
  1460  0001C2                     __ptext17:
  1461                           	callstack 0
  1462  0001C2                     _INT2_CallBack:
  1463                           	callstack 24
  1464  0001C2                     
  1465                           ;mcc_generated_files/ext_int.c: 98:     if(INT2_InterruptHandler)
  1466  0001C2  5007               	movf	_INT2_InterruptHandler^0,w,c
  1467  0001C4  1008               	iorwf	(_INT2_InterruptHandler+1)^0,w,c
  1468  0001C6  B4D8               	btfsc	status,2,c
  1469  0001C8  EFE8  F000         	goto	i2u5_41
  1470  0001CC  EFEA  F000         	goto	i2u5_40
  1471  0001D0                     i2u5_41:
  1472  0001D0  EFF7  F000         	goto	i2l51
  1473  0001D4                     i2u5_40:
  1474  0001D4                     
  1475                           ;mcc_generated_files/ext_int.c: 99:     {;mcc_generated_files/ext_int.c: 100:         IN
      +                          T2_InterruptHandler();
  1476  0001D4  D802               	call	i2u6_48
  1477  0001D6  EFF7  F000         	goto	i2u6_49
  1478  0001DA                     i2u6_48:
  1479  0001DA  0005               	push	
  1480  0001DC  6EFA               	movwf	pclath,c
  1481  0001DE  5007               	movf	_INT2_InterruptHandler^0,w,c
  1482  0001E0  6EFD               	movwf	tosl,c
  1483  0001E2  5008               	movf	(_INT2_InterruptHandler+1)^0,w,c
  1484  0001E4  6EFE               	movwf	tosh,c
  1485  0001E6  50F8               	movf	tblptru,w,c
  1486  0001E8  6EFF               	movwf	tosu,c
  1487  0001EA  50FA               	movf	pclath,w,c
  1488  0001EC  0012               	return		;indir
  1489  0001EE                     i2u6_49:
  1490  0001EE                     i2l51:
  1491  0001EE  0012               	return		;funcret
  1492  0001F0                     __end_of_INT2_CallBack:
  1493                           	callstack 0
  1494                           
  1495 ;; *************** function _INT2_DefaultInterruptHandler *****************
  1496 ;; Defined at:
  1497 ;;		line 108 in file "mcc_generated_files/ext_int.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;		None
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;		None
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  1    wreg      void 
  1504 ;; Registers used:
  1505 ;;		None
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1511 ;;      Params:         0       0       0       0       0       0       0       0       0
  1512 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1513 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1514 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1515 ;;Total ram usage:        0 bytes
  1516 ;; Hardware stack levels used: 1
  1517 ;; This function calls:
  1518 ;;		Nothing
  1519 ;; This function is called by:
  1520 ;;		_EXT_INT_Initialize
  1521 ;;		_INT2_CallBack
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           	psect	text18
  1526  000318                     __ptext18:
  1527                           	callstack 0
  1528  000318                     _INT2_DefaultInterruptHandler:
  1529                           	callstack 24
  1530  000318  0012               	return		;funcret
  1531  00031A                     __end_of_INT2_DefaultInterruptHandler:
  1532                           	callstack 0
  1533                           
  1534 ;; *************** function _INT1_ISR *****************
  1535 ;; Defined at:
  1536 ;;		line 60 in file "mcc_generated_files/ext_int.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;		None
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;		None
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      void 
  1543 ;; Registers used:
  1544 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1550 ;;      Params:         0       0       0       0       0       0       0       0       0
  1551 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1552 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1553 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1554 ;;Total ram usage:        0 bytes
  1555 ;; Hardware stack levels used: 1
  1556 ;; Hardware stack levels required when called: 2
  1557 ;; This function calls:
  1558 ;;		_INT1_CallBack
  1559 ;; This function is called by:
  1560 ;;		_INTERRUPT_InterruptManager
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text19
  1565  000300                     __ptext19:
  1566                           	callstack 0
  1567  000300                     _INT1_ISR:
  1568                           	callstack 24
  1569  000300                     
  1570                           ;mcc_generated_files/ext_int.c: 62:     (PIR0bits.INT1IF = 0);
  1571  000300  010E               	movlb	14	; () banked
  1572  000302  93CA               	bcf	202,1,b	;volatile
  1573  000304                     
  1574                           ; BSR set to: 14
  1575                           ;mcc_generated_files/ext_int.c: 65:     INT1_CallBack();
  1576  000304  ECF8  F000         	call	_INT1_CallBack	;wreg free
  1577  000308  0012               	return		;funcret
  1578  00030A                     __end_of_INT1_ISR:
  1579                           	callstack 0
  1580                           
  1581 ;; *************** function _INT1_CallBack *****************
  1582 ;; Defined at:
  1583 ;;		line 69 in file "mcc_generated_files/ext_int.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;		None
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;		None
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  1    wreg      void 
  1590 ;; Registers used:
  1591 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1597 ;;      Params:         0       0       0       0       0       0       0       0       0
  1598 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1599 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1600 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1601 ;;Total ram usage:        0 bytes
  1602 ;; Hardware stack levels used: 1
  1603 ;; Hardware stack levels required when called: 1
  1604 ;; This function calls:
  1605 ;;		Absolute function
  1606 ;;		_INT1_DefaultInterruptHandler
  1607 ;; This function is called by:
  1608 ;;		_INT1_ISR
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           	psect	text20
  1613  0001F0                     __ptext20:
  1614                           	callstack 0
  1615  0001F0                     _INT1_CallBack:
  1616                           	callstack 24
  1617  0001F0                     
  1618                           ;mcc_generated_files/ext_int.c: 72:     if(INT1_InterruptHandler)
  1619  0001F0  5009               	movf	_INT1_InterruptHandler^0,w,c
  1620  0001F2  100A               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
  1621  0001F4  B4D8               	btfsc	status,2,c
  1622  0001F6  EFFF  F000         	goto	i2u3_41
  1623  0001FA  EF01  F001         	goto	i2u3_40
  1624  0001FE                     i2u3_41:
  1625  0001FE  EF0E  F001         	goto	i2l38
  1626  000202                     i2u3_40:
  1627  000202                     
  1628                           ;mcc_generated_files/ext_int.c: 73:     {;mcc_generated_files/ext_int.c: 74:         INT
      +                          1_InterruptHandler();
  1629  000202  D802               	call	i2u4_48
  1630  000204  EF0E  F001         	goto	i2u4_49
  1631  000208                     i2u4_48:
  1632  000208  0005               	push	
  1633  00020A  6EFA               	movwf	pclath,c
  1634  00020C  5009               	movf	_INT1_InterruptHandler^0,w,c
  1635  00020E  6EFD               	movwf	tosl,c
  1636  000210  500A               	movf	(_INT1_InterruptHandler+1)^0,w,c
  1637  000212  6EFE               	movwf	tosh,c
  1638  000214  50F8               	movf	tblptru,w,c
  1639  000216  6EFF               	movwf	tosu,c
  1640  000218  50FA               	movf	pclath,w,c
  1641  00021A  0012               	return		;indir
  1642  00021C                     i2u4_49:
  1643  00021C                     i2l38:
  1644  00021C  0012               	return		;funcret
  1645  00021E                     __end_of_INT1_CallBack:
  1646                           	callstack 0
  1647                           
  1648 ;; *************** function _INT1_DefaultInterruptHandler *****************
  1649 ;; Defined at:
  1650 ;;		line 82 in file "mcc_generated_files/ext_int.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;		None
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;		None
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      void 
  1657 ;; Registers used:
  1658 ;;		None
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1664 ;;      Params:         0       0       0       0       0       0       0       0       0
  1665 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1666 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1667 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1668 ;;Total ram usage:        0 bytes
  1669 ;; Hardware stack levels used: 1
  1670 ;; This function calls:
  1671 ;;		Nothing
  1672 ;; This function is called by:
  1673 ;;		_EXT_INT_Initialize
  1674 ;;		_INT1_CallBack
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           	psect	text21
  1679  00031A                     __ptext21:
  1680                           	callstack 0
  1681  00031A                     _INT1_DefaultInterruptHandler:
  1682                           	callstack 24
  1683  00031A  0012               	return		;funcret
  1684  00031C                     __end_of_INT1_DefaultInterruptHandler:
  1685                           	callstack 0
  1686                           
  1687 ;; *************** function _INT0_ISR *****************
  1688 ;; Defined at:
  1689 ;;		line 34 in file "mcc_generated_files/ext_int.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;		None
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;		None
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  1    wreg      void 
  1696 ;; Registers used:
  1697 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1698 ;; Tracked objects:
  1699 ;;		On entry : 0/0
  1700 ;;		On exit  : 0/0
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1703 ;;      Params:         0       0       0       0       0       0       0       0       0
  1704 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1705 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1706 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1707 ;;Total ram usage:        0 bytes
  1708 ;; Hardware stack levels used: 1
  1709 ;; Hardware stack levels required when called: 2
  1710 ;; This function calls:
  1711 ;;		_INT0_CallBack
  1712 ;; This function is called by:
  1713 ;;		_INTERRUPT_InterruptManager
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           	psect	text22
  1718  00030A                     __ptext22:
  1719                           	callstack 0
  1720  00030A                     _INT0_ISR:
  1721                           	callstack 24
  1722  00030A                     
  1723                           ;mcc_generated_files/ext_int.c: 36:     (PIR0bits.INT0IF = 0);
  1724  00030A  010E               	movlb	14	; () banked
  1725  00030C  91CA               	bcf	202,0,b	;volatile
  1726  00030E                     
  1727                           ; BSR set to: 14
  1728                           ;mcc_generated_files/ext_int.c: 39:     INT0_CallBack();
  1729  00030E  EC0F  F001         	call	_INT0_CallBack	;wreg free
  1730  000312  0012               	return		;funcret
  1731  000314                     __end_of_INT0_ISR:
  1732                           	callstack 0
  1733                           
  1734 ;; *************** function _INT0_CallBack *****************
  1735 ;; Defined at:
  1736 ;;		line 43 in file "mcc_generated_files/ext_int.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;		None
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;		None
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  1    wreg      void 
  1743 ;; Registers used:
  1744 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1750 ;;      Params:         0       0       0       0       0       0       0       0       0
  1751 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1752 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1753 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1754 ;;Total ram usage:        0 bytes
  1755 ;; Hardware stack levels used: 1
  1756 ;; Hardware stack levels required when called: 1
  1757 ;; This function calls:
  1758 ;;		Absolute function
  1759 ;;		_INT0_DefaultInterruptHandler
  1760 ;; This function is called by:
  1761 ;;		_INT0_ISR
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           	psect	text23
  1766  00021E                     __ptext23:
  1767                           	callstack 0
  1768  00021E                     _INT0_CallBack:
  1769                           	callstack 24
  1770  00021E                     
  1771                           ;mcc_generated_files/ext_int.c: 46:     if(INT0_InterruptHandler)
  1772  00021E  500B               	movf	_INT0_InterruptHandler^0,w,c
  1773  000220  100C               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
  1774  000222  B4D8               	btfsc	status,2,c
  1775  000224  EF16  F001         	goto	i2u1_41
  1776  000228  EF18  F001         	goto	i2u1_40
  1777  00022C                     i2u1_41:
  1778  00022C  EF25  F001         	goto	i2l25
  1779  000230                     i2u1_40:
  1780  000230                     
  1781                           ;mcc_generated_files/ext_int.c: 47:     {;mcc_generated_files/ext_int.c: 48:         INT
      +                          0_InterruptHandler();
  1782  000230  D802               	call	i2u2_48
  1783  000232  EF25  F001         	goto	i2u2_49
  1784  000236                     i2u2_48:
  1785  000236  0005               	push	
  1786  000238  6EFA               	movwf	pclath,c
  1787  00023A  500B               	movf	_INT0_InterruptHandler^0,w,c
  1788  00023C  6EFD               	movwf	tosl,c
  1789  00023E  500C               	movf	(_INT0_InterruptHandler+1)^0,w,c
  1790  000240  6EFE               	movwf	tosh,c
  1791  000242  50F8               	movf	tblptru,w,c
  1792  000244  6EFF               	movwf	tosu,c
  1793  000246  50FA               	movf	pclath,w,c
  1794  000248  0012               	return		;indir
  1795  00024A                     i2u2_49:
  1796  00024A                     i2l25:
  1797  00024A  0012               	return		;funcret
  1798  00024C                     __end_of_INT0_CallBack:
  1799                           	callstack 0
  1800                           
  1801 ;; *************** function _INT0_DefaultInterruptHandler *****************
  1802 ;; Defined at:
  1803 ;;		line 56 in file "mcc_generated_files/ext_int.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;		None
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;		None
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  1    wreg      void 
  1810 ;; Registers used:
  1811 ;;		None
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1817 ;;      Params:         0       0       0       0       0       0       0       0       0
  1818 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1819 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1820 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1821 ;;Total ram usage:        0 bytes
  1822 ;; Hardware stack levels used: 1
  1823 ;; This function calls:
  1824 ;;		Nothing
  1825 ;; This function is called by:
  1826 ;;		_EXT_INT_Initialize
  1827 ;;		_INT0_CallBack
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text24
  1832  00031C                     __ptext24:
  1833                           	callstack 0
  1834  00031C                     _INT0_DefaultInterruptHandler:
  1835                           	callstack 24
  1836  00031C  0012               	return		;funcret
  1837  00031E                     __end_of_INT0_DefaultInterruptHandler:
  1838                           	callstack 0
  1839  0000                     
  1840                           	psect	text25
  1841  000000                     __ptext25:
  1842                           	callstack 0
  1843  000000                     
  1844                           	psect	rparam
  1845  0000                     
  1846                           	psect	temp
  1847  000012                     btemp:
  1848                           	callstack 0
  1849  000012                     	ds	1
  1850  0000                     int$flags	set	btemp
  1851  0000                     wtemp8	set	btemp+1
  1852  0000                     ttemp5	set	btemp+1
  1853  0000                     ttemp6	set	btemp+4
  1854  0000                     ttemp7	set	btemp+8
  1855                           
  1856                           	psect	idloc
  1857                           
  1858                           ;Config register IDLOC0 @ 0x200000
  1859                           ;	unspecified, using default values
  1860  200000                     	org	2097152
  1861  200000  0FFF               	dw	4095
  1862                           
  1863                           ;Config register IDLOC1 @ 0x200002
  1864                           ;	unspecified, using default values
  1865  200002                     	org	2097154
  1866  200002  0FFF               	dw	4095
  1867                           
  1868                           ;Config register IDLOC2 @ 0x200004
  1869                           ;	unspecified, using default values
  1870  200004                     	org	2097156
  1871  200004  0FFF               	dw	4095
  1872                           
  1873                           ;Config register IDLOC3 @ 0x200006
  1874                           ;	unspecified, using default values
  1875  200006                     	org	2097158
  1876  200006  0FFF               	dw	4095
  1877                           
  1878                           ;Config register IDLOC4 @ 0x200008
  1879                           ;	unspecified, using default values
  1880  200008                     	org	2097160
  1881  200008  0FFF               	dw	4095
  1882                           
  1883                           ;Config register IDLOC5 @ 0x20000A
  1884                           ;	unspecified, using default values
  1885  20000A                     	org	2097162
  1886  20000A  0FFF               	dw	4095
  1887                           
  1888                           ;Config register IDLOC6 @ 0x20000C
  1889                           ;	unspecified, using default values
  1890  20000C                     	org	2097164
  1891  20000C  0FFF               	dw	4095
  1892                           
  1893                           ;Config register IDLOC7 @ 0x20000E
  1894                           ;	unspecified, using default values
  1895  20000E                     	org	2097166
  1896  20000E  0FFF               	dw	4095
  1897                           
  1898                           	psect	config
  1899                           
  1900                           ;Config register CONFIG1L @ 0x300000
  1901                           ;	External Oscillator mode Selection bits
  1902                           ;	FEXTOSC = OFF, Oscillator not enabled
  1903                           ;	Power-up default value for COSC bits
  1904                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1905  300000                     	org	3145728
  1906  300000  FC                 	db	252
  1907                           
  1908                           ;Config register CONFIG1H @ 0x300001
  1909                           ;	Clock Out Enable bit
  1910                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1911                           ;	Clock Switch Enable bit
  1912                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1913                           ;	Fail-Safe Clock Monitor Enable bit
  1914                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1915  300001                     	org	3145729
  1916  300001  FF                 	db	255
  1917                           
  1918                           ;Config register CONFIG2L @ 0x300002
  1919                           ;	Master Clear Enable bit
  1920                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1921                           ;	Power-up Timer Enable bit
  1922                           ;	PWRTE = OFF, Power up timer disabled
  1923                           ;	Low-power BOR enable bit
  1924                           ;	LPBOREN = OFF, ULPBOR disabled
  1925                           ;	Brown-out Reset Enable bits
  1926                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1927  300002                     	org	3145730
  1928  300002  FF                 	db	255
  1929                           
  1930                           ;Config register CONFIG2H @ 0x300003
  1931                           ;	Brown Out Reset Voltage selection bits
  1932                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  1933                           ;	ZCD Disable bit
  1934                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1935                           ;	PPSLOCK bit One-Way Set Enable bit
  1936                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  1937                           ;	Stack Full/Underflow Reset Enable bit
  1938                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1939                           ;	Debugger Enable bit
  1940                           ;	DEBUG = OFF, Background debugger disabled
  1941                           ;	Extended Instruction Set Enable bit
  1942                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1943  300003                     	org	3145731
  1944  300003  FF                 	db	255
  1945                           
  1946                           ;Config register CONFIG3L @ 0x300004
  1947                           ;	WDT Period Select bits
  1948                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1949                           ;	WDT operating mode
  1950                           ;	WDTE = OFF, WDT Disabled
  1951  300004                     	org	3145732
  1952  300004  9F                 	db	159
  1953                           
  1954                           ;Config register CONFIG3H @ 0x300005
  1955                           ;	WDT Window Select bits
  1956                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1957                           ;	WDT input clock selector
  1958                           ;	WDTCCS = SC, Software Control
  1959  300005                     	org	3145733
  1960  300005  FF                 	db	255
  1961                           
  1962                           ;Config register CONFIG4L @ 0x300006
  1963                           ;	Write Protection Block 0
  1964                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1965                           ;	Write Protection Block 1
  1966                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1967                           ;	Write Protection Block 2
  1968                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1969                           ;	Write Protection Block 3
  1970                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1971  300006                     	org	3145734
  1972  300006  FF                 	db	255
  1973                           
  1974                           ;Config register CONFIG4H @ 0x300007
  1975                           ;	Configuration Register Write Protection bit
  1976                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  1977                           ;	Boot Block Write Protection bit
  1978                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1979                           ;	Data EEPROM Write Protection bit
  1980                           ;	WRTD = OFF, Data EEPROM not write-protected
  1981                           ;	Scanner Enable bit
  1982                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  1983                           ;	Low Voltage Programming Enable bit
  1984                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1985  300007                     	org	3145735
  1986  300007  FF                 	db	255
  1987                           
  1988                           ;Config register CONFIG5L @ 0x300008
  1989                           ;	UserNVM Program Memory Code Protection bit
  1990                           ;	CP = OFF, UserNVM code protection disabled
  1991                           ;	DataNVM Memory Code Protection bit
  1992                           ;	CPD = OFF, DataNVM code protection disabled
  1993  300008                     	org	3145736
  1994  300008  FF                 	db	255
  1995                           
  1996                           ;Config register CONFIG5H @ 0x300009
  1997                           ;	unspecified, using default values
  1998  300009                     	org	3145737
  1999  300009  FF                 	db	255
  2000                           
  2001                           ;Config register CONFIG6L @ 0x30000A
  2002                           ;	Table Read Protection Block 0
  2003                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2004                           ;	Table Read Protection Block 1
  2005                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2006                           ;	Table Read Protection Block 2
  2007                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2008                           ;	Table Read Protection Block 3
  2009                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2010  30000A                     	org	3145738
  2011  30000A  FF                 	db	255
  2012                           
  2013                           ;Config register CONFIG6H @ 0x30000B
  2014                           ;	Boot Block Table Read Protection bit
  2015                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2016  30000B                     	org	3145739
  2017  30000B  FF                 	db	255
  2018                           tosu	equ	0xFFF
  2019                           tosh	equ	0xFFE
  2020                           tosl	equ	0xFFD
  2021                           stkptr	equ	0xFFC
  2022                           pclatu	equ	0xFFB
  2023                           pclath	equ	0xFFA
  2024                           pcl	equ	0xFF9
  2025                           tblptru	equ	0xFF8
  2026                           tblptrh	equ	0xFF7
  2027                           tblptrl	equ	0xFF6
  2028                           tablat	equ	0xFF5
  2029                           prodh	equ	0xFF4
  2030                           prodl	equ	0xFF3
  2031                           indf0	equ	0xFEF
  2032                           postinc0	equ	0xFEE
  2033                           postdec0	equ	0xFED
  2034                           preinc0	equ	0xFEC
  2035                           plusw0	equ	0xFEB
  2036                           fsr0h	equ	0xFEA
  2037                           fsr0l	equ	0xFE9
  2038                           wreg	equ	0xFE8
  2039                           indf1	equ	0xFE7
  2040                           postinc1	equ	0xFE6
  2041                           postdec1	equ	0xFE5
  2042                           preinc1	equ	0xFE4
  2043                           plusw1	equ	0xFE3
  2044                           fsr1h	equ	0xFE2
  2045                           fsr1l	equ	0xFE1
  2046                           bsr	equ	0xFE0
  2047                           indf2	equ	0xFDF
  2048                           postinc2	equ	0xFDE
  2049                           postdec2	equ	0xFDD
  2050                           preinc2	equ	0xFDC
  2051                           plusw2	equ	0xFDB
  2052                           fsr2h	equ	0xFDA
  2053                           fsr2l	equ	0xFD9
  2054                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      4      17
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     588
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     588
                    _ADCC_Initialize
                  _EUSART_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     294
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0       0
                                              0 COMRAM     2     2      0
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
 ---------------------------------------------------------------------------------
 (5) _INT2_ISR                                             0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT2_CallBack                                        0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT1_CallBack                                        0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT0_CallBack                                        0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _INT0_ISR
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _INT2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      4      11       1       18.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      11      18        0.0%
DATA                 0      0      11       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jan 03 21:54:01 2022

                                           l41 02CC                                             l28 02D6  
                                           l60 0182                                             l54 02C2  
                                           l67 02B2                                             l68 02B2  
                                          l143 0142                                            l312 01C0  
                                          l351 02EA                                            l263 0268  
                                          l416 00F2                                            l354 02E0  
                                          l434 0316                                            l266 029C  
                                          l357 02F4                                            l269 0284  
                   ??_INT0_SetInterruptHandler 0011                 ?_EUSART_SetFramingErrorHandler 000F  
                      __size_of_PMD_Initialize 001C                                            tosl 000FFD  
                                _INT0_CallBack 021E                                  _INT1_CallBack 01F0  
                                         l1223 00F4                                           l1231 009C  
                                         l1225 0314                                           l1241 00D0  
                                         l1233 009E                                           l1243 00D2  
                                         l1235 00AE                                           l1227 026A  
                                         l1245 00D4                                           l1237 00CC  
                                         l1229 0090                                           l1247 00D6  
                                         l1239 00CE                                           l1601 01BC  
                                         l1249 0286                                           l1611 025C  
                                         l1603 024C                                           l1613 0260  
                                         l1605 0250                                           l1615 0264  
                                         l1607 0254                                           l1609 0258  
                                         l1617 02AE                                           l1571 02D8  
                                         l1563 02CE                                           l1573 02EC  
                                         l1565 02C4                                           l1581 015A  
                                         l1567 02BA                                           l1591 017E  
                                         l1583 015C                                           l1575 0144  
                                         l1569 02E2                                           l1593 0184  
                                         l1585 016A                                           l1577 014A  
                                         l1595 0198                                           l1587 016E  
                                         l1579 0156                                           l1597 01A4  
                                         l1589 0170                                           l1599 01B0  
                                         _LATA 000F83                                           _LATB 000F84  
                                         _LATC 000F85                                           _PMD0 000EE1  
                                         _PMD1 000EE2                                           _PMD2 000EE3  
                                         _PMD3 000EE4                                           _PMD4 000EE5  
                                         _PMD5 000EE6                                           i2l21 0312  
                                         i2l31 031C                                           i2l25 024A  
                                         i2l34 0308                                           i2l51 01EE  
                                         i2l44 031A                                           i2l38 021C  
                                         i2l47 02FE                                           i2l57 0318  
                                         _WPUA 000F10                                           _WPUB 000F18  
                                         _WPUC 000F20                                           _WPUE 000F2D  
                                _INT2_CallBack 01C2                                           _main 02AE  
                                         btemp 0012              __size_of_INT2_SetInterruptHandler 000A  
                    ?_INT2_SetInterruptHandler 000F                                           start 008C  
                                 ___param_bank 000000                               __end_of_INT0_ISR 0314  
                             __end_of_INT1_ISR 030A                               __end_of_INT2_ISR 0300  
               __size_of_OSCILLATOR_Initialize 0018                  __end_of_OSCILLATOR_Initialize 029E  
                                        _ADACQ 000F5C                                          _ADCAP 000F5D  
                                        _ADACT 000F56                                          ?_main 000D  
                                        _ADCLK 000F57                                          _ADCNT 000F67  
                                        _ADPCH 000F5F                                          _ADREF 000F58  
                                        _ADPRE 000F5E                                          _ADRPT 000F66  
                                        i2l441 005C                                          i2l442 0080  
                                        i2l445 0080                                          i2l439 0038  
                                        _OSCEN 000EDC                                          _TRISA 000F88  
                                        _TRISB 000F89                                 ?_INT0_CallBack 000D  
                                        _TRISC 000F8A                                          _RXPPS 000EB5  
                               ?_INT1_CallBack 000D                 ??_INT1_DefaultInterruptHandler 000D  
                               ?_INT2_CallBack 000D                       _INT1_SetInterruptHandler 02C4  
                                        pclath 000FFA                                          ttemp5 0013  
                                        ttemp6 0016                                          ttemp7 001A  
                                        status 000FD8                                          wtemp8 0013  
                              __initialization 029E                                   __end_of_main 02BA  
                  ?_INTERRUPT_InterruptManager 000D                                         ??_main 0011  
                                __activetblptr 000002                                         _ADACCH 000F71  
                                       _ADACCL 000F70              _EUSART_DefaultFramingErrorHandler 000000  
                                       _ADCON0 000F60                                         _ADCON1 000F59  
                                       _ADCON2 000F5A                                         _ADCON3 000F5B  
                   _EUSART_OverrunErrorHandler 0003                                         _ADERRH 000F6F  
                                       _ADERRL 000F6E                                         _ADLTHH 000F6B  
                                       _ADLTHL 000F6A                                         _ADRESH 000F64  
                                       _ADRESL 000F63                                         _ADSTAT 000F65  
                                       _ADUTHH 000F6D                                         _ADUTHL 000F6C  
                                       _ANSELA 000F11                                         _ANSELB 000F19  
                                       _ANSELC 000F21                                         _RC1REG 000F99  
                                       _RC1STA 000F9D                                         _ODCONA 000F0F  
                                       _ODCONB 000F17                                         _ODCONC 000F1F  
                                       _RC6PPS 000EFD                                         i2l1201 01C2  
                                       i2l1203 01D4                                         i2l1261 030A  
                                       i2l1263 030E                                         i2l1271 02FA  
                                       i2l1431 0054                                         i2l1423 0012  
                                       i2l1193 021E                                         i2l1265 0300  
                                       i2l1433 006A                                         i2l1425 0022  
                                       i2l1195 0230                                         i2l1267 0304  
                                       i2l1435 0078                                         i2l1427 0030  
                                       i2l1197 01F0                                         i2l1269 02F6  
                                       i2l1429 0046                                         i2l1199 0202  
                                       _INLVLA 000F0D                                         _INLVLB 000F15  
                                       _INLVLC 000F1D                                         _INLVLE 000F2A  
                                       _TABLAT 000FF5                                         _OSCFRQ 000EDE  
                                       _NVMDAT 000F80                                         _TX1REG 000F9A  
                                       i2u1_40 0230                                         i2u1_41 022C  
                                       i2u2_48 0236                                         i2u3_40 0202  
                                       i2u2_49 024A                                         i2u3_41 01FE  
                                       _TX1STA 000F9E                                         i2u4_48 0208  
                                       i2u5_40 01D4                                         i2u4_49 021C  
                                       i2u5_41 01D0                                         i2u6_48 01DA  
                                       i2u6_49 01EE                                         isa$std 000001  
                              ??_INT0_CallBack 000D                                _ADCC_Initialize 00F4  
                               _PMD_Initialize 026A           __end_of_INT2_DefaultInterruptHandler 031A  
        __size_of_INT2_DefaultInterruptHandler 0002                   _INT2_DefaultInterruptHandler 0318  
                              ??_INT1_CallBack 000D                                         tblptru 000FF8  
                              ??_INT2_CallBack 000D       INT2_SetInterruptHandler@InterruptHandler 000F  
     INT1_SetInterruptHandler@InterruptHandler 000F       INT0_SetInterruptHandler@InterruptHandler 000F  
                __size_of_INTERRUPT_Initialize 0004                              _SYSTEM_Initialize 024C  
                                   __accesstop 0060                        __end_of__initialization 02A0  
                                    ?_INT0_ISR 000D                                      ?_INT1_ISR 000D  
                                    ?_INT2_ISR 000D                             ?_SYSTEM_Initialize 000D  
                                ___rparam_used 000001                                 __pcstackCOMRAM 000D  
                          ??_SYSTEM_Initialize 0011                         __end_of_PMD_Initialize 0286  
                  __size_of_EXT_INT_Initialize 0040               __end_of_INT2_SetInterruptHandler 02C4  
              fp__INT2_DefaultInterruptHandler 0000                  ?_INT2_DefaultInterruptHandler 000D  
              ??_EUSART_SetOverrunErrorHandler 0011                      __end_of_SYSTEM_Initialize 026A  
                        _INT0_InterruptHandler 000B                                     ??_INT0_ISR 000D  
                                   ??_INT1_ISR 000D                                     ??_INT2_ISR 000D  
                                   __pnvCOMRAM 0001                        __end_of_ADCC_Initialize 0144  
                                      _ADFLTRH 000F73                                        _ADFLTRL 000F72  
                                      _ADPREVH 000F62                                        _ADPREVL 000F61  
                                      _ADSTPTH 000F69                                        _ADSTPTL 000F68  
                              ?_PMD_Initialize 000D                     ??_INT1_SetInterruptHandler 0011  
                                      _INT0PPS 000EA1                                        _INT1PPS 000EA2  
                                      _INT2PPS 000EA3                                        _SP1BRGH 000F9C  
                                      _SP1BRGL 000F9B                                        _OSCCON1 000ED8  
                                      _OSCCON3 000EDA                                        _TBLPTRH 000FF7  
                                      _TBLPTRL 000FF6                                        _TBLPTRU 000FF8  
                                      i2u13_40 0022                                        i2u13_41 001E  
                                      i2u14_40 0030                                        i2u14_41 002C  
                                      i2u15_40 0046                                        i2u15_41 0042  
                                      i2u16_40 0054                                        i2u16_41 0050  
                                      i2u17_40 006A                                        i2u17_41 0066  
                                      i2u18_40 0078                                        i2u18_41 0074  
                                      _NVMADRL 000F7E                                        _OSCTUNE 000EDD  
                                      _NVMCON2 000F82                                        _SLRCONA 000F0E  
                                      _SLRCONB 000F16                                        _SLRCONC 000F1E  
                     ??_EUSART_SetErrorHandler 0011              __size_of_INT0_SetInterruptHandler 000A  
                    ?_INT0_SetInterruptHandler 000F                                        __Hparam 0000  
                                      __Lparam 0000                                        __pcinit 029E  
                                      __ramtop 0800                                        __ptext0 02AE  
                                      __ptext1 024C                                        __ptext2 026A  
                                      __ptext3 0090                                        __ptext4 0286  
                                      __ptext5 0314                                        __ptext6 0144  
                                      __ptext7 02BA                                        __ptext8 02C4  
                                      __ptext9 02CE                          _OSCILLATOR_Initialize 0286  
                     ??_PIN_MANAGER_Initialize 000F                     __size_of_SYSTEM_Initialize 001E  
                         end_of_initialization 02A0                       _INT2_SetInterruptHandler 02BA  
               ??_INT2_DefaultInterruptHandler 000D          __end_of_EUSART_SetOverrunErrorHandler 02E2  
       __size_of_EUSART_SetOverrunErrorHandler 000A                  _EUSART_SetOverrunErrorHandler 02D8  
                                __Lmediumconst 0000                              _EUSART_Initialize 0184  
                           ?_EUSART_Initialize 000D                               ?_ADCC_Initialize 000D  
                          ??_EUSART_Initialize 0011                          _INT1_InterruptHandler 0009  
              __size_of_EUSART_SetErrorHandler 000A                      __end_of_EUSART_Initialize 01C2  
                            __size_of_INT0_ISR 000A                              __size_of_INT1_ISR 000A  
                            __size_of_INT2_ISR 000A                   __end_of_INTERRUPT_Initialize 0318  
         __end_of_INT0_DefaultInterruptHandler 031E          __size_of_INT0_DefaultInterruptHandler 0002  
                 _INT0_DefaultInterruptHandler 031C                     _EUSART_DefaultErrorHandler 000000  
                       ?_OSCILLATOR_Initialize 000D                          __end_of_INT0_CallBack 024C  
                          start_initialization 029E                __size_of_PIN_MANAGER_Initialize 0064  
                        __end_of_INT1_CallBack 021E                          __end_of_INT2_CallBack 01F0  
               ?_EUSART_SetOverrunErrorHandler 000F                     _EUSART_FramingErrorHandler 0005  
                             ??_PMD_Initialize 000F                         _EUSART_SetErrorHandler 02EC  
                   __end_of_EXT_INT_Initialize 0184                fp__INT0_DefaultInterruptHandler 0000  
                ?_INT0_DefaultInterruptHandler 000D                                    __pbssCOMRAM 0011  
             __end_of_INT0_SetInterruptHandler 02D8                     __size_of_EUSART_Initialize 003E  
                        _INT2_InterruptHandler 0007                         _PIN_MANAGER_Initialize 0090  
                                    __pintcode 0008                   ??_INTERRUPT_InterruptManager 000D  
                                     _BAUD1CON 000F9F                     ??_INT2_SetInterruptHandler 0011  
                         _INTERRUPT_Initialize 0314                                       _INT0_ISR 030A  
                                     _INT1_ISR 0300                                       _INT2_ISR 02F6  
       EUSART_SetErrorHandler@interruptHandler 000F              __size_of_INT1_SetInterruptHandler 000A  
                    ?_INT1_SetInterruptHandler 000F                                       _PIE0bits 000EC2  
                            _eusartRxLastError 0011            __size_of_INTERRUPT_InterruptManager 0084  
                                     _PIR0bits 000ECA                ??_EUSART_SetFramingErrorHandler 0011  
                                     _PIR3bits 000ECD                                       _PIR7bits 000ED1  
            _EUSART_DefaultOverrunErrorHandler 000000                                     _ADCON0bits 000F60  
                                   _ADCON1bits 000F59                                     _ADCON2bits 000F5A  
                                   _ADCON3bits 000F5B                 ??_INT0_DefaultInterruptHandler 000D  
                        ?_INTERRUPT_Initialize 000D                       _INT0_SetInterruptHandler 02CE  
                                   _ADSTATbits 000F65                                       __Hrparam 0000  
                                     __Lrparam 0000                        ??_OSCILLATOR_Initialize 000F  
                          _EUSART_ErrorHandler 0001                       __size_of_ADCC_Initialize 0050  
                                     __ptext10 0184                                       __ptext11 02D8  
                                     __ptext20 01F0                                       __ptext12 02E2  
                                     __ptext21 031A                                       __ptext13 02EC  
                                     __ptext22 030A                                       __ptext14 00F4  
                                     __ptext23 021E                                       __ptext24 031C  
                                     __ptext16 02F6                                       __ptext25 0000  
                                     __ptext17 01C2                                       __ptext18 0318  
                                     __ptext19 0300                                  __size_of_main 000C  
                      ?_EUSART_SetErrorHandler 000F                                     _RC1STAbits 000F9D  
EUSART_SetOverrunErrorHandler@interruptHandler 000F                                       isa$xinst 000000  
                                     int$flags 0012             __end_of_INTERRUPT_InterruptManager 008C  
                   _INTERRUPT_InterruptManager 0008          __end_of_EUSART_SetFramingErrorHandler 02EC  
       __size_of_EUSART_SetFramingErrorHandler 000A                  _EUSART_SetFramingErrorHandler 02E2  
         __end_of_INT1_DefaultInterruptHandler 031C          __size_of_INT1_DefaultInterruptHandler 0002  
                 _INT1_DefaultInterruptHandler 031A                                     _INTCONbits 000FF2  
                                  _NVMCON1bits 000F81                         ??_INTERRUPT_Initialize 000F  
                           _EXT_INT_Initialize 0144                                       intlevel2 0000  
                      ?_PIN_MANAGER_Initialize 000D                 __end_of_EUSART_SetErrorHandler 02F6  
                          ?_EXT_INT_Initialize 000D                         __size_of_INT0_CallBack 002E  
                       __size_of_INT1_CallBack 002E  EUSART_SetFramingErrorHandler@interruptHandler 000F  
                       __size_of_INT2_CallBack 002E                           ??_EXT_INT_Initialize 0011  
              fp__INT1_DefaultInterruptHandler 0000                  ?_INT1_DefaultInterruptHandler 000D  
             __end_of_INT1_SetInterruptHandler 02CE                                     _TX1STAbits 000F9E  
               __end_of_PIN_MANAGER_Initialize 00F4                              ??_ADCC_Initialize 000F  
